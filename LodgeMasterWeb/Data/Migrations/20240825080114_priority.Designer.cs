// <auto-generated />
using System;
using LodgeMasterWeb.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LodgeMasterWeb.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240825080114_priority")]
    partial class priority
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.26")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("LodgeMasterWeb.Core.Models.ApplicationRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CompanyID")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("bActive")
                        .HasColumnType("int");

                    b.Property<int>("isDefault")
                        .HasColumnType("int");

                    b.Property<int>("isDeleted")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("LodgeMasterWeb.Core.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("CompanyID")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateEmpID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartmentID")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("IsDeleted")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Photopath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("bActive")
                        .HasColumnType("int");

                    b.Property<string>("bPhoto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("dtpasswordupdate")
                        .HasColumnType("datetime2");

                    b.Property<int>("expiredate")
                        .HasColumnType("int");

                    b.Property<int>("iSorted")
                        .HasColumnType("int");

                    b.Property<int>("supervisor")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("LodgeMasterWeb.Core.Models.AttachmentFile", b =>
                {
                    b.Property<string>("FileID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CompanyID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateEmpID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("FileSize")
                        .HasColumnType("bigint");

                    b.Property<string>("FileType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrderID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("bShow")
                        .HasColumnType("int");

                    b.Property<int>("bStatus")
                        .HasColumnType("int");

                    b.HasKey("FileID");

                    b.ToTable("AttachmentFiles");
                });

            modelBuilder.Entity("LodgeMasterWeb.Core.Models.BasketTemp", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"), 1L, 1);

                    b.Property<string>("BasketID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartmentID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmpAssignID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmpID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.HasKey("OrderId");

                    b.ToTable("BasketTemps");
                });

            modelBuilder.Entity("LodgeMasterWeb.Core.Models.chatbothook", b =>
                {
                    b.Property<string>("cbId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Answer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AnswerCount")
                        .HasColumnType("int");

                    b.Property<int>("AnswerId")
                        .HasColumnType("int");

                    b.Property<string>("CompanyID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateEmpID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteEmpID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IsDeleted")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.Property<int>("bActive")
                        .HasColumnType("int");

                    b.HasKey("cbId");

                    b.ToTable("chatbothooks");
                });

            modelBuilder.Entity("LodgeMasterWeb.Core.Models.ColorCategory", b =>
                {
                    b.Property<int>("ColorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ColorId"), 1L, 1);

                    b.Property<string>("ColorValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Sorted")
                        .HasColumnType("int");

                    b.HasKey("ColorId");

                    b.ToTable("ColorsCategory");
                });

            modelBuilder.Entity("LodgeMasterWeb.Core.Models.Company", b =>
                {
                    b.Property<string>("CompanyID")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("CompanyFolder")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CompanyNameLogin")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("CompanyName_A")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("CompanyName_E")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Companylogin")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("CounterUsers")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateCompany")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<long>("EndDate")
                        .HasColumnType("bigint");

                    b.Property<int>("GenerateRoom")
                        .HasColumnType("int");

                    b.Property<string>("MasterEmail")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PersonName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long>("StartDate")
                        .HasColumnType("bigint");

                    b.Property<int>("bActive")
                        .HasColumnType("int");

                    b.Property<int>("isDeleted")
                        .HasColumnType("int");

                    b.Property<int>("isDemo")
                        .HasColumnType("int");

                    b.HasKey("CompanyID");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("LodgeMasterWeb.Core.Models.CompanyBranche", b =>
                {
                    b.Property<string>("BrancheID")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("BrancheDesc")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("BrancheName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("CompanyID")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateEmpID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteEmpID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IsDeleted")
                        .HasColumnType("int");

                    b.Property<int>("bActive")
                        .HasColumnType("int");

                    b.HasKey("BrancheID");

                    b.ToTable("CompanyBarnches");
                });

            modelBuilder.Entity("LodgeMasterWeb.Core.Models.CompanyLinkBrancheUser", b =>
                {
                    b.Property<string>("CompanyLinkUTBID")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("BrancheID")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("UserID")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("CompanyLinkUTBID");

                    b.ToTable("CompanyLinkBrancheUsers");
                });

            modelBuilder.Entity("LodgeMasterWeb.Core.Models.CompanyUnit", b =>
                {
                    b.Property<string>("LocationID")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("BranchID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyID")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("CreateEmpID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FloorID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocDesc")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("LocGroup")
                        .HasColumnType("int");

                    b.Property<int>("LocType")
                        .HasColumnType("int");

                    b.Property<string>("LocationName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("UnitCat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("bActive")
                        .HasColumnType("int");

                    b.Property<int>("iSorted")
                        .HasColumnType("int");

                    b.Property<int>("isDeleted")
                        .HasColumnType("int");

                    b.HasKey("LocationID");

                    b.ToTable("CompanyUnits");
                });

            modelBuilder.Entity("LodgeMasterWeb.Core.Models.CompanyUnitCat", b =>
                {
                    b.Property<string>("UnitCatId")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("CompanyID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateEmpID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteEmpID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IsDeleted")
                        .HasColumnType("int");

                    b.Property<string>("UnitCatColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitCatDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitCatName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("bActive")
                        .HasColumnType("int");

                    b.HasKey("UnitCatId");

                    b.ToTable("CompanyUnitsCat");
                });

            modelBuilder.Entity("LodgeMasterWeb.Core.Models.CompanyUnitCatType", b =>
                {
                    b.Property<string>("UnitCatTypeId")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("CompanyID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateEmpID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteEmpID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IsDeleted")
                        .HasColumnType("int");

                    b.Property<string>("UnitCatTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("bActive")
                        .HasColumnType("int");

                    b.HasKey("UnitCatTypeId");

                    b.ToTable("CompanyUnitsCatType");
                });

            modelBuilder.Entity("LodgeMasterWeb.Core.Models.CompanyUnitFloor", b =>
                {
                    b.Property<string>("FloorId")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BranchID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FloorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("bActive")
                        .HasColumnType("int");

                    b.Property<int>("iSorted")
                        .HasColumnType("int");

                    b.HasKey("FloorId");

                    b.ToTable("CompanyUnitFloors");
                });

            modelBuilder.Entity("LodgeMasterWeb.Core.Models.CompanyUnitLinkCatType", b =>
                {
                    b.Property<string>("LinkCartypeAndCatID")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("CompanyID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitCatId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitCatTypeId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LinkCartypeAndCatID");

                    b.ToTable("CompanyUnitsLinkCatType");
                });

            modelBuilder.Entity("LodgeMasterWeb.Core.Models.Department", b =>
                {
                    b.Property<string>("DepartmentID")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("CompanyID")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateEmpID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteEmpID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepName_A")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("DepName_E")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("IsDeleted")
                        .HasColumnType("int");

                    b.Property<int>("bActive")
                        .HasColumnType("int");

                    b.Property<int>("iSorted")
                        .HasColumnType("int");

                    b.HasKey("DepartmentID");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("LodgeMasterWeb.Core.Models.Employee", b =>
                {
                    b.Property<string>("EmpID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CompanyID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateEmpID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartmentID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LangDef")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photopath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserLogin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("User_cd")
                        .HasColumnType("int");

                    b.Property<int>("bActive")
                        .HasColumnType("int");

                    b.Property<int>("bActiveAccept")
                        .HasColumnType("int");

                    b.Property<string>("bPhoto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("dtpasswordupdate")
                        .HasColumnType("datetime2");

                    b.Property<int>("expiredate")
                        .HasColumnType("int");

                    b.Property<int>("iSorted")
                        .HasColumnType("int");

                    b.Property<int>("isDeleted")
                        .HasColumnType("int");

                    b.Property<string>("mobile")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("supervisor")
                        .HasColumnType("int");

                    b.HasKey("EmpID");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("LodgeMasterWeb.Core.Models.FlowChartAction", b =>
                {
                    b.Property<string>("FCActionID")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ActionAnwser")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayAnswer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FCDetailsID")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("NoAnswer")
                        .HasColumnType("int");

                    b.Property<int>("Sorted")
                        .HasColumnType("int");

                    b.Property<int>("bActive")
                        .HasColumnType("int");

                    b.Property<string>("conditionAnwser")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("isNextAnwser")
                        .HasColumnType("int");

                    b.HasKey("FCActionID");

                    b.ToTable("FlowChartActions");
                });

            modelBuilder.Entity("LodgeMasterWeb.Core.Models.FlowChartDetail", b =>
                {
                    b.Property<string>("FCDetailsID")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ActionAnwser")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BodyMessage_A")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BodyMessage_E")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CondationAnwser")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FlowchartID")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("FooterMessage_A")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FooterMessage_E")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HeaderMessage_A")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HeaderMessage_E")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MultiAnwser")
                        .HasColumnType("int");

                    b.Property<int>("Sorted")
                        .HasColumnType("int");

                    b.Property<int>("bActive")
                        .HasColumnType("int");

                    b.HasKey("FCDetailsID");

                    b.ToTable("FlowChartDetails");
                });

            modelBuilder.Entity("LodgeMasterWeb.Core.Models.FlowChartMaster", b =>
                {
                    b.Property<string>("FlowchartID")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("CompanyID")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("FlowchartName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("bActive")
                        .HasColumnType("int");

                    b.HasKey("FlowchartID");

                    b.ToTable("FlowChartMasters");
                });

            modelBuilder.Entity("LodgeMasterWeb.Core.Models.GoalDetail", b =>
                {
                    b.Property<string>("GoalDetailsID")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<decimal>("CR")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CompanyUnitId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GoalId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TT")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VIP")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GoalDetailsID");

                    b.ToTable("GoalsDetail");
                });

            modelBuilder.Entity("LodgeMasterWeb.Core.Models.GoalMaster", b =>
                {
                    b.Property<string>("GoalId")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("BranchID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmpID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("dt_stamp")
                        .HasColumnType("datetime2");

                    b.HasKey("GoalId");

                    b.ToTable("GoalsMaster");
                });

            modelBuilder.Entity("LodgeMasterWeb.Core.Models.InspectionBasket", b =>
                {
                    b.Property<int>("InspectionBasketId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InspectionBasketId"), 1L, 1);

                    b.Property<string>("CommetAnswer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyID")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("CurrntQuestion")
                        .HasColumnType("int");

                    b.Property<string>("InspectionGUID")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("InspectionId")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("InspectionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocationID")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("LocationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PicAnswer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuestionId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuestionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuestionNo")
                        .HasColumnType("int");

                    b.Property<string>("QuestionTotal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SortQuestion")
                        .HasColumnType("int");

                    b.Property<int>("UserAnswer")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("dtEntry")
                        .HasColumnType("datetime2");

                    b.HasKey("InspectionBasketId");

                    b.ToTable("InspectionBaskets");
                });

            modelBuilder.Entity("LodgeMasterWeb.Core.Models.InspectionDep", b =>
                {
                    b.Property<string>("InspDepId")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("CompanyID")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateEmpID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteEmpID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InspDepName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InspInfoId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IsDeleted")
                        .HasColumnType("int");

                    b.Property<int>("bActive")
                        .HasColumnType("int");

                    b.Property<int>("iSorted")
                        .HasColumnType("int");

                    b.HasKey("InspDepId");

                    b.ToTable("InspectionDeps");
                });

            modelBuilder.Entity("LodgeMasterWeb.Core.Models.InspectionDet", b =>
                {
                    b.Property<long>("DetailID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("DetailID"), 1L, 1);

                    b.Property<string>("CommetAnswer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CommetAnswerAfter")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DoneCreate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InspectionID")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("PartID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PicAfter")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PicAfterCreate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PicBeforCreate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PicBefore")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuestionDisplay")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuestionID")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("UserAnswer")
                        .HasColumnType("int");

                    b.Property<int>("UserAnswerAfter")
                        .HasColumnType("int");

                    b.Property<int>("bDone")
                        .HasColumnType("int");

                    b.Property<int>("iSorted")
                        .HasColumnType("int");

                    b.HasKey("DetailID");

                    b.ToTable("InspectionsDet");
                });

            modelBuilder.Entity("LodgeMasterWeb.Core.Models.InspectionInfo", b =>
                {
                    b.Property<string>("InspInfoId")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("CompanyID")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateEmpID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteEmpID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartmentID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InspDesc")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("InspName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("InspToCreateOrder")
                        .HasColumnType("int");

                    b.Property<int>("IsDeleted")
                        .HasColumnType("int");

                    b.Property<int>("bActive")
                        .HasColumnType("int");

                    b.HasKey("InspInfoId");

                    b.ToTable("InspectionInfos");
                });

            modelBuilder.Entity("LodgeMasterWeb.Core.Models.InspectionLinkInspLocation", b =>
                {
                    b.Property<string>("LinkInspLocID")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("CompanyID")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("InspectionId")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("LocationId")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("bActive")
                        .HasColumnType("int");

                    b.HasKey("LinkInspLocID");

                    b.ToTable("InspectionLinkInspLocations");
                });

            modelBuilder.Entity("LodgeMasterWeb.Core.Models.InspectionLinkPartQuestion", b =>
                {
                    b.Property<string>("LinkPQID")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("CompanyID")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("InspectionId")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("PartID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuestionID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("iSorted")
                        .HasColumnType("int");

                    b.Property<int>("isDeleted")
                        .HasColumnType("int");

                    b.Property<int>("isPublish")
                        .HasColumnType("int");

                    b.HasKey("LinkPQID");

                    b.ToTable("InspectionLinkPartQuestions");
                });

            modelBuilder.Entity("LodgeMasterWeb.Core.Models.InspectionMaster", b =>
                {
                    b.Property<string>("InspectionID")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("CompanyID")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateEmpID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmpDepId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InspInfoId")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("LocationID")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("isDeleted")
                        .HasColumnType("int");

                    b.Property<string>("statusName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("InspectionID");

                    b.ToTable("InspectionsMaster");
                });

            modelBuilder.Entity("LodgeMasterWeb.Core.Models.InspectionQuestion", b =>
                {
                    b.Property<string>("QuestionID")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("CompanyID")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateEmpID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteEmpID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IsDeleted")
                        .HasColumnType("int");

                    b.Property<string>("QuestionDisplay")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("bActive")
                        .HasColumnType("int");

                    b.HasKey("QuestionID");

                    b.ToTable("InspectionQuestions");
                });

            modelBuilder.Entity("LodgeMasterWeb.Core.Models.Item", b =>
                {
                    b.Property<string>("ItemID")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("CompanyID")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateEmpID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteEmpID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartmentID")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("IsDeleted")
                        .HasColumnType("int");

                    b.Property<string>("ItemIDDefault")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemName_A")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ItemName_E")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("ItemStock")
                        .HasColumnType("int");

                    b.Property<int>("ItemType")
                        .HasColumnType("int");

                    b.Property<int>("Item_cd")
                        .HasColumnType("int");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.Property<string>("UserCreate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("bActive")
                        .HasColumnType("int");

                    b.Property<int>("iSorted")
                        .HasColumnType("int");

                    b.Property<int>("isDefault")
                        .HasColumnType("int");

                    b.Property<int>("isInspection")
                        .HasColumnType("int");

                    b.Property<int>("isQty")
                        .HasColumnType("int");

                    b.Property<int>("isService")
                        .HasColumnType("int");

                    b.Property<int>("minQty")
                        .HasColumnType("int");

                    b.Property<int>("priorityOrder")
                        .HasColumnType("int");

                    b.HasKey("ItemID");

                    b.HasIndex("DepartmentID");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("LodgeMasterWeb.Core.Models.ItemLinkDepartment", b =>
                {
                    b.Property<string>("LinkItemDepID")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("CompanyID")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("DepartmentID")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ItemID")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("LinkItemDepID");

                    b.ToTable("ItemsLinkDepartment");
                });

            modelBuilder.Entity("LodgeMasterWeb.Core.Models.ItemService", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("CompanyID")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("IsDeleted")
                        .HasColumnType("int");

                    b.Property<string>("ItemID")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ItemIDSub")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.Property<int>("iSorted")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("ItemServices");
                });

            modelBuilder.Entity("LodgeMasterWeb.Core.Models.Level", b =>
                {
                    b.Property<string>("LevelID")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("CompanyID")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateEmpID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteEmpID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IsDeleted")
                        .HasColumnType("int");

                    b.Property<string>("LevelName_AR")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("LevelName_EN")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("bActive")
                        .HasColumnType("int");

                    b.Property<int>("isDefault")
                        .HasColumnType("int");

                    b.HasKey("LevelID");

                    b.ToTable("Levels");
                });

            modelBuilder.Entity("LodgeMasterWeb.Core.Models.Menu", b =>
                {
                    b.Property<int>("MenuID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MenuID"), 1L, 1);

                    b.Property<string>("CompanyID")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("MenuText_A")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MenuText_Ben")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MenuText_E")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MenuText_Ind")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MenuText_Nep")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("bActive")
                        .HasColumnType("int");

                    b.Property<int>("iFormID")
                        .HasColumnType("int");

                    b.Property<int>("iParentID")
                        .HasColumnType("int");

                    b.Property<int>("iSorted")
                        .HasColumnType("int");

                    b.Property<string>("sIcon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MenuID");

                    b.ToTable("Menus");
                });

            modelBuilder.Entity("LodgeMasterWeb.Core.Models.OrderAction", b =>
                {
                    b.Property<long>("SerialID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("SerialID"), 1L, 1);

                    b.Property<string>("CompanyID")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("OrderID")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("Satatus")
                        .HasColumnType("int");

                    b.Property<string>("SerGUID")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ToDepartment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ToEmp")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserIDAction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("dtAction")
                        .HasColumnType("datetime2");

                    b.Property<string>("sNotes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SerialID");

                    b.ToTable("OrdersAction");
                });

            modelBuilder.Entity("LodgeMasterWeb.Core.Models.OrderDet", b =>
                {
                    b.Property<long>("Order_Det")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Order_Det"), 1L, 1);

                    b.Property<string>("CompanyID")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ItemID")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("OrderID")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("PhotoName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.Property<string>("UserClosed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("dtColsed")
                        .HasColumnType("datetime2");

                    b.Property<int>("isClosed")
                        .HasColumnType("int");

                    b.Property<string>("sItemNotes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Order_Det");

                    b.ToTable("OrdersDet");
                });

            modelBuilder.Entity("LodgeMasterWeb.Core.Models.OrderMaster", b =>
                {
                    b.Property<string>("OrderID")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("CatID")
                        .HasColumnType("int");

                    b.Property<string>("CompanyID")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("DelayTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("DepartmentAssignUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartmentID")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("DeptIDAssign")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ForSuperviser")
                        .HasColumnType("int");

                    b.Property<int>("FromGuest")
                        .HasColumnType("int");

                    b.Property<int>("LinkData")
                        .HasColumnType("int");

                    b.Property<string>("LocationID")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<long>("Order_cd")
                        .HasColumnType("bigint");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<DateTime>("StampAssign")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("TestRecord")
                        .HasColumnType("int");

                    b.Property<string>("UserIDAssign")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserIDCreate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("bDelay")
                        .HasColumnType("int");

                    b.Property<int>("dtCraete")
                        .HasColumnType("int");

                    b.Property<DateTime>("dtCraeteStamp")
                        .HasColumnType("datetime2");

                    b.Property<int>("isInspection")
                        .HasColumnType("int");

                    b.Property<string>("sNotes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OrderID");

                    b.HasIndex("DepartmentID");

                    b.HasIndex("LocationID");

                    b.HasIndex("Status");

                    b.ToTable("OrdersMaster");
                });

            modelBuilder.Entity("LodgeMasterWeb.Core.Models.RoomLinkTypeComUnit", b =>
                {
                    b.Property<string>("LinkTCUID")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("CompanyID")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("LocationID")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("RoomTypeID")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("LinkTCUID");

                    b.ToTable("RoomsLinkTypeComUnit");
                });

            modelBuilder.Entity("LodgeMasterWeb.Core.Models.RoomLinkTypePart", b =>
                {
                    b.Property<string>("LinkTPID")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("CompanyID")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("PartID")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("QuestionID")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("LinkTPID");

                    b.ToTable("RoomsLinkTypePart");
                });

            modelBuilder.Entity("LodgeMasterWeb.Core.Models.RoomPart", b =>
                {
                    b.Property<string>("PartsID")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("CompanyID")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateEmpID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteEmpID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IsDeleted")
                        .HasColumnType("int");

                    b.Property<string>("PartName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("bActive")
                        .HasColumnType("int");

                    b.HasKey("PartsID");

                    b.ToTable("RoomsPart");
                });

            modelBuilder.Entity("LodgeMasterWeb.Core.Models.RoomType", b =>
                {
                    b.Property<string>("RoomTypeID")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("CompanyID")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateEmpID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteEmpID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IsDeleted")
                        .HasColumnType("int");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("bActive")
                        .HasColumnType("int");

                    b.HasKey("RoomTypeID");

                    b.ToTable("RoomsType");
                });

            modelBuilder.Entity("LodgeMasterWeb.Core.Models.StaffSchedule", b =>
                {
                    b.Property<string>("SSId")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("BranchID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CurrntDate")
                        .HasColumnType("int");

                    b.Property<int>("CurrntDay")
                        .HasColumnType("int");

                    b.Property<int>("CurrntMonth")
                        .HasColumnType("int");

                    b.Property<int>("CurrntYear")
                        .HasColumnType("int");

                    b.Property<string>("EmpID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("dt_stamp")
                        .HasColumnType("datetime2");

                    b.HasKey("SSId");

                    b.ToTable("StaffsSchedule");
                });

            modelBuilder.Entity("LodgeMasterWeb.Core.Models.sys_Item", b =>
                {
                    b.Property<int>("ItemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemID"), 1L, 1);

                    b.Property<string>("DefaultID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemName_A")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ItemName_E")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("ItemType")
                        .HasColumnType("int");

                    b.Property<int>("bActive")
                        .HasColumnType("int");

                    b.HasKey("ItemID");

                    b.ToTable("SysItems");
                });

            modelBuilder.Entity("LodgeMasterWeb.Core.Models.sys_Menu", b =>
                {
                    b.Property<int>("MenuID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MenuID"), 1L, 1);

                    b.Property<string>("MenuText_A")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MenuText_Ben")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MenuText_E")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MenuText_Ind")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MenuText_Nep")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("bActive")
                        .HasColumnType("int");

                    b.Property<int>("iFormID")
                        .HasColumnType("int");

                    b.Property<int>("iParentID")
                        .HasColumnType("int");

                    b.Property<int>("iSorted")
                        .HasColumnType("int");

                    b.Property<string>("sIcon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MenuID");

                    b.ToTable("SysMenus");
                });

            modelBuilder.Entity("LodgeMasterWeb.Core.Models.sys_Problem", b =>
                {
                    b.Property<string>("iProblem_Code")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("bActive")
                        .HasColumnType("int");

                    b.Property<int>("iSorted")
                        .HasColumnType("int");

                    b.Property<string>("sProblem_Description_A")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sProblem_Description_Ben")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sProblem_Description_E")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sProblem_Description_Ind")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sProblem_Description_Nep")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sRecommended_Solution_A")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sRecommended_Solution_Ben")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sRecommended_Solution_E")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sRecommended_Solution_Ind")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sRecommended_Solution_Nep")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("iProblem_Code");

                    b.ToTable("SysProblem");
                });

            modelBuilder.Entity("LodgeMasterWeb.Core.Models.sys_Status", b =>
                {
                    b.Property<int>("StatusID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StatusID"), 1L, 1);

                    b.Property<int>("SatausParent")
                        .HasColumnType("int");

                    b.Property<int>("StatusActive")
                        .HasColumnType("int");

                    b.Property<int>("StatusSortShow")
                        .HasColumnType("int");

                    b.Property<string>("Status_A")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Status_E")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("StatusID");

                    b.ToTable("SysStatus");
                });

            modelBuilder.Entity("LodgeMasterWeb.Core.Models.TempFile", b =>
                {
                    b.Property<string>("FileID")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("CompanyID")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("CreateEmpID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("FileSize")
                        .HasColumnType("bigint");

                    b.Property<string>("FileType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrderID")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("bShow")
                        .HasColumnType("int");

                    b.Property<int>("bStatus")
                        .HasColumnType("int");

                    b.HasKey("FileID");

                    b.ToTable("TempFiles");
                });

            modelBuilder.Entity("LodgeMasterWeb.Core.Models.UnitGroup", b =>
                {
                    b.Property<string>("GroupID")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("CompanyID")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateEmpID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteEmpID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("IsDeleted")
                        .HasColumnType("int");

                    b.Property<int>("bActive")
                        .HasColumnType("int");

                    b.HasKey("GroupID");

                    b.ToTable("UnitsGroup");
                });

            modelBuilder.Entity("LodgeMasterWeb.Core.Models.UnitType", b =>
                {
                    b.Property<string>("UnitID")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("CompanyID")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateEmpID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteEmpID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IsDeleted")
                        .HasColumnType("int");

                    b.Property<string>("UnitName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("bActive")
                        .HasColumnType("int");

                    b.HasKey("UnitID");

                    b.ToTable("UnitsType");
                });

            modelBuilder.Entity("LodgeMasterWeb.Core.Models.VMOrders", b =>
                {
                    b.Property<string>("AssignName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AssignPic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyFolder")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyID")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("CreateName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatePic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrentDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DaysDifference")
                        .HasColumnType("int");

                    b.Property<string>("DepName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartmentAssignName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartmentAssignPic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartmentAssignUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartmentID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocationID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocationName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrderID")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<long>("Order_cd")
                        .HasColumnType("bigint");

                    b.Property<int>("RemainingHours")
                        .HasColumnType("int");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<string>("StatusName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StatusSortShow")
                        .HasColumnType("int");

                    b.Property<int>("TestRecord")
                        .HasColumnType("int");

                    b.Property<string>("UserIDAssign")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserIDCreate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("dtCraete")
                        .HasColumnType("int");

                    b.Property<DateTime?>("dtCraeteStamp")
                        .HasColumnType("datetime2");

                    b.Property<int>("isInspection")
                        .HasColumnType("int");

                    b.Property<string>("sNotes")
                        .HasColumnType("nvarchar(max)");

                    b.ToView("VMOrders");
                });

            modelBuilder.Entity("LodgeMasterWeb.Core.ViewModels.AvgTicketsViewModel", b =>
                {
                    b.Property<string>("CompanyID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepName_E")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartmentID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MinuteCount")
                        .HasColumnType("int");

                    b.Property<int>("RecordCount")
                        .HasColumnType("int");

                    b.Property<int>("Satatus")
                        .HasColumnType("int");

                    b.Property<string>("Status_E")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Time_Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToView("VMAvgTickets");
                });

            modelBuilder.Entity("LodgeMasterWeb.Core.ViewModels.InspectionWizardViewModel", b =>
                {
                    b.Property<string>("CommetAnswer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CurrntQuestion")
                        .HasColumnType("int");

                    b.Property<int>("InspectionBasketId")
                        .HasColumnType("int");

                    b.Property<string>("InspectionGUID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InspectionId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InspectionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocationID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PicAnswer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuestionId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuestionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuestionNo")
                        .HasColumnType("int");

                    b.Property<string>("QuestionTotal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SortQuestion")
                        .HasColumnType("int");

                    b.Property<int>("UserAnswer")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("dtEntry")
                        .HasColumnType("datetime2");

                    b.ToTable("InspectionWizardVM");
                });

            modelBuilder.Entity("LodgeMasterWeb.Core.ViewModels.ItemsGridVM", b =>
                {
                    b.Property<string>("CompanyID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartmentID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemIDDefault")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemName_A")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemName_E")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ItemStock")
                        .HasColumnType("int");

                    b.Property<int>("ItemType")
                        .HasColumnType("int");

                    b.Property<int>("Item_cd")
                        .HasColumnType("int");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.Property<string>("ServiceName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StockName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserCreate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("bActive")
                        .HasColumnType("int");

                    b.Property<int>("iSorted")
                        .HasColumnType("int");

                    b.Property<int>("isDefault")
                        .HasColumnType("int");

                    b.Property<int>("isDeleted")
                        .HasColumnType("int");

                    b.Property<int>("isInspection")
                        .HasColumnType("int");

                    b.Property<int>("isService")
                        .HasColumnType("int");

                    b.Property<int>("minQty")
                        .HasColumnType("int");

                    b.ToView("VMItems");
                });

            modelBuilder.Entity("LodgeMasterWeb.Core.ViewModels.OrderActionViewModel", b =>
                {
                    b.Property<string>("AssignDep")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AssignName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedDep")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrentDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DaysDifference")
                        .HasColumnType("int");

                    b.Property<string>("DepName_A")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepName_E")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrderID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RemainingHours")
                        .HasColumnType("int");

                    b.Property<int>("Satatus")
                        .HasColumnType("int");

                    b.Property<string>("SerGUID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("SerialID")
                        .HasColumnType("bigint");

                    b.Property<string>("ToDepartment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ToEmp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserIDAction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("dtAction")
                        .HasColumnType("datetime2");

                    b.Property<string>("sNotes")
                        .HasColumnType("nvarchar(max)");

                    b.ToView("VMOrderAction");
                });

            modelBuilder.Entity("LodgeMasterWeb.Core.ViewModels.TotalItemsViewModel", b =>
                {
                    b.Property<string>("CompanyID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepName_E")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartmentID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemName_E")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RecordCount")
                        .HasColumnType("int");

                    b.Property<int>("TotalQty")
                        .HasColumnType("int");

                    b.ToView("q_OrderDet");
                });

            modelBuilder.Entity("LodgeMasterWeb.Core.ViewModels.UsersViewModel", b =>
                {
                    b.Property<string>("CompanyID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateEmpID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateEmpName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartmentID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmpID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LangDef")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photopath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserGroup")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserLogin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserRoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("User_cd")
                        .HasColumnType("int");

                    b.Property<int>("bActive")
                        .HasColumnType("int");

                    b.Property<int>("bActiveAccept")
                        .HasColumnType("int");

                    b.Property<string>("bPhoto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("dtpasswordupdate")
                        .HasColumnType("datetime2");

                    b.Property<int>("expiredate")
                        .HasColumnType("int");

                    b.Property<int>("iSorted")
                        .HasColumnType("int");

                    b.Property<int>("isDeleted")
                        .HasColumnType("int");

                    b.Property<string>("mobile")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("supervisor")
                        .HasColumnType("int");

                    b.ToView("VMUsers");
                });

            modelBuilder.Entity("LodgeMasterWeb.Core.ViewModels.VMInspMaster", b =>
                {
                    b.Property<string>("CompanyID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepName_E")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("InspDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InspName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InspectionID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("statusName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToView("VMInspMaster");
                });

            modelBuilder.Entity("LodgeMasterWeb.Core.ViewModels.VMLinkQuestion", b =>
                {
                    b.Property<string>("CompanyID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DeleteDeps")
                        .HasColumnType("int");

                    b.Property<int>("DeleteInfos")
                        .HasColumnType("int");

                    b.Property<int>("DeleteQuestions")
                        .HasColumnType("int");

                    b.Property<string>("InspDepName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InspName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InspectionId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LinkPQID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuestionDisplay")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuestionID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SortPart")
                        .HasColumnType("int");

                    b.Property<int>("SortQuestion")
                        .HasColumnType("int");

                    b.Property<int>("isPublish")
                        .HasColumnType("int");

                    b.ToView("VMLinkQuestions");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("LodgeMasterWeb.Core.Models.Item", b =>
                {
                    b.HasOne("LodgeMasterWeb.Core.Models.Department", "DepartmentData")
                        .WithMany()
                        .HasForeignKey("DepartmentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DepartmentData");
                });

            modelBuilder.Entity("LodgeMasterWeb.Core.Models.OrderMaster", b =>
                {
                    b.HasOne("LodgeMasterWeb.Core.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LodgeMasterWeb.Core.Models.CompanyUnit", "Location")
                        .WithMany()
                        .HasForeignKey("LocationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LodgeMasterWeb.Core.Models.sys_Status", "SysStatus")
                        .WithMany()
                        .HasForeignKey("Status")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Location");

                    b.Navigation("SysStatus");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("LodgeMasterWeb.Core.Models.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("LodgeMasterWeb.Core.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("LodgeMasterWeb.Core.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("LodgeMasterWeb.Core.Models.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LodgeMasterWeb.Core.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("LodgeMasterWeb.Core.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
