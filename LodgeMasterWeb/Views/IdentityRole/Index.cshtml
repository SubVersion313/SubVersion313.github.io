@* @model IEnumerable<ApplicationRole>

@using LodgeMasterWeb.Contants *@
@using Newtonsoft.Json;
@inject IHttpContextAccessor HttpContextAccessor
@{
    //ViewData["Title"] = "Roles";
    Layout = "_Layout_main";
}
@{
    var permissions = new List<KeyValuePair<string, string>>();

    // استرجاع الصلاحيات من الجلسة إذا كانت موجودة
    var permissionsJson = HttpContextAccessor.HttpContext.Session.GetString("UserPermissions");

    if (!string.IsNullOrEmpty(permissionsJson))
    {
        permissions = JsonConvert.DeserializeObject<List<KeyValuePair<string, string>>>(permissionsJson);
    }

    // التحقق من وجود صلاحيات معينة
    bool canRole = permissions.Any(c => c.Key == "Permission" && c.Value == "Permissions.Role.View");
    bool canEdit = permissions.Any(c => c.Key == "Permission" && c.Value == "Permissions.Role.Edit");
    bool canDelete = permissions.Any(c => c.Key == "Permission" && c.Value == "Permissions.Role.Delete");


}
<div class="container-fluid">
    <div class="row">
        <div class="col-lg-12 pt-3">
            <header class="header-filter">
                <div class="group-filter d-flex">
                    @*<div class="input-group me-3">
                    <input class="form-control" type="search" placeholder="Search" aria-label="Recipient's username" aria-describedby="button-addon2">
                    <button class="btn btn-outline-master" id="button-addon2" type="button"> <i class="fa-solid fa-magnifying-glass"></i></button>
                    </div>
                    <button class="btn btn-outline-master d-flex align-items-center" type="button" data-bs-toggle="modal" data-bs-target="#exampleModal"> <i class="fa-solid fa-arrow-down-wide-short me-2"></i>Filter</button> *@
                </div>
                <div class="date">
                    @ViewBag.DisplayCurrntDate
                </div>
@*                 <a class="btn btn-master d-flex align-items-center rounded-pill btn-Create-Order" asp-controller="CreateOrders" asp-action="Index">
                    <i class="fa-solid fa-plus me-2"></i>Create Order
                </a> *@
                <div class="dropdown">
                    <button class="btn btn-primary dropdown-toggle rounded-pill btn-master" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                        <i class="fa-solid fa-plus me-2"></i> Create
                    </button>
                    <ul class="dropdown-menu bg-primary text-white">
                        @if (permissions != null && permissions.Any(c => c.Key == "Permission" && c.Value == "Permissions.CreateOrders.Create"))
                        {
                            <li><a class="dropdown-item text-white" asp-controller="CreateOrders" asp-action="Index"><i class="fa-solid fa-plus me-2"></i> Order</a></li>
                        }
                        @if (permissions != null && permissions.Any(c => c.Key == "Permission" && c.Value == "Permissions.InspectionOrder.Create"))
                        {
                            <li><a class="dropdown-item text-white" asp-controller="InspectionOrder" asp-action="InspectionOrder"><i class="fa-solid fa-plus me-2"></i> Room inspiction</a></li>
                        }
                    </ul>
                </div>
            </header>
        </div>
    </div>
</div>
<div id="pageMasterLoad">
    <div class="HomeDashboard">
        <div class="container-fluid">
            <div class="row">
                <div class="col-lg-12 mb-5">
                    <div class="overview-Orders mb-5">
                        <div class="d-flex justify-content-between  w-100">

                        <div class="text-center">
                            <h4>Roles</h4>
                        </div>
                        <div class=" text-center">
                            
                            <div class="form-group">
                                @*  <partial name="_RoleForm" model="new IdentityRoleFormViewModel()" /> *@
                                <button class="rounded-pill px-4 btn btn-outline-master" data-bs-toggle="modal" data-bs-target="#AddRole"> <i class="fa-solid fa-plus me-2"></i>Add Role</button>
                            </div>
                        </div>
                        </div>
                        <div>
                            <table class="table table-responsive" id="dataTablesRoles">
                                <thead>
                                    <tr>
                                        <th scope="col">Role Name</th>
                                        <th scope="col">Description</th>
                                        <th scope="col">Active</th>
                                        @* <th scope="col">is default</th> *@
                                        <th scope="col">&nbsp;</th>
                                    </tr>
                                </thead>
                                <tbody>
                                </tbody>
                            </table>
                            @*<table class="table table-striped mt-4">
                            <thead>
                            <tr class="bg-primary text-white">
                            @* <th>Id</th>
                            <th>Role Name</th>
                            <th>Actions</th>
                            </tr>
                            </thead>
                            <tbody>
                            @foreach (var role in Model)
                            {
                            <tr>
                            @* <td>@role.Id</td>
                            <td>@role.Name</td>
                            <td>
                            <a class="btn btn-primary btn-sm" asp-controller="IdentityRole" asp-action="ManagePermissions" asp-route-roleId="@role.Id">Manage Permissions</a>
                            </td>
                            </tr>
                            }
                            </tbody>
                            </table> *@
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="modal fade model-filter-home" id="AddRole" tabindex="-1" aria-labelledby="AddRole" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="exampleModalLabel_ed">Add Role</h1>
                <button class="btn-close" type="button" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="AddRoleBody">
                <div class="container-fluid">
                    <div class="row">
                        <input id="hdRoleId_ed" type="hidden" />
                        <div class="col-lg-12 mb-2">
                            <div class="form-group">
                                <label>Role name</label>
                                <input class="form-control" id="txtRoleName" type="text">
                            </div>
                        </div>
                        <div class="col-lg-12 mb-2">
                            <div class="form-group">
                                <label>Description</label>
                                <input class="form-control" id="txtDescription" type="text">
                            </div>
                        </div>
                        <div class="col-lg-12 mb-2">
                            <div class="form-check">
                                <div class="form-check form-switch d-flex p-0">
                                    <input class="mx-2 form-check-input" id="chkActive" type="checkbox" role="switch" checked>
                                    <label class="form-check-label" for="chkActive">Active</label>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer justify-content-start">
                <button class="btn btn-primary btn-apply rounded-pill col-12" type="button" onclick="saveAddRole()">Save </button>
            </div>
        </div>
    </div>
</div>
<div class="modal fade model-filter-home" id="EditRole" tabindex="-1" aria-labelledby="EditRole" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="exampleModalLabel_ed">Edit Role</h1>
                <button class="btn-close" type="button" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="EditRoleBody">
                <div class="container-fluid">
                    <div class="row">
                        <input id="hdRoleId_ed" type="hidden" />
                        <div class="col-lg-12 mb-2">
                            <div class="form-group">
                                <label>Role name</label>
                                <input class="form-control" id="txtRoleName_ed" type="text">
                            </div>
                        </div>
                        <div class="col-lg-12 mb-2">
                            <div class="form-group">
                                <label>Description</label>
                                <input class="form-control" id="txtDescription_ed" type="text">
                            </div>
                        </div>
                        <div class="col-lg-12 mb-2">
                            <div class="form-check">
                                <div class="form-check form-switch d-flex p-0">
                                    <input class="mx-2 form-check-input" id="chkActive_ed" type="checkbox" role="switch">
                                    <label class="form-check-label" for="chkActive_ed">Active</label>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer justify-content-start">
                <button class="btn btn-primary btn-apply rounded-pill col-12" type="button" onclick="saveEditRole()" >Save </button>
            </div>
        </div>
    </div>
</div>


@section Scripts {
    <partial name="_ValidationScriptsPartial" />

    <script>
        $(document).ready(function () {

            var isActive = -1;

            drawtable(isActive, @canRole.ToString().ToLower(), @canEdit.ToString().ToLower(), @canDelete.ToString().ToLower());

        });
        function drawtable(isActive, canRole, canEdit, canDelete) {
            try {
                // Destroy the existing DataTable, if it exists
                if ($.fn.DataTable.isDataTable("#dataTablesRoles")) {
                    $("#dataTablesRoles").DataTable().destroy();
                }

                $("#dataTablesRoles").DataTable({
                    serverSide: true,
                    stateSave: false,
                    processing: true,
                    info: false,
                    searching: false,
                    lengthChange: false,
                    language: {
                        processing: '<i class="fa fa-spinner fa-spin fa-3x fa-fw"></i><span class="sr-only">Loading...</span> '
                    },
                    ajax: {
                        url: '/IdentityRole/GetRoles',
                        type: 'POST',
                        cache: false,
                        data: { bActive: isActive },
                    },
                    // order: [[2, 'asc'], [3, 'asc']],

                    columns: [

                        { "data": "name", "name": "Name" },
                        { "data": "description", "name": "Description" },
                        {
                            "name": "bActive", "render": function (data, type, row) {
                                var rowDiv = '';
                                if (row.bActive == 0) {
                                    rowDiv = `<div class="Availability"><i class="fa-solid fa-circle-exclamation text-danger me-2"></i></div>`;
                                }
                                else {
                                    rowDiv = `<div class="Availability"><i class="fa-solid fa-circle-check text-success me-2"></i></div>`;
                                }
                                return rowDiv;
                            }
                        },
                        // {
                        //     "name": "isDefault", "render": function (data, type, row) {
                        //         var rowDiv = '';
                        //         if (row.isDefault == 0) {
                        //             rowDiv = `<div class="Availability"> <i class="fa-solid fa-circle-exclamation text-warning me-2"></i></div>`;
                        //         }
                        //         else {
                        //             rowDiv = `<div class="Availability" ><i class="fa-solid fa-circle-check text-success me-2" > </i></div >`;
                        //         }
                        //         return rowDiv;
                        //     }
                        // },

                        {
                            "name": "Id", "render": function (data, type, row) {

                                // rowDiv = `<a class="js-itemsrowedit me-2" data-empid="${row.id}" href="javascript:" onclick="editRole(this)">
                                //           <i class="fa-regular fa-pen-to-square"></i></a>
                                //           <a class="js-itemsrowedit me-2" data-empid="${row.id}" href="javascript:" onclick="manageRole(this)">
                                //           <i class="fa-light fa-sliders"></i></a>`;
                                // if (row.isdefault == 0) {
                                //     rowDiv += `<a class="text-danger js-itemsrowdelete" data-empid="${row.id}" href="javascript:" onclick="deleteRole(this)">
                                //                 <i class="fa-solid fa-trash-can"></i></a>`;
                                // }

                                let roleIcon = canRole ?
                                    `<a class="js-itemsrowRole me-2" data-empid="${row.id}" href="javascript:" onclick="roleUser(this)">
                                              <i class="fa-regular fa-circle-user"></i></a>` : '';
                                let editIcon = canEdit ?
                                    `<a class="js-itemsrowedit me-2" data-empid="${row.id}" href="javascript:" onclick="editRole(this)">
                                                <i class="fa-regular fa-pen-to-square"></i>
                                             </a>` : '';

                                let deleteIcon = (canDelete && row.isDefault == 0) ?
                                    `<a class="text-danger js-itemsrowdelete" data-empid="${row.id}" href="javascript:" onclick="deleteRole(this)">
                                                <i class="fa-solid fa-trash-can"></i>
                                             </a>` : '';

                                return `<div class="d-flex">
                                                    ${roleIcon}
                                                    ${editIcon}
                                                    ${deleteIcon}
                                                 </div>`;

                                // var rowDiv = '';
                                // rowDiv = `<div class="d-flex">
                                // <a class="js-itemsrowRole me-2" data-empid="${row.id}" href="javascript:" onclick="roleUser(this)">
                                //                 <i class="fa-regular fa-circle-user"></i></a>
                                //                 <a class="js-itemsrowedit me-2" data-empid="${row.id}" href="javascript:" onclick="editRole(this)">
                                //                 <i class="fa-regular fa-pen-to-square"></i></a>`;
                                // if (row.isDefault == 0) {
                                //     rowDiv += `<a class="text-danger js-itemsrowdelete" data-empid="${row.id}" href="javascript:" onclick="deleteRole(this)">
                                //                 <i class="fa-solid fa-trash-can"></i></a>`;
                                // }
                                //rowDiv += `</div>`;
                                //return rowDiv;
                            }
                        }
                    ],
                    createdRow: function (row, data, dataIndex) {
                        $(row).find('td').each(function (index) {
                            $(this).attr('data-label', $('#dataTablesRoles th').eq(index).text());
                        });
                    }
                });

            }

            catch (err) {

                alert(err.message);

            }

        }
        function saveAddRole() {
            var objData = {};

            var isActive = 0;

            //var hdRoleId = $('#hdRoleId_ed').val();
            var txtRoleName = $('#txtRoleName').val();
            var txtDescription = $("#txtDescription").val();
            var chkActive = $("#chkActive");

            if (!txtRoleName) {
                ShowMsgError('Please enter Role name');
                return false;
            }
            if (txtDescription == null || txtDescription == undefined) {
                txtDescription = "";
            }

            if (chkActive.is(':checked') == true) {

                isActive = 1;
            }

            objData = {
                Name: txtRoleName,
                Description: txtDescription,
                bActive: isActive
            }

            var jsonData = JSON.stringify(objData);

            $.ajax({
                url: '@Url.Action("SaveAddRole", "IdentityRole")',
                type: 'POST',
                dataType: 'json',
                data: { "dataObj": jsonData },
                success: function (data) {

                    if (data != null) {
                        if (data.success == true) {
                            $("#AddRole").modal('hide');
                            ShowMsgSuccess(data.message);
                            clearModalItem();
                            drawtable(-1, @canRole.ToString().ToLower(), @canEdit.ToString().ToLower(), @canDelete.ToString().ToLower());
                        }
                        else {
                            $("#AddRole").modal('show');
                        }

                    }

                },
                error: function (error) {

                    alert(error);
                }
            });
        }
        function saveEditRole() {
            var objData = {};

            var isActive = 0;

            var hdRoleId = $('#hdRoleId_ed').val();
            var txtRoleName_ed = $('#txtRoleName_ed').val();
            var txtDescription_ed = $("#txtDescription_ed").val();
            var chkActive = $("#chkActive_ed");

            if (!txtRoleName_ed) {
                ShowMsgError('Please enter Role name');
                return false;
            }
            if (txtDescription_ed == null || txtDescription_ed == undefined) {
                txtDescription_ed = "";
            }

            if (chkActive.is(':checked') == true) {

                isActive = 1;
            }

            objData = {
                Id: hdRoleId,
                Name: txtRoleName_ed,
                Description: txtDescription_ed,
                bActive: isActive,
            }

            var jsonData = JSON.stringify(objData);

            $.ajax({
                url: '@Url.Action("SaveEditRole", "IdentityRole")',
                type: 'POST',
                dataType: 'json',
                data: { "dataObj": jsonData },
                success: function (data) {

                    if (data != null) {
                        if (data.success == true) {
                            $("#EditRole").modal('hide');
                            clearModalItem();
                            drawtable(-1, @canRole.ToString().ToLower(), @canEdit.ToString().ToLower(), @canDelete.ToString().ToLower());
                        }
                        else {
                            $("#EditRole").modal('show');
                        }

                    }

                },
                error: function (error) {

                    ShowMsgError(error);
                }
            });
        }
        function editRole(clickedElement) {

            var btnEdit = $(clickedElement);
            var roleId = btnEdit.data("empid");

            $.ajax({
                url: '@Url.Action("EditRole", "IdentityRole")',
                type: 'POST',
                data: { roleId: roleId },
                success: function (data) {

                    if (data != null) {
                        if (data.success == true) {
                           
                            $("#hdRoleId_ed").val(data.returnData.id);
                            $("#txtRoleName_ed").val(data.returnData.name);
                            $("#txtDescription_ed").val(data.returnData.description);
                            //console.log(data.returnData.bActive);
                            //console.log(typeof(data.returnData.bActive));

                            if (data.returnData.bActive == 0) {
                                $("#chkActive_ed").attr("checked", false);
                            }
                            else {
                                $("#chkActive_ed").attr("checked", true);
                            }

                            $("#EditRole").modal("show");
                        }
                        else {
                            //alert(data.returnData);
                            $("#EditRole").modal('hide')
                        }

                    }

                },
                error: function (error) {

                    ShowMsgError(error);
                }
            });

        }
        function roleUser(clickedElement) {

            var btnRole = $(clickedElement);
            var empid = btnRole.data("empid");
            //ManagePermissions(string roleId
            //window.location.href = '@Url.Action("ManageRoles", "IdentityRole")' + '?roleId=' + empid;
            window.location.href = '@Url.Action("ManagePermissions", "IdentityRole")' + '?roleId=' + empid;

        }
        function deleteRole(clickedElement) {

            var btnEdit = $(clickedElement);
            var roleid = btnEdit.data("empid");

            Swal.fire({
                title: 'Are you sure delete User?',
                text: "",
                //icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, delete it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: '@Url.Action("DeleteRole", "IdentityRole")',
                        type: 'POST',
                        data: { roleid: roleid },
                        success: function (data) {
                            if (data != null) {
                                if (data.success == true) {
                                    //alert("Deleted");
                                    drawtable(-1, @canRole.ToString().ToLower(), @canEdit.ToString().ToLower(), @canDelete.ToString().ToLower());
                                }
                                else {
                                    // alert(data.returnData);

                                }

                            }

                        },
                        error: function (error) {

                            alert(error);
                        }
                    });
                }
            })


        }
        function clearModalItem() {
            $('#txtRoleName').val();
            $("#txtDescription").val();
            $("#chkActive").attr("checked", false);
            $('#txtRoleName_ed').val();
            $("#txtDescription_ed").val();
            $("#chkActive_ed").attr("checked", false);

        }


    </script>
}