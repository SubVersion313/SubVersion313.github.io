@using Newtonsoft.Json;
@inject IHttpContextAccessor HttpContextAccessor
@{
    Layout = "_Layout_main";
}

@{
    var permissions = new List<KeyValuePair<string, string>>();

    // استرجاع الصلاحيات من الجلسة إذا كانت موجودة
    var permissionsJson = HttpContextAccessor.HttpContext.Session.GetString("UserPermissions");

    if (!string.IsNullOrEmpty(permissionsJson))
    {
        permissions = JsonConvert.DeserializeObject<List<KeyValuePair<string, string>>>(permissionsJson);
    }

    // التحقق من وجود صلاحيات معينة
    bool canRole = permissions.Any(c => c.Key == "Permission" && c.Value == "Permissions.Role.View");
    bool canEdit = permissions.Any(c => c.Key == "Permission" && c.Value == "Permissions.StaffManagement.Edit");
    bool canDelete = permissions.Any(c => c.Key == "Permission" && c.Value == "Permissions.StaffManagement.Delete");
}
<div class="container-fluid">
    <div class="row">
        <div class="col-lg-12 pt-3">
            <header class="header-filter">
                <div class="group-filter d-flex">
                </div>
                <div class="date">
                    @ViewBag.DisplayCurrntDate
                </div>
@*                 <a class="btn btn-master d-flex align-items-center rounded-pill btn-Create-Order" asp-controller="CreateOrders" asp-action="Index">
                    <i class="fa-solid fa-plus me-2"></i>Create Order
                </a> *@
                <div class="dropdown">
                    <button class="btn btn-primary dropdown-toggle rounded-pill btn-master" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                        <i class="fa-solid fa-plus me-2"></i> Create
                    </button>
                    <ul class="dropdown-menu bg-primary text-white">
                        @if (permissions != null && permissions.Any(c => c.Key == "Permission" && c.Value == "Permissions.CreateOrders.Create"))
                        {
                            <li><a class="dropdown-item text-white" asp-controller="CreateOrders" asp-action="Index"><i class="fa-solid fa-plus me-2"></i> Order</a></li>
                        }
                        @if (permissions != null && permissions.Any(c => c.Key == "Permission" && c.Value == "Permissions.InspectionOrder.Create"))
                        {
                            <li><a class="dropdown-item text-white" asp-controller="InspectionOrder" asp-action="InspectionOrder"><i class="fa-solid fa-plus me-2"></i> Room inspiction</a></li>
                        }
                    </ul>
                </div>
            </header>
        </div>
    </div>
</div>
<div class="container-fluid">
    <div class="row">
        <div class="col-lg-12"> </div>
        <div class="col-lg-12 pt-3">
            <header class="header-filter flex-column">
                <h4 class="fw-bold">Reports</h4>
                <div class="container-fluid">
                    <div class="row">
                        <div class="col-lg-3 col-md-6 col-sm-12 mb-3">
                            <div class="form-group">
                                <label class="mb-2" for="exampleFormControlSelect1">Departments</label>
                                <select class="form-select rounded-pill" id="ddlDepartmentFilter">

                                </select>
                            </div>
                        </div>
                        <div class="col-lg-3 col-md-6 col-sm-12 mb-3">
                            <div class="from-group">
                                <label class="mb-2" for="">Availability</label>
                                <div class="d-flex mt-2">
                                    <div class="form-check me-4">
                                        <input class="form-check-input" id="InStock" type="checkbox" value="">
                                        <label class="form-check-label" for="InStock">In Stock</label>
                                    </div>
                                    <div class="form-check">
                                        <input class="form-check-input" id="OutStock" type="checkbox" value="">
                                        <label class="form-check-label" for="OutStock">Out of stock</label>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-3 col-md-6 col-sm-12 mb-3">

                        </div>
                        <div class="col-lg-3 col-md-6 col-sm-12 mb-3 text-center">
                            <div class="from-group">
                                <label class="mb-2" for="">&nbsp;</label>
                            </div>
                            <div class="d-flex justify-content-around">
                                <a id="btnFilterData" class="btn btn-master d-flex align-items-center rounded-pill btn-Create-Order" onclick="filterData()">
                                    Apply Filter
                                </a>
                                @* <button id="btnExport" class="btn btn-outline-dark rounded-pill" onclick="exportData()">Export<i class="fa-solid fa-cloud-arrow-down ms-2 fa-fw"></i></button> *@
                            </div>
                        </div>
                    </div>
                </div>
            </header>
        </div>
    </div>
</div>
<div id="pageMasterLoad">
    <div class="HomeDashboard">
        <div class="container-fluid">
            <div class="row">
                <div class="col-lg-12 mb-4">
                    <div class="overview-Orders">
                        <div class="header-overview mb-3 justify-content-start">
                            <div class="title-head mb-0"> Items</div>
                        </div>
                        <div class="d-flex align-items-center mb-4 justify-content-between flex-wrap">

                            <div class="view-table-mobile"> <span class="scroll-table mx-2"><i class="fa-solid fa-list fa-fw"></i></span><span class="list-table mx-2"><i class="fa-solid fa-grip-vertical fa-fw"></i></span></div>
                        </div>
                        <table class="table table-responsive-scroll data-Tables" id="dataTablesitems">
                            <thead>
                                <tr>
                                    <th scope="col"></th>
                                    <th scope="col"></th>
                                    <th scope="col"></th>
                                    <th scope="col">English name</th>
                                    <th scope="col">Arabic name</th>
                                    <th scope="col">Department</th>
                                    <th scope="col">Service</th>
                                    <th scope="col">Availability</th>
                                    <th scope="col">Quantity</th>
                                    @* <th scope="col">&nbsp;</th> *@
                                </tr>
                            </thead>
                            <tbody>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


@section Scripts {
    <script>
        $(document).ready(function () {
            var department = '0';
            var stock = 0;
            var staff = '0';


            var ddlDepartmentFilter = $("#ddlDepartmentFilter");
            FillDepartment(ddlDepartmentFilter);
            //alert("1");
            drawtable(department, stock, staff);
            //alert("3");

        });
        function totalitems() {
            //321 items has been enlisted
            $.ajax({
                url: '@Url.Action("GetCountItems", "Items")',
                type: "GET",
                dataType: "json",
                cache: false,
                success: function (result) {
                    if (result.success) {

                        var divtotalitems = $('.js-totalitems');
                        divtotalitems.html(`${result.returnData} items has been enlisted`)
                    } else {
                        alert(result.message);
                    }

                },
                error: function (err) {
                    return false;
                }
            });
        }
        function drawtable(department, stock, staff) {
            try {
                // Destroy the existing DataTable, if it exists
                if ($.fn.DataTable.isDataTable("#dataTablesitems")) {
                    $("#dataTablesitems").DataTable().destroy();
                }
                //alert("stock is: " + stock);
                $("#dataTablesitems").DataTable({
                    serverSide: true,
                    stateSave: false,
                    processing: true,
                    info: false,
                    searching: false,
                    lengthChange: false,
                    colReorder: true,
                    language: {
                        processing: '<i class="fa fa-spinner fa-spin fa-3x fa-fw"></i><span class="sr-only">Loading...</span> '
                    },
                    ajax: {
                        url: '/items/Getitems',
                        type: 'POST',
                        cache: false,
                        data: { department, stock, staff },
                    },
                    order: [[3, 'asc'], [4, 'asc']],
                    // columnDefs: [
                    //     // {
                    //     // targets: [0, 1],
                    //     // visible: false,
                    //     // searchable: false
                    //     // },
                    //     {
                    //         targets: 9, // This targets the last column
                    //         orderable: false // Disable sorting for the last column
                    //     }
                    // ],
                    columns: [
                        { "data": "itemID", "name": "ItemID", "className": "d-none", "visible": false, "searchable": false },
                        { "data": "departmentID", "name": "DepartmentID", "className": "d-none", "visible": false, "searchable": false },
                        { "data": "item_cd", "name": "Item_cd", "className": "d-none", "visible": false, "searchable": false },

                        { "data": "itemName_E", "name": "ItemName_E" },
                        { "data": "itemName_A", "name": "ItemName_A" },
                        {
                            "name": "DepartmentName", "render": function (data, type, row) {
                                //var rowDepartment = '';

                                // switch (row.departmentName) {
                                //     case "HousKeeping":
                                //         rowDepartment = `<span class="badge bg-open text-dark rounded-pill"> ${row.departmentName} </span>`;
                                //         break;
                                //     case "Maintince":
                                //         rowDepartment = `<span class="badge bg-Completed text-dark rounded-pill"> ${row.departmentName} </span>`;
                                //         break;
                                //     case "Management":
                                //         rowDepartment = `<span class="badge bg-process text-dark rounded-pill"> ${row.departmentName} </span>`;
                                //         break;
                                //     default:
                                //         rowDepartment = `<span class="badge bg-default text-dark rounded-pill"> ${row.departmentName} </span>`;
                                // }
                                // return rowDepartment;
                                return `<span class=""> ${row.departmentName} </span>`;
                            }
                        },
                        { "data": "serviceName", "name": "ServiceName" },
                        {
                            "name": "ItemStock ", "render": function (data, type, row) {
                                var rowDiv = '';

                                if (row.itemStock == 0) {

                                    rowDiv = `<div class="Availability"> <i class="fa-solid fa-circle-exclamation text-warning me-2"></i>${row.stockName}</div>`;
                                }
                                else {
                                    rowDiv = `<div class="Availability" ><i class="fa-solid fa-circle-check text-success me-2" > </i>${row.stockName}</div >`;
                                }

                                return rowDiv;
                            }
                        },
                        { "data": "qty", "name": "Qty" },
                        // {
                        //     "name": "itemID", "render": function (data, type, row) {

                        //         return `<a class="js-itemsrowedit" data-itemid="${row.itemID}" href="javascript:" onclick="editItem(this)"> <i class="fa-regular fa-pen-to-square"></i></a><a class="text-danger js-itemsrowdelete" data-itemid="${row.itemID}" href="javascript:" onclick="deleteItem(this)"> <i class="fa-solid fa-trash-can"></i></a>`;

                        //     }
                        // }
                    ],
                    createdRow: function (row, data, dataIndex) {
                        $(row).find('td').each(function (index) {
                            $(this).attr('data-label', $('#dataTablesitems th').eq(index).text());
                        });
                    }
                });

                totalitems();
            }

            catch (err) {

                alert(err.message);

            }

        }

        function FillDepartment(ddlobject) {
            $.ajax({
                url: '@Url.Action("GetDepartment", "Report")',
                type: "GET",
                dataType: "json",
                cache: false,
                success: function (result) {
                    if (result.success) {
                        ddlobject.empty();
                        ddlobject.append($("<option></option>")
                            .attr("value", "0")
                            .text("Select Department"));
                        result.returnData.forEach(function (item) {
                            ddlobject.append($("<option></option>")
                                .attr("value", item.value)
                                .text(item.text));
                        });
                    } else {
                        ShowMsgError(result.message);
                    }
                },
                error: function (err) {
                    return false;
                }
            });
        }

        function filterData() {

            var ddl_Department = $("#ddlDepartmentFilter").val();
            var chk_Instock = $("#InStock");
            var chk_Outstock = $("#OutStock");

            var department = '0';
            var stock = 0;
            var staff = '0';

            var optionStock = 0;

            if (ddl_Department == null || ddl_Department == "" || ddl_Department == undefined) {
                //alert('Please select Location');
                return false;
            } else {
                department = ddl_Department;
            }
            if (chk_Instock.is(':checked') == true && chk_Outstock.is(':checked') == true) {
                stock = 2;
            }
            else if (chk_Instock.is(':checked') == true && chk_Outstock.is(':checked') == false) {
                stock = 1;
            }
            else if (chk_Instock.is(':checked') == false && chk_Outstock.is(':checked') == true) {
                stock = 3;
            }

            drawtable(department, stock, staff);

        }

        function clearSrvice() {

            if ($("#chkService").is(':checked') == true) {

                // $("#optinstock").attr("checked", false);
                // $("#optoutstock").attr("checked", false);
                $("#optinstock").attr("checked", false);
                $("#txtQty").val(0);
                $("#txtQty_Minima").val(0);

            }
            else {
                // $("#optinstock").attr("checked", true);
                // $("#optoutstock").attr("checked", false);
                $("#optinstock").attr("checked", false);

            }
        }


        function Itemsearch() {
            try {
                //var objData = {};

                var txtSearch = $("#txtSearch").val();

                //alert("1");
                if (txtSearch == null || txtSearch == undefined) {
                    drawtable('0', 0, '0');
                    return
                }
                if (txtSearch.length <= 2) {
                    drawtable('0', 0, '0');
                    return
                }

                // objData = {
                //     textSearch: txtSearch

                // }

                //var jsonData = JSON.stringify(objData);

                // Destroy the existing DataTable, if it exists
                if ($.fn.DataTable.isDataTable("#dataTablesitems")) {
                    $("#dataTablesitems").DataTable().destroy();
                }
                //alert("stock is: " + stock);
                $("#dataTablesitems").DataTable({
                    serverSide: true,
                    stateSave: false,
                    processing: true,
                    info: false,
                    searching: false,
                    lengthChange: false,
                    colReorder: true,
                    language: {
                        processing: '<i class="fa fa-spinner fa-spin fa-3x fa-fw"></i><span class="sr-only">Loading...</span> '
                    },
                    ajax: {
                        url: '/items/SearchOrders',
                        type: 'POST',
                        cache: false,
                        data: { "objData": txtSearch },
                    },
                    order: [[3, 'asc'], [4, 'asc']],
                    // columnDefs: [
                    //     // {
                    //     // targets: [0, 1],
                    //     // visible: false,
                    //     // searchable: false
                    //     // },
                    //     {
                    //         targets: 9, // This targets the last column
                    //         orderable: false // Disable sorting for the last column
                    //     }
                    // ],
                    columns: [
                        { "data": "itemID", "name": "ItemID", "className": "d-none", "visible": false, "searchable": false },
                        { "data": "departmentID", "name": "DepartmentID", "className": "d-none", "visible": false, "searchable": false },
                        { "data": "item_cd", "name": "Item_cd", "className": "d-none", "visible": false, "searchable": false },

                        { "data": "itemName_E", "name": "ItemName_E" },
                        { "data": "itemName_A", "name": "ItemName_A" },
                        {
                            "name": "DepartmentName", "render": function (data, type, row) {
                                // var rowDepartment = '';

                                // switch (row.departmentName) {
                                //     case "HousKeeping":
                                //         rowDepartment = `<span class="badge bg-open text-dark rounded-pill"> ${row.departmentName} </span>`;
                                //         break;
                                //     case "Maintince":
                                //         rowDepartment = `<span class="badge bg-Completed text-dark rounded-pill"> ${row.departmentName} </span>`;
                                //         break;
                                //     case "Management":
                                //         rowDepartment = `<span class="badge bg-process text-dark rounded-pill"> ${row.departmentName} </span>`;
                                //         break;
                                //     default:
                                //         rowDepartment = `<span class="badge bg-default text-dark rounded-pill"> ${row.departmentName} </span>`;
                                // }
                                // return rowDepartment;
                                return `<span class=""> ${row.departmentName} </span>`;
                            }
                        },
                        { "data": "serviceName", "name": "ServiceName" },
                        {
                            "name": "ItemStock ", "render": function (data, type, row) {
                                var rowDiv = '';

                                if (row.itemStock == 0) {

                                    rowDiv = `<div class="Availability"> <i class="fa-solid fa-circle-exclamation text-warning me-2"></i>${row.stockName}</div>`;
                                }
                                else {
                                    rowDiv = `<div class="Availability" ><i class="fa-solid fa-circle-check text-success me-2" > </i>${row.stockName}</div >`;
                                }

                                return rowDiv;
                            }
                        },
                        { "data": "qty", "name": "Qty" },
                        // {
                        //     "name": "itemID", "render": function (data, type, row) {

                        //         return `<a class="js-itemsrowedit" data-itemid="${row.itemID}" href="javascript:" onclick="editItem(this)"> <i class="fa-regular fa-pen-to-square"></i></a><a class="text-danger js-itemsrowdelete" data-itemid="${row.itemID}" href="javascript:" onclick="deleteItem(this)"> <i class="fa-solid fa-trash-can"></i></a>`;

                        //     }
                        // }
                    ],

                });

                totalitems();
            }

            catch (err) {

                alert(err.message);

            }

        }

    </script>
}
