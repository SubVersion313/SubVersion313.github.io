@using Newtonsoft.Json;
@inject IHttpContextAccessor HttpContextAccessor
@{
    Layout = "_Layout_main";
}

@{
    var permissions = new List<KeyValuePair<string, string>>();

    // استرجاع الصلاحيات من الجلسة إذا كانت موجودة
    var permissionsJson = HttpContextAccessor.HttpContext.Session.GetString("UserPermissions");

    if (!string.IsNullOrEmpty(permissionsJson))
    {
        permissions = JsonConvert.DeserializeObject<List<KeyValuePair<string, string>>>(permissionsJson);
    }
    // التحقق من وجود صلاحيات معينة
    bool canEdit = permissions.Any(c => c.Key == "Permission" && c.Value == "Permissions.Items.Edit");
    bool canDelete = permissions.Any(c => c.Key == "Permission" && c.Value == "Permissions.Items.Delete");
}
<div class="container-fluid">
    <div class="row">
        <div class="col-lg-12 pt-3">
            <header class="header-filter">
                <div class="group-filter d-flex">
                    <div class="input-group me-3">
                        <input id="txtSearch" class="form-control" type="search" placeholder="Search" aria-label="Recipient's username" aria-describedby="button-addon2">
                        <button class="btn btn-outline-master" id="button-addon2" type="button" onclick="Itemsearch()"> <i class="fa-solid fa-magnifying-glass"></i></button>
                    </div>
                    <button class="btn btn-outline-master d-flex align-items-center" type="button" data-bs-toggle="modal" data-bs-target="#exampleModal"> <i class="fa-solid fa-arrow-down-wide-short me-2"></i>Filter</button>
                </div>
                <div class="date">
                    @ViewBag.DisplayCurrntDate
                </div>
                @* <a class="btn btn-master d-flex align-items-center rounded-pill btn-Create-Order" asp-controller="CreateOrders" asp-action="Index">
                <i class="fa-solid fa-plus me-2"></i>Create Order
                </a> *@
                <div class="dropdown">
                    <button class="btn btn-primary dropdown-toggle rounded-pill btn-master" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                        <i class="fa-solid fa-plus me-2"></i> Create
                    </button>
                    <ul class="dropdown-menu bg-primary text-white">
                        @if (permissions != null && permissions.Any(c => c.Key == "Permission" && c.Value == "Permissions.CreateOrders.Create"))
                        {
                            <li><a class="dropdown-item text-white" asp-controller="CreateOrders" asp-action="Index"><i class="fa-solid fa-plus me-2"></i> Order</a></li>
                        }
                        @if (permissions != null && permissions.Any(c => c.Key == "Permission" && c.Value == "Permissions.InspectionOrder.Create"))
                        {
                            <li><a class="dropdown-item text-white" asp-controller="InspectionOrder" asp-action="InspectionOrder"><i class="fa-solid fa-plus me-2"></i> Room inspiction</a></li>
                        }
                    </ul>
                </div>
            </header>
        </div>
    </div>
</div>
<div id="pageMasterLoad">
    <div class="HomeDashboard">
        <div class="container-fluid">
            <div class="row">
                <div class="col-lg-12 mb-4">
                    <div class="overview-Orders">
                        <div class="header-overview mb-3 justify-content-start">
                            <div class="title-head mb-0">Items Management</div>
                        </div>
                        <div class="filter-table mb-4">
                            <div class="container-fluid">
                                <div class="row">

                                    <div class="col-lg-6 col-md-6 col-sm-12 mt-4">
                                        <div class="d-flex align-items-center">
@*                                             
                                            <div class="statue me-3 fst-italic text-primary js-totalitems"></div>
                                            <div class="dropdown">
                                                <button class="btn btn-outline-dark rounded-pill dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                                                    Download<i class="fa-solid fa-download ms-2"></i>
                                                </button>
                                                <ul class="dropdown-menu">
                                                    <li><a class="dropdown-item" onclick="exportExcel(0)" >Template</a></li>
                                                    <li><a class="dropdown-item" onclick="exportExcel(1)" >Items</a></li>
                                                </ul>
                                            </div>
                                           @*  <button class="btn btn-outline-dark rounded-pill" onclick="exportExcel()">Download<i class="fa-solid fa-download ms-2"></i></button> *@
@*                                             <div class="position-relative">

                                                <input type="file" id="fileInput" accept=".xlsx" class="form-control form-control-sm show-input-btn position-absolute opacity-0" oninput="uploadExcelFile(this)" />

                                                <button class="btn btn-outline-dark rounded-pill mx-2" id="uploadButton">Upload<i class="fa-solid fa-upload ms-2"></i></button>
                                           </div> *@ 
                                                
                                            @*<button class="btn btn-outline-dark rounded-pill mx-2" onclick="uploadExcel()">Upload<i class="fa-solid fa-upload ms-2"></i></button> *@
                                        </div>
                                    </div>

                                    <div class="col-lg-3 col-md-6 col-sm-12 mb-3">
                                    </div>
                                    <div class="col-lg-3 col-md-6 col-sm-12 mb-3 text-center">
                                        <div class="from-group">
                                            <label class="mb-2" for="">&nbsp;</label>
                                        </div>
                                        @if (permissions != null && permissions.Any(c => c.Key == "Permission" && c.Value == "Permissions.Items.Create"))
                                        {
                                            <button class="rounded-pill px-4 btn btn-outline-master" data-bs-toggle="modal" data-bs-target="#AddItem"> <i class="fa-solid fa-plus me-2"></i>Add Item</button>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="d-flex align-items-center mb-4 justify-content-between flex-wrap">

                            <div class="view-table-mobile"> <span class="scroll-table mx-2"><i class="fa-solid fa-list fa-fw"></i></span><span class="list-table mx-2"><i class="fa-solid fa-grip-vertical fa-fw"></i></span></div>
                        </div>
                        <table class="table table-responsive-scroll data-Tables" id="dataTablesitems">
                            <thead>
                                <tr>
                                    <th scope="col"></th>
                                    <th scope="col"></th>
                                    <th scope="col"></th>
                                    <th scope="col">English name</th>
                                    <th scope="col">Arabic name</th>
                                    <th scope="col">Department</th>
                                    <th scope="col">Service</th>
                                    <th scope="col">Availability</th>
                                    <th scope="col">Quantity</th>
                                    <th scope="col">&nbsp;</th>
                                </tr>
                            </thead>
                            <tbody>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal Fillter-->
<div class="modal fade model-filter-home" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-body">
                <div class="container-fluid">
                    <div class="row">

                        <div class="col-lg-6 col-md-6 col-sm-12 mb-3">
                            <div class="form-group">
                                <label class="mb-2" for="ddlDepartmentFilter">Departments</label>
                                <select class="form-select rounded-pill" id="ddlDepartmentFilter" onchange="FilterMain()" >
                                </select>
                            </div>
                        </div>
                        <div class="col-lg-6 col-md-6 col-sm-12 mb-3">
                            <div class="from-group">
                                <label class="mb-2" for="">Availability</label>
                                <div class="d-flex">
                                    <div class="form-check me-4">
                                        <input class="form-check-input" id="InStock" type="checkbox" value="1" checked onchange="FilterMain()" >
                                        <label class="form-check-label" for="InStock">In Stock</label>
                                    </div>
                                    <div class="form-check">
                                        <input class="form-check-input" id="OutStock" type="checkbox" value="2" checked onchange="FilterMain()" >
                                        <label class="form-check-label" for="OutStock">Out of stock</label>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="col-lg-6 mb-3">
                            <div class="fw-bold">Quantity</div>
                            <div class="d-flex mb-3 flex-wrap">
                                <div class="form-group d-flex col-md-6 px-2 align-items-center col-sm-12 mb-3">
                                    <label class="col-4 text-end pe-2" for="">From</label>
                                    <input class="form-control" type="Number" id="txtQtyFrom" min="0" value="0">
                                </div>
                                <div class="form-group d-flex col-md-6 px-2 align-items-center col-sm-12 mb-3">
                                    <label class="col-4 text-end pe-2" for="">To</label>
                                    <input class="form-control" type="number" id="txtQtyTo" min="1" value="0">
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
            </div>
            <div class="modal-footer justify-content-start">
                @* <button class="btn btn-primary btn-apply rounded-pill col-7" type="button">Apply Filters</button> *@
                <button class="btn btn-light rounded-pill" type="button" data-bs-dismiss="modal">Cancel</button>
                <button class="btn btn-light rounded-pill" type="reset" onclick="resetform()" >Reset</button>
            </div>
        </div>
    </div>
</div>
<div class="modal fade model-filter-home" id="AddItem" tabindex="-1" aria-labelledby="AddItemLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="exampleModalLabel">Add Item</h1>
                <button class="btn-close" type="button" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="Additembody">
                <div class="container-fluid">
                    <div class="row">
                        <div class="col-lg-12 mb-2">
                            <div class="form-group">
                                <label>English Name</label>
                                <input class="form-control" type="text" id="txtitem_en">
                            </div>
                        </div>
                        <div class="col-lg-12 mb-2">
                            <div class="form-group">
                                <label>Arabic Name</label>
                                <input class="form-control" type="text" id="txtitem_ar">
                            </div>
                        </div>
                        <div class="col-lg-12 mb-3">
                            <div class="form-group">
                                <label class="mb-2" for="ddlItemDepartment">Department</label>
                                <select class="form-select" id="ddlItemDepartment">
                                </select>
                            </div>
                        </div>
                        <div class="col-lg-12 mb-2">
                            <div class="form-check  content-check-box">
                                <div class="form-switch">
                                    <input class="form-check-input" id="chkService" type="checkbox" role="switch" onchange="clearSrvice()">
                                    <label class="form-check-label" for="flexCheckDefault">Service</label>
                                </div>
                                <div class="row">
                                    <div id="serviceNone">
                                        <div class="col-lg-12 mb-2">
                                            <div class="form-check form-switch d-flex p-0">
                                                <span>
                                                    <label class="form-check-label" for="flexSwitchCheckDefault">InStock</label>
                                                </span>
                                                <input class="mx-2 form-check-input" id="optinstock" type="checkbox" role="switch">
                                                <label class="form-check-label" for="optinstock"> </label>
                                            </div>
                                        </div>
                                        <div class="col-lg-6 mb-2">
                                            <div class="form-group">
                                                <label>Quantity</label>
                                                <input class="form-control" type="number" id="txtQty" value="0">
                                            </div>
                                        </div>
                                        <div class="col-lg-6 mb-2">
                                            <div class="form-group">
                                                <label>Minimum Quantity</label>
                                                <input class="form-control" type="number" id="txtQty_Minima" value="0">
                                            </div>
                                        </div>
                                    </div>
                                    <div id="serviceData" style="display: none;">
                                        <div>
                                            <div class="row">
                                                <div class="col-lg-8 col-md-8 col-sm-12 mb-3">
                                                    <div class="form-group">
                                                        <select class="form-select" id="ddlItems" data-placeholder="Choose item">
                                                        </select>
                                                    </div>
                                                </div>
                                                <div class="col-lg-4 col-md-4 col-sm-12 mb-3">
                                                    <div class="increment-item">
                                                        <div class="input-group">
                                                            <button class="btn btn-outline-master btn-decrease" id="decrementButtonItem" type="button"> <i class="fa-solid fa-minus"></i></button>
                                                            <input class="form-control" id="inputCountitem" type="text" min="1" max="9" value="1" readonly>
                                                            <button class="btn btn-outline-master btn-increase" id="incrementButtonItem" type="button"> <i class="fa-solid fa-plus"></i></button>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="mb-3">
                                                <button type="button" class="btn btn-master w-100" id="Addsubitems" onclick="addSubItemForService(1)">Add sub item</button>
                                                
                                            </div>
                                            <h5 class="mb-4">Selected Items: </h5>
                                            <div class="d-flex  flex-wrap mb-4" id="contentsubitem" class="badge-item">
                                            </div>

                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer justify-content-start">
                <button class="btn btn-dark btn-apply rounded-pill col-12" type="button" onclick="createItems()"> Save </button>
            </div>
        </div>
    </div>


</div>
<div class="modal fade model-filter-home" id="EditItem" tabindex="-1" aria-labelledby="EditItem" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="exampleModalLabel_ed">Edit Item</h1>
                <button class="btn-close" type="button" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <input type="hidden" id="hfitemId_ed" />
            <input type="hidden" id="txtisService_ed" />
            <div class="modal-body" id="Edititembody">
                <div class="container-fluid">
                    <div class="row">
                        <div class="col-lg-12 mb-2">
                            <div class="form-group">
                                <label>English Name</label>
                                <input class="form-control" type="text" id="txtitem_en_ed">
                            </div>
                        </div>
                        <div class="col-lg-12 mb-2">
                            <div class="form-group">
                                <label>Arabic Name</label>
                                <input class="form-control" type="text" id="txtitem_ar_ed">
                            </div>
                        </div>
                        <div class="col-lg-12 mb-3">
                            <div class="form-group">
                                <label class="mb-2" for="ddlItemDepartment">Department</label>
                                <select class="form-select" id="ddlItemDepartment_ed">
                                </select>
                            </div>
                        </div>
                        <div class="col-lg-12 mb-2">
                            <div class="form-check  content-check-box">
                                @*                                 <div class="form-switch">
                                <input class="form-check-input" id="chkService_ed" type="checkbox" role="switch" onchange="clearSrvice()">
                                <label class="form-check-label" for="chkService_ed">Service</label>
                                </div> *@
                                <div class="row">
                                    <div id="serviceNone_ed" style="display: none;">
                                        <div class="col-lg-12 mb-2">
                                            <div class="form-check form-switch d-flex p-0">
                                                <span>
                                                    <label class="form-check-label" for="flexSwitchCheckDefault">InStock</label>
                                                </span>
                                                <input class="mx-2 form-check-input" id="optinstock_ed" type="checkbox" role="switch">
                                                <label class="form-check-label" for="optinstock_ed"> </label>
                                            </div>
                                        </div>
                                        <div class="col-lg-6 mb-2">
                                            <div class="form-group">
                                                <label>Quantity</label>
                                                <input class="form-control" type="number" id="txtQty_ed" value="0">
                                            </div>
                                        </div>
                                        <div class="col-lg-6 mb-2">
                                            <div class="form-group">
                                                <label>Minimum Quantity</label>
                                                <input class="form-control" type="number" id="txtQty_Minima_ed" value="0">
                                            </div>
                                        </div>
                                    </div>
                                    <div id="serviceData_ed" style="display: none;">
                                        <div>
                                            <div class="row">
                                                <div class="col-lg-8 col-md-8 col-sm-12 mb-3">
                                                    <div class="form-group">
                                                        <select class="form-select" id="ddlItems_ed" data-placeholder="Choose item">
                                                        </select>
                                                    </div>
                                                </div>
                                                <div class="col-lg-4 col-md-4 col-sm-12 mb-3">
                                                    <div class="increment-item">
                                                        <div class="input-group">
                                                            <button class="btn btn-outline-master btn-decrease" id="decrementButtonItem_ed" type="button"> <i class="fa-solid fa-minus"></i></button>
                                                            <input class="form-control" id="inputCountitem_ed" type="text" min="1" max="9" value="1" readonly>
                                                            <button class="btn btn-outline-master btn-increase" id="incrementButtonItem_ed" type="button"> <i class="fa-solid fa-plus"></i></button>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="mb-3">
                                                <button type="button" class="btn btn-master w-100" id="Addsubitems_ed" onclick="addSubItemForService(2)">Add sub item</button>
                                            </div>
                                            <h5 class="mb-4">Selected Items: </h5>
                                            <div class="d-flex  flex-wrap mb-4" id="contentsubitem_ed" class="badge-item">
                                            </div>

                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>


                    </div>
                </div>
            </div>
            <div class="modal-footer justify-content-start">
                <button class="btn btn-primary btn-apply rounded-pill col-12" type="button" onclick="saveEditItem()">Save </button>
            </div>
        </div>
    </div>
</div>
<!-- Modal-->
<div class="modal fade" id="OrderPlaced" tabindex="-1" aria-labelledby="OrderPlacedLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-body text-center p-5">
                <div class="icon mb-3 text-primary"> <i class="fa-solid fa-circle-check fa-fw fa-9x"> </i></div>
                <h3 class="mb-3 fw-bold"> Order Placed</h3>
                <p class="mb-3"> Your has been order placed and SMS has been sent successfully. To Preview the SMS <a href="">Click here</a></p><a class="btn btn-master px-5 rounded-pill btn-Create-Order" href="CreateOrderGeneralAddItem.html">Continue</a>
            </div>
        </div>
    </div>
</div>
<!-- Modal-->
<div class="modal fade" id="OrderSMS" tabindex="-1" aria-labelledby="OrderSMSLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-body text-center p-5">
                <div class="icon mb-3 text-primary"> <i class="fa-solid fa-circle-check fa-fw fa-9x"> </i></div>
                <h3 class="mb-3 fw-bold"> Message Resent</h3>
                <p class="mb-3"> Your has been resent.</p><a class="btn btn-master px-5 rounded-pill btn-Create-Order" href="LayoutDashboard.html">Continue</a>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="ConfirmAddItem" tabindex="-1" aria-labelledby="OrderSMSLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-body text-center p-5">
                <div class="icon mb-3 text-primary"> <i class="fa-solid fa-circle-check fa-fw fa-9x"> </i></div>
                <h3 class="mb-3 fw-bold"> Item Added</h3>
                <p class="mb-3"> Your item has been added successfully.</p><a class="btn btn-master px-5 rounded-pill btn-Create-Order" href="Items.html">Continue</a>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="ConfirmSteps" tabindex="-1" aria-labelledby="ConfirmStepsLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-body text-center p-5">
                <div class="icon mb-3 text-primary"> <i class="fa-solid fa-circle-check fa-fw fa-9x"> </i></div>
                <h3 class="mb-3 fw-bold"> Inspection submitted</h3>
                <p class="mb-3"> Your inspection has been submitted. Thank you so much</p><a class="btn btn-master px-5 rounded-pill btn-Create-Order" href="LayoutDashboard.html">Continue</a>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="PublishSetupRoom" tabindex="-1" aria-labelledby="PublishSetupRoomLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-body text-center p-5">
                <div class="icon mb-3 text-primary"> <i class="fa-solid fa-circle-check fa-fw fa-9x"> </i></div>
                <h3 class="mb-3 fw-bold"> Inspection form Published</h3>
                <p class="mb-3"> Your inspection has been published.</p><a class="btn btn-master px-5 rounded-pill btn-Create-Order" href="Inspection.html">Continue</a>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="AddUser" tabindex="-1" aria-labelledby="AddUserLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-body text-center p-5">
                <div class="icon mb-3 text-primary"> <i class="fa-solid fa-circle-check fa-fw fa-9x"> </i></div>
                <h3 class="mb-3 fw-bold"> User Added</h3>
                <p class="mb-3"> We have sent email to added email address to login.</p><a class="btn btn-master px-5 rounded-pill btn-Create-Order" href="LayoutDashboard.html">Continue</a>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="AddDepartment" tabindex="-1" aria-labelledby="AddDepartmentLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-body text-center p-5">
                <div class="icon mb-3 text-primary"> <i class="fa-solid fa-circle-check fa-fw fa-9x"> </i></div>
                <h3 class="mb-3 fw-bold"> Department Added</h3>
                <p class="mb-3"> We have sent email to added email address to login.</p><a class="btn btn-master px-5 rounded-pill btn-Create-Order" href="LayoutDashboard.html">Continue</a>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="ViewImageModal" tabindex="-1" aria-labelledby="ViewImageModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-xl">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="exampleModalLabel">Image test.jpg</h1>
                <button class="btn-close" type="button" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            @* <div class="modal-body text-center p-0" style="height: 500px"><img class="w-100 h-100" src="~/assets/images/NewProject2.png" alt="" style="    object-fit: contain;"></div> *@
        </div>
    </div>
</div>

@section Scripts {
    <script>
        
        $(document).ready(function () {
            var ddlItems = $("#ddlItems");
            FillItemsByService(ddlItems);
            // استدعاء الدالة عند النقر على الزر
            $('#uploadButton').on('click', function (e) {
                e.preventDefault();
                uploadExcelFile();
            });
            $('#ddlItems').select2({
                theme: "bootstrap-5",
                width: $(this).data('width') ? $(this).data('width') : $(this).hasClass('w-100') ? '100%' : 'style',
                //placeholder: $(this).data('placeholder'),
            });

            var ddlItems_ed = $("#ddlItems_ed");
            FillItemsByService(ddlItems_ed);

            $('#ddlItems_ed').select2({
                theme: "bootstrap-5",
                width: $(this).data('width') ? $(this).data('width') : $(this).hasClass('w-100') ? '100%' : 'style',
                //placeholder: $(this).data('placeholder'),
            });

            var department = '0';
            var stock = 0;
            var staff = '0';
            var qtyFrom = '0';
            var qtyTo = '0';
            $('#txtSearch').on('search', function () {
                if ($(this).val() === '') {
                    // The X button was clicked, and the input is empty
                    //console.log('Clear button clicked!');
                    // Add your custom action here
                    drawtable(department, stock, staff, qtyFrom, qtyTo,@canEdit.ToString().ToLower(), @canDelete.ToString().ToLower());
                }
            });

            $('#txtSearch').on('keyup', function (e) {
                // Check if the pressed key is the backspace key (key code 8)
                if (e.which === 8) {
                    if ($(this).val() === '') {
                        drawtable(department, stock, staff, qtyFrom, qtyTo,@canEdit.ToString().ToLower(), @canDelete.ToString().ToLower());
                    };

                }
            });


            var ddlDepartmentFilter = $("#ddlDepartmentFilter");
            FillDepartment(ddlDepartmentFilter);

            var ddlDepartment = $("#ddlItemDepartment");
            FillDepartmentAction(ddlDepartment);



            drawtable(department, stock, staff, qtyFrom, qtyTo,@canEdit.ToString().ToLower(), @canDelete.ToString().ToLower());

            $("#dataTablesitems").on('col-reorder', function () {
                // Call your function after reordering
                // afterReorderFunction();
            });

            $('#chkService').change(function () {
                if ($(this).is(':checked')) {
                    $('#serviceData').show();
                    $('#serviceNone').hide();
                } else {
                    $('#serviceNone').show();
                    $('#serviceData').hide();
                }
            });

            $("body").delegate(".icon-exit", "click", function () {
                //alert("delete item");
                let parentData = $(this).parents(".badge-item");
                parentData.remove();
            });

        });
        function exportExcel(temp) {
            
            console.log(temp);

            var includeData = false;
            
            if (temp==1){
                includeData = true;
            }
            
            //Export All to excel sheet
            $.ajax({
                url: '@Url.Action("ExportToExcel", "Items")',
                type: "GET",
                dataType: "json",
                data: { "includeData": includeData },
                cache: false,
                success: function (result) {
                    if (result.success) {


                    }
                },
                error: function (err) {
                    return false;
                }
            });

        }
        function uploadExcelFile(elem) {

            console.log(elem.files)
            var fileInput = $('#fileInput')[0]; // الحصول على عنصر الإدخال الخاص بالملف
            if (fileInput.files.length === 0) {
                ShowMsgError('Please select a file.');
                return;
            }

            var file = fileInput.files[0]; // الحصول على الملف المحدد

            var formData = new FormData(); // إنشاء FormData لتعبئة الملف
            formData.append('file', file); // إضافة الملف إلى FormData

            // تنفيذ طلب AJAX لرفع الملف

            $.ajax({
                url: '/Items/UploadExcel', // تأكد من تعديل URL إلى المسار الصحيح
                type: 'POST',
                data: formData,
                contentType: false,
                processData: false,
                success: function (response) {
                    ShowMsgSuccess('File uploaded successfully!');
                    // إعادة توجيه المستخدم أو تنفيذ أي منطق آخر بعد نجاح التحميل
                    window.location.href = '/YourController/UploadExcel';
                },
                error: function (xhr, status, error) {
                    ShowMsgError('An error occurred while uploading the file: ' + error);
                }
            });

        }
        function totalitems() {
            //321 items has been enlisted
            $.ajax({
                url: '@Url.Action("GetCountItems", "Items")',
                type: "GET",
                dataType: "json",
                cache: false,
                success: function (result) {
                    if (result.success) {
                        var divtotalitems = $('.js-totalitems');
                        divtotalitems.html(`${result.returnData} items has been enlisted`)
                    } else {
                        ShowMsgError(result.message);
                    }

                },
                error: function (err) {
                    return false;
                }
            });
        }

        function drawtable(department, stock, staff, qtyFrom, qtyTo, canEdit, canDelete) {
            try {
                // Destroy the existing DataTable, if it exists
                if ($.fn.DataTable.isDataTable("#dataTablesitems")) {
                    $("#dataTablesitems").DataTable().destroy();
                }
                
                $("#dataTablesitems").DataTable({
                    serverSide: true,
                    stateSave: false,
                    processing: true,
                    info: false,
                    searching: false,
                    lengthChange: false,
                    colReorder: true,
                    language: {
                        processing: '<i class="fa fa-spinner fa-spin fa-3x fa-fw"></i><span class="sr-only">Loading...</span> '
                    },
                    ajax: {
                        url: '/items/Getitems',
                        type: 'POST',
                        cache: false,
                        data: { department, stock, staff, qtyFrom, qtyTo },
                    },
                    order: [[3, 'asc'], [4, 'asc']],
                    // columnDefs: [
                    //     // {
                    //     // targets: [0, 1],
                    //     // visible: false,
                    //     // searchable: false
                    //     // },
                    //     {
                    //         targets: 9, // This targets the last column
                    //         orderable: false // Disable sorting for the last column
                    //     }
                    // ],
                    columns: [
                        { "data": "itemID", "name": "ItemID", "className": "d-none", "visible": false, "searchable": false },
                        { "data": "departmentID", "name": "DepartmentID", "className": "d-none", "visible": false, "searchable": false },
                        { "data": "item_cd", "name": "Item_cd", "className": "d-none", "visible": false, "searchable": false },

                        { "data": "itemName_E", "name": "ItemName_E" },
                        { "data": "itemName_A", "name": "ItemName_A" },
                         { "data": "departmentName", "name": "DepartmentName" },
                        // {
                        //     "name": "DepartmentName", "render": function (data, type, row) {
                        //         var rowDepartment = '';

                        //         // switch (row.departmentName) {
                        //         //     case "HouseKeeping":
                        //         //         rowDepartment = `<span class="badge bg-open text-dark rounded-pill"> ${row.departmentName} </span>`;
                        //         //         break;
                        //         //     case "Maintenance":
                        //         //         rowDepartment = `<span class="badge bg-Completed text-dark rounded-pill"> ${row.departmentName} </span>`;
                        //         //         break;
                        //         //     case "Management":
                        //         //         rowDepartment = `<span class="badge bg-process text-dark rounded-pill"> ${row.departmentName} </span>`;
                        //         //         break;
                        //         //default:
                        //         // rowDepartment = `<span class="badge bg-default text-dark rounded-pill"> ${row.departmentName} </span>`;
                        //         //}
                        //         //return rowDepartment;
                        //         return `<span class="badge bg-default text-dark rounded-pill"> ${row.departmentName} </span>`;
                        //     }
                        // },
                        { "data": "serviceName", "name": "ServiceName" },
                        {
                            "name": "ItemStock ", "render": function (data, type, row) {
                                var rowDiv = '';

                                if (row.itemStock == 0) {

                                    rowDiv = `<div class="Availability"> <i class="fa-solid fa-circle-exclamation text-warning me-2"></i>${row.stockName}</div>`;
                                }
                                else {
                                    rowDiv = `<div class="Availability" ><i class="fa-solid fa-circle-check text-success me-2" > </i>${row.stockName}</div >`;
                                }

                                return rowDiv;
                            }
                        },
                        { "data": "qty", "name": "Qty" },
                        {
                            "name": "itemID", "render": function (data, type, row) {

                                //return `<a class="js-itemsrowedit" data-itemid="${row.itemID}" href="javascript:" onclick="editItem(this)"> <i class="fa-regular fa-pen-to-square"></i></a>
                                // <a class="text-danger js-itemsrowdelete" data-itemid="${row.itemID}" href="javascript:" onclick="deleteItem(this)"> <i class="fa-solid fa-trash-can"></i></a>`;
                                let editIcon = canEdit ?
                                    `<a class="js-itemsrowedit me-2" data-itemid="${row.itemID}" href="javascript:" onclick="editItem(this)">
                                        <i class="fa-regular fa-pen-to-square"></i>
                                     </a>` : '';

                                let deleteIcon = canDelete ?
                                    `<a class="text-danger js-itemsrowdelete" data-itemid="${row.itemID}" href="javascript:" onclick="deleteItem(this)">
                                        <i class="fa-solid fa-trash-can"></i>
                                     </a>` : '';

                                return `
                                            ${editIcon}
                                            ${deleteIcon}
                                         `;
                            }
                        }
                    ],
                    createdRow: function (row, data, dataIndex) {
                        $(row).find('td').each(function (index) {
                            $(this).attr('data-label', $('#dataTablesitems th').eq(index).text());
                        });
                    }

                });

                totalitems();
            }

            catch (err) {

                ShowMsgError(err.message);

            }

        }
        function FillItemsByService(ddlobject) {
            $.ajax({
                url: '@Url.Action("GetitemsByService", "Items")',
                type: "GET",
                dataType: "JSON",
                data: { "service": 0 },
                cache: false,
                success: function (result) {
                    if (result.success) {
                        ddlobject.empty();
                        // ddlobject.append($("<option></option>")
                        //     .attr("value", "0")
                        //     .text("Select items"));
                        result.returnData.forEach(function (item) {

                            ddlobject.append($("<option></option>")
                                .attr("value", item.value)
                                .text(item.text));
                            //console.log(item.value + "<>" + item.text);
                        });
                    } else {

                        ShowMsgError(result.message);
                    }
                },
                error: function (err) {
                    return false;
                }
            });
        }
        function FillDepartment(ddlobject) {
            $.ajax({
                url: '@Url.Action("GetDepartment", "Items")',
                type: "GET",
                dataType: "json",
                cache: false,
                success: function (result) {
                    if (result.success) {
                        ddlobject.empty();
                        ddlobject.append($("<option></option>")
                            .attr("value", "0")
                            .text("Select Department"));
                        result.returnData.forEach(function (item) {
                            ddlobject.append($("<option></option>")
                                .attr("value", item.value)
                                .text(item.text));
                        });
                    } else {
                        ShowMsgError(result.message);
                    }
                },
                error: function (err) {
                    return false;
                }
            });
        }
        function FillDepartmentAction(ddlobject) {
            $.ajax({
                url: '@Url.Action("GetDepartment", "Items")',
                type: "GET",
                dataType: "json",
                cache: false,
                success: function (result) {
                    if (result.success) {
                        ddlobject.empty();
                        // ddlobject.append($("<option></option>")
                        //     .attr("value", "0")
                        //     .text("Select Department"));
                        result.returnData.forEach(function (item) {
                            ddlobject.append($("<option></option>")
                                .attr("value", item.value)
                                .text(item.text));
                        });
                    } else {
                        ShowMsgError(result.message);
                    }
                },
                error: function (err) {
                    return false;
                }
            });
        }
        function FilterMain() {

            try {

                var ddl_Department = $("#ddlDepartmentFilter").val();
                var chk_Instock = $("#InStock");
                var chk_Outstock = $("#OutStock");

                //*Quantity*//
                var qtyFrom = $("#txtQtyFrom").val();
                var qtyTo = $("#txtQtyTo").val();

                var department = '0';
                var stock = 0;
                var staff = '0';

                var optionStock = 0;

                if (ddl_Department == null || ddl_Department == "" || ddl_Department == undefined) {
                    ShowMsgError('Please select Location');
                    return false;
                } else {
                    department = ddl_Department;
                }
                if (chk_Instock.is(':checked') == true && chk_Outstock.is(':checked') == true) {
                    stock = 2;
                }
                else if (chk_Instock.is(':checked') == true && chk_Outstock.is(':checked') == false) {
                    stock = 1;
                }
                else if (chk_Instock.is(':checked') == false && chk_Outstock.is(':checked') == true) {
                    stock = 3;
                }

                if (qtyFrom == null || qtyFrom == "" || qtyFrom == undefined || qtyFrom < 0) {
                    qtyFrom = "0";
                }
                if (qtyTo == null || qtyTo == "" || qtyTo == undefined || qtyTo < 0) {
                    qtyTo = "0";
                }
                drawtable(department, stock, staff, qtyFrom, qtyTo,@canEdit.ToString().ToLower(), @canDelete.ToString().ToLower());
            }
            catch (err) {

            }
        }
        function createItems() {
            var objData = {};
            var itemStock = 0;
            var isService = 0;
            var serviceItems = [];

            var txtitem_en = $('#txtitem_en').val();
            var txtitem_ar = $("#txtitem_ar").val();
            var chkService = $("#chkService");

            var optinstock = $("#optinstock");

            var txtQty = $("#txtQty").val();
            var txtQty_Minima = $("#txtQty_Minima").val();
            var ddlItemDepartment = $("#ddlItemDepartment").val();


            if (!txtitem_en) {// } == null)  || txtitem_en == "" || txtitem_en == undefined) {
                ShowMsgError('Please enter English name');
                return false;
            }
            if (!txtitem_ar) {// == null || txtitem_ar == "" || txtitem_ar == undefined) {
                ShowMsgError('Please enter Arabic name');
                return false;
            }
            if (ddlItemDepartment === "0") {//(ddlItemDepartment == null || ddlItemDepartment == "0" || ddlItemDepartment == undefined) {
                ShowMsgError('Please select department');
                return false;
            }
            if (chkService.is(':checked') == true) {
                isService = 1;
            }
            if (optinstock.is(':checked') == true) {
                ItemStock = 1;

            }
            if (isService == 1) {
                //var contentItems = $("#contentsubitem");
                // Loop through each child div within the container div
                var Itemsort = 0;
                $('#contentsubitem').children('span').each(function () {
                    // Read attributes of each child div
                    // var itemid = $(this).attr('data-itemid');
                    // var itemqty = $(this).attr('data-qty');
                    //var itemname = $(this).attr('data-itemname');
                    Itemsort += 1;
                    var itemid = $(this).data('itemid');
                    var itemqty = $(this).data('qty');

                    //data-itemid="${selectedValue}" data-qty="${Count}" data-itemname="${selectedText}"
                    // Do something with the attribute value

                    // var newObject = {
                    //     ItemID: '',
                    //     ItemIDSub: itemid,
                    //     CompanyID: '',
                    //     Qty: itemqty ,
                    //     iSorted:0
                    // }
                    serviceItems.push({ ItemID: '', ItemIDSub: itemid, CompanyID: '', subitemQty: itemqty, iSorted: Itemsort });

                    //alert(newObject);
                    //serviceItems.push(newObject);
                    //alert("ok");

                    //console.log(`Attribute value:${itemname} itemID: ${itemid},itemqty:${itemqty}`);
                });
            }

            objData = {
                DepartmentID: ddlItemDepartment,
                ItemStock: itemStock,
                isService: isService,
                minQty: txtQty_Minima,
                Qty: txtQty,
                ItemName_E: txtitem_en,
                ItemName_A: txtitem_ar,
            }

            var jsonData = JSON.stringify(objData);
            var serviceItemsjson = JSON.stringify(serviceItems);

            $.ajax({
                url: '@Url.Action("CreateItem", "Items")',
                type: 'POST',
                dataType: 'json',
                data: { "dataObj": jsonData, "ServiceItems": serviceItemsjson },
                success: function (data) {
                    if (data != null) {
                        if (data.success == true) {
                            ShowMsgSuccess(data.returnData);
                            $("#AddItem").modal('hide');
                            clearModalItem();
                            drawtable("0", 2, "0", "0", "0",@canEdit.ToString().ToLower(), @canDelete.ToString().ToLower());
                        }
                        else {
                            ShowMsgError(data.returnData);
                            $("#AddItem").modal('show');
                        }

                    }

                },
                error: function (error) {

                    ShowMsgError(error);
                }
            });


        }
        function saveEditItem() {
            var objData = {};
            var ItemStock = 0;
            var isService = 0;
            var serviceItems = [];

            var txtitemId = $('#hfitemId_ed').val();
            var txtitem_en = $('#txtitem_en_ed').val();
            var txtitem_ar = $("#txtitem_ar_ed").val();
            //var chkService = $("#chkService_ed");

            var optinstock = $("#optinstock_ed");
            var txtQty = $("#txtQty_ed").val();
            var txtQty_Minima = $("#txtQty_Minima_ed").val();
            var ddlItemDepartment = $("#ddlItemDepartment_ed").val();

            isService = $("#txtisService_ed").val();

            //alert(isService);
            //alert(typeof(isService));

            if (!txtitem_en) {// } == null)  || txtitem_en == "" || txtitem_en == undefined) {
                ShowMsgError('Please enter English name');
                return false;
            }
            if (!txtitem_ar) {// == null || txtitem_ar == "" || txtitem_ar == undefined) {
                ShowMsgError('Please enter Arabic name');
                return false;
            }

            if (ddlItemDepartment === "0") {//(ddlItemDepartment == null || ddlItemDepartment == "0" || ddlItemDepartment == undefined) {
                ShowMsgError('Please select department');
                return false;
            }
            // if (chkService.is(':checked') == true) {

            //     isService = 1;
            // }
            // if (optinstock.is(':checked') == true) {
            //     ItemStock = 1;
            // }
            if (isService == "1") {
                //var contentItems = $("#contentsubitem");
                // Loop through each child div within the container div
                var Itemsort = 0;
                $('#contentsubitem_ed').children('span').each(function () {
                    // Read attributes of each child div
                    // var itemid = $(this).attr('data-itemid');
                    // var itemqty = $(this).attr('data-qty');
                    //var itemname = $(this).attr('data-itemname');
                    Itemsort += 1;
                    var itemid = $(this).data('itemid');
                    var itemqty = $(this).data('qty');

                    //data-itemid="${selectedValue}" data-qty="${Count}" data-itemname="${selectedText}"
                    // Do something with the attribute value

                    // var newObject = {
                    //     ItemID: '',
                    //     ItemIDSub: itemid,
                    //     CompanyID: '',
                    //     Qty: itemqty ,
                    //     iSorted:0
                    // }
                    serviceItems.push({ ItemID: '', ItemIDSub: itemid, CompanyID: '', subitemQty: itemqty, iSorted: Itemsort });

                    //alert(newObject);
                    //serviceItems.push(newObject);
                    //alert("ok");

                    //console.log(`Attribute value:${itemname} itemID: ${itemid},itemqty:${itemqty}`);
                });
            }

            objData = {
                ItemID: txtitemId,
                DepartmentID: ddlItemDepartment,
                ItemStock: ItemStock,
                isService: isService,
                minQty: txtQty_Minima,
                Qty: txtQty,
                ItemName_E: txtitem_en,
                ItemName_A: txtitem_ar
            }

            var jsonData = JSON.stringify(objData);
            var serviceItemsjson = JSON.stringify(serviceItems);

            $.ajax({
                url: '@Url.Action("SaveEditItem", "Items")',
                type: 'POST',
                dataType: 'json',
                data: { "dataObj": jsonData, "ServiceItems": serviceItemsjson },
                success: function (data) {

                    if (data != null) {
                        if (data.success == true) {
                            $("#EditItem").modal('hide')
                            clearModalItem();
                            drawtable("0", 2, "0", "0", "0",@canEdit.ToString().ToLower(), @canDelete.ToString().ToLower())
                        }
                        else {
                            $("#EditItem").modal('show')
                        }

                    }

                },
                error: function (error) {

                    ShowMsgError(error);
                }
            });
        }
        function editItem(clickedElement) {

            var btnEdit = $(clickedElement);
            var itemid = btnEdit.data("itemid");

            var ddlDepartment = $("#ddlItemDepartment_ed");
            FillDepartmentAction(ddlDepartment);

            $.ajax({
                url: '@Url.Action("EditItem", "Items")',
                type: 'POST',
                data: { itemid: itemid },
                success: function (data) {

                    if (data != null) {
                        if (data.success == true) {

                            $("#hfitemId_ed").val(data.returnData.itemID);
                            $("#txtitem_en_ed").val(data.returnData.itemName_E);
                            $("#txtitem_ar_ed").val(data.returnData.itemName_A);
                            $("#ddlItemDepartment_ed").val(data.returnData.departmentID);

                            $('#serviceNone_ed').css('display', 'none');
                            $('#serviceData_ed').css('display', 'none');

                            if (data.returnData.isService == 1) {
                                //$("#chkService_ed").attr("checked", false);
                                $("#contentsubitem_ed").html(data.subItems);

                                $('#serviceData_ed').css('display', 'block');

                                $("#txtisService_ed").val(1);
                            }
                            else {
                                //     $("#chkService_ed").attr("checked", true);

                                if (data.returnData.itemStock == 0) {
                                    $("#optinstock_ed").attr("checked", false);
                                }
                                else {
                                    $("#optinstock_ed").attr("checked", true);
                                }
                                $("#txtQty_ed").val(data.returnData.qty);
                                $("#txtQty_Minima_ed").val(data.returnData.minQty);

                                $('#serviceNone_ed').css('display', 'block');

                                $("#txtisService_ed").val(0);
                            }
                            $("#EditItem").modal("show");
                        }
                        else {
                            //alert(data.returnData);
                            $("#EditItem").modal('hide')
                        }
                    }

                },
                error: function (error) {

                    ShowMsgError(error);
                }
            });

        }
        function deleteItem(clickedElement) {

            var btnEdit = $(clickedElement);
            var itemid = btnEdit.data("itemid");

            Swal.fire({
                title: 'Are you sure delete item?',
                text: "",
                //icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, delete it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: '@Url.Action("DeleteItem", "Items")',
                        type: 'POST',
                        data: { itemid: itemid },
                        success: function (data) {
                            if (data != null) {
                                if (data.success == true) {
                                    //alert("Deleted");
                                    drawtable("0", 2, "0", "0", "0",@canEdit.ToString().ToLower(), @canDelete.ToString().ToLower());
                                }
                                else {
                                    ShowMsgError(data.returnData);
                                }
                            }
                        },
                        error: function (error) {
                            ShowMsgError(error);
                        }
                    });
                }
            })


        }
        function clearModalItem() {

            $('#txtitem_en').val();
            $("#txtitem_ar").val();
            $("#chkService").attr("checked", false);
            // $("#optinstock").attr("checked", true);
            // $("#optoutstock").attr("checked", false);
            $("#optinstock").attr("checked", false);
            $("#txtQty").val(0);
            $("#txtQty_Minima").val(0);
            //$("#ddlItemDepartment").val(0);

            $("#hfitemId_ed").val();
            $("#txtitem_en_ed").val();
            $("#txtitem_ar_ed").val();
            $("#chkService_ed").attr("checked", false);
            // $("#optinstock_ed").attr("checked", false);
            // $("#optoutstock_ed").attr("checked", false);
            $("#optinstock_e").attr("checked", false);
            $("#txtQty_ed").val(0);
            $("#txtQty_Minima_ed").val(0);
            //$("#ddlItemDepartment_ed").val(0);
        }
        function clearSrvice() {

            if ($("#chkService").is(':checked') == true) {

                // $("#optinstock").attr("checked", false);
                // $("#optoutstock").attr("checked", false);
                $("#optinstock").attr("checked", false);
                $("#txtQty").val(0);
                $("#txtQty_Minima").val(0);

            }
            else {
                // $("#optinstock").attr("checked", true);
                // $("#optoutstock").attr("checked", false);
                $("#optinstock").attr("checked", false);

            }
        }
        // Define the function to call after reordering
        function afterReorderFunction() {
            // Perform actions you want to do after column reordering
            // For example, update column visibility or make an AJAX request.
            //alert("afterReorderFunction");
        }
        function Itemsearch() {
            try {
                //var objData = {};

                var txtSearch = $("#txtSearch").val();

                if (txtSearch == null || txtSearch == undefined) {
                    drawtable('0', 0, '0', "0", "0",@canEdit.ToString().ToLower(), @canDelete.ToString().ToLower());
                    return
                }
                if (txtSearch.length <= 2) {
                    drawtable('0', 0, '0', "0", "0",@canEdit.ToString().ToLower(), @canDelete.ToString().ToLower());
                    return
                }

                // objData = {
                //     textSearch: txtSearch

                // }

                //var jsonData = JSON.stringify(objData);

                // Destroy the existing DataTable, if it exists
                if ($.fn.DataTable.isDataTable("#dataTablesitems")) {
                    $("#dataTablesitems").DataTable().destroy();
                }
                //alert("stock is: " + stock);
                $("#dataTablesitems").DataTable({
                    serverSide: true,
                    stateSave: false,
                    processing: true,
                    info: false,
                    searching: false,
                    lengthChange: false,
                    colReorder: true,
                    language: {
                        processing: '<i class="fa fa-spinner fa-spin fa-3x fa-fw"></i><span class="sr-only">Loading...</span> '
                    },
                    ajax: {
                        url: '/items/SearchOrders',
                        type: 'POST',
                        cache: false,
                        data: { "objData": txtSearch },
                    },
                    order: [[3, 'asc'], [4, 'asc']],
                    // columnDefs: [
                    //     // {
                    //     // targets: [0, 1],
                    //     // visible: false,
                    //     // searchable: false
                    //     // },
                    //     {
                    //         targets: 9, // This targets the last column
                    //         orderable: false // Disable sorting for the last column
                    //     }
                    // ],
                    columns: [
                        { "data": "itemID", "name": "ItemID", "className": "d-none", "visible": false, "searchable": false },
                        { "data": "departmentID", "name": "DepartmentID", "className": "d-none", "visible": false, "searchable": false },
                        { "data": "item_cd", "name": "Item_cd", "className": "d-none", "visible": false, "searchable": false },

                        { "data": "itemName_E", "name": "ItemName_E" },
                        { "data": "itemName_A", "name": "ItemName_A" },
                        { "data": "departmentName", "name": "DepartmentName" },
                        // {
                        //     "name": "DepartmentName", "render": function (data, type, row) {
                        //         var rowDepartment = '';

                        //         //switch (row.departmentName) {
                        //             // case "HousKeeping":
                        //             //     rowDepartment = `<span class="badge bg-open text-dark rounded-pill"> ${row.departmentName} </span>`;
                        //             //     break;
                        //             // case "Maintince":
                        //             //     rowDepartment = `<span class="badge bg-Completed text-dark rounded-pill"> ${row.departmentName} </span>`;
                        //             //     break;
                        //             // case "Management":
                        //             //     rowDepartment = `<span class="badge bg-process text-dark rounded-pill"> ${row.departmentName} </span>`;
                        //             //     break;
                        //             // default:
                        //             //     rowDepartment = `<span class="badge bg-default text-dark rounded-pill"> ${row.departmentName} </span>`;                                    case "HousKeeping":
                        //             // }
                        //         return rowDepartment;
                        //     }
                        // },
                        { "data": "serviceName", "name": "ServiceName" },
                        {
                            "name": "ItemStock ", "render": function (data, type, row) {
                                var rowDiv = '';

                                if (row.itemStock == 0) {
                                    rowDiv = `<div class="Availability"> <i class="fa-solid fa-circle-exclamation text-warning me-2"></i>${row.stockName}</div>`;
                                }
                                else {
                                    rowDiv = `<div class="Availability" ><i class="fa-solid fa-circle-check text-success me-2" > </i>${row.stockName}</div >`;
                                }

                                return rowDiv;
                            }
                        },
                        { "data": "qty", "name": "Qty" },
                        {
                            "name": "itemID", "render": function (data, type, row) {

                                //return `<a class="js-itemsrowedit" data-itemid="${row.itemID}" href="javascript:" onclick="editItem(this)"> <i class="fa-regular fa-pen-to-square"></i></a>
                                // <a class="text-danger js-itemsrowdelete" data-itemid="${row.itemID}" href="javascript:" onclick="deleteItem(this)"> <i class="fa-solid fa-trash-can"></i></a>`;
                                let editIcon = canEdit ?
                                    `<a class="js-itemsrowedit me-2" data-itemid="${row.itemID}" href="javascript:" onclick="editItem(this)">
                                        <i class="fa-regular fa-pen-to-square"></i>
                                     </a>` : '';

                                let deleteIcon = canDelete ?
                                    `<a class="text-danger js-itemsrowdelete" data-itemid="${row.itemID}" href="javascript:" onclick="deleteItem(this)">
                                        <i class="fa-solid fa-trash-can"></i>
                                     </a>` : '';

                                return `
                                            ${editIcon}
                                            ${deleteIcon}
                                         `;
                            }
                        }
                    ],

                });

                totalitems();
            }

            catch (err) {

                ShowMsgError(err.message);

            }

        }
        function addSubItemForService(parmetercome) {

            // Get the selected option
            var selectedOption;
            var count = 1;
            var contentsubitem;// = $("#contentsubitem .badge-item");
            var inputCountitem;

            if (parmetercome == null || parmetercome == 1) {
                //alert("service");
                selectedOption = $('#ddlItems').select2('data')[0];
                inputCountitem = $("#inputCountitem");
                count = $("#inputCountitem").val();
                contentsubitem = $("#contentsubitem");
            }
            else {
                //alert("stock");
                selectedOption = $('#ddlItems_ed').select2('data')[0];
                inputCountitem = $("#inputCountitem_ed");
                count = $("#inputCountitem_ed").val();
                contentsubitem = $("#contentsubitem_ed");
            }
            // Get the value and text
            var selectedValue = selectedOption.id;
            var selectedText = selectedOption.text;

            // Check if the item is already added
            var itemExists = contentsubitem.find(`[data-itemid='${selectedValue}']`).length > 0;
            if (itemExists) {
                ShowMsgError("This item is already added.");
                return;
            }

            // contentItem += `<span class="badge-item mx-2 mb-3" data-itemid="${item.itemID}"  data-orderId="${item.orderId}"
            //                                                data-qty="${item.qty}" data-notes="${item.notes}" data-itemname="${item.itemName}" data-ddLocation="${item.itemName}">
            //                                        ${item.itemName}
            //                                        <span class="badge-number">${item.qty}</span>
            //                                        <span class="icon-exit"><i class="fa-solid fa-xmark fa-fw"></i></span>
            //                                        </span>`;
            //contentsubitem.append(`<span class="badge-item mx-2 mb-3" data-itemid="${selectedValue}" data-qty="${count}" data-itemname="${selectedText}">
            // ${selectedText}
            // <span class="badge-number">${count}</span>
            // <span class="icon-exit"><i class="fa-solid fa-xmark fa-fw"></i></span></span>`);

            contentsubitem.append(`<span class="badge-item mx-2 mb-3" data-itemid="${selectedValue}" data-qty="${count}" data-itemname="${selectedText}">
                                                                                   ${selectedText}
                                                                                   <span class="badge-number">${count}</span>
                                                                                   <span class="icon-exit"><i class="fa-solid fa-xmark fa-fw"></i></span>
                                                                                   </span>`);

            // Reset the count input
            inputCountitem.val(1);

        }
        function resetform() {


            $("#ddlDepartmentFilter").val(0);
            $("#InStock").prop("checked", true);
            $("#OutStock").prop("checked", true);


            drawtable('0', 0, '0', "0", "0",@canEdit.ToString().ToLower(), @canDelete.ToString().ToLower());


        }
    </script>
}
