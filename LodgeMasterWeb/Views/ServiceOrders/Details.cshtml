@using Newtonsoft.Json;
@inject IHttpContextAccessor HttpContextAccessor
@model OrderDetailsVM
@{
    Layout = "_Layout_main";
}

@{
    var permissions = new List<KeyValuePair<string, string>>();

    // استرجاع الصلاحيات من الجلسة إذا كانت موجودة
    var permissionsJson = HttpContextAccessor.HttpContext.Session.GetString("UserPermissions");

    if (!string.IsNullOrEmpty(permissionsJson))
    {
        permissions = JsonConvert.DeserializeObject<List<KeyValuePair<string, string>>>(permissionsJson);
    }

    // التحقق من وجود صلاحيات معينة
    bool canRole = permissions.Any(c => c.Key == "Permission" && c.Value == "Permissions.Role.View");
    bool canEdit = permissions.Any(c => c.Key == "Permission" && c.Value == "Permissions.StaffManagement.Edit");
    bool canDelete = permissions.Any(c => c.Key == "Permission" && c.Value == "Permissions.StaffManagement.Delete");
}
<div class="container-fluid">
    <div class="row">
        <div class="col-lg-12 pt-3">
            <header class="header-filter">
                <div class="group-filter d-flex">
                    @*<div class="input-group me-3">
                    <input class="form-control" type="search" placeholder="Search" aria-label="Recipient's username" aria-describedby="button-addon2">
                    <button class="btn btn-outline-master" id="button-addon2" type="button"> <i class="fa-solid fa-magnifying-glass"></i></button>
                    </div>
                    <button class="btn btn-outline-master d-flex align-items-center" type="button" data-bs-toggle="modal" data-bs-target="#exampleModal"> <i class="fa-solid fa-arrow-down-wide-short me-2"></i>Filter</button>*@
                </div>
                <div class="date">
                    @ViewBag.DisplayCurrntDate
                </div>
                @*<a class="btn btn-master d-flex align-items-center rounded-pill btn-Create-Order" asp-controller="CreateOrders" asp-action="Index">
                <i class="fa-solid fa-plus me-2"></i>Create Order
                </a>*@
                <div class="dropdown">
                    <button class="btn btn-primary dropdown-toggle rounded-pill btn-master" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                        <i class="fa-solid fa-plus me-2"></i> Create
                    </button>
                    <ul class="dropdown-menu bg-primary text-white">
                        @if (permissions != null && permissions.Any(c => c.Key == "Permission" && c.Value == "Permissions.CreateOrders.Create"))
                        {
                            <li><a class="dropdown-item text-white" asp-controller="CreateOrders" asp-action="Index"><i class="fa-solid fa-plus me-2"></i> Order</a></li>
                        }
                        @if (permissions != null && permissions.Any(c => c.Key == "Permission" && c.Value == "Permissions.InspectionOrder.Create"))
                        {
                            <li><a class="dropdown-item text-white" asp-controller="InspectionOrder" asp-action="InspectionOrder"><i class="fa-solid fa-plus me-2"></i> Room inspiction</a></li>
                        }
                    </ul>
                </div>
            </header>
        </div>
    </div>
</div>

<div id="pageMasterLoad">
    <div class="information-Row-Table">
        <div class="container-fluid">
            <div class="row">
                <div class="col-lg-12">
                    <div class="card-master card-information-Table mb-5 p-0">
                        <div class="p-4 title-information-Table d-flex flex-wrap align-items-center border-bottom">
                            <a class="me-3" asp-controller="ServiceOrders" asp-action="Index"><i class="fa-solid fa-arrow-left-long"></i></a>
                            <div class="d-flex flex-wrap align-items-center">
                                <input type="hidden" value="@Model.OrderID" asp-for="@Model.OrderID" id="txtOrderId" />
                                <div class="@Model.bgClass text-dark rounded-pill px-4 py-1">@Model.StatusName</div>
                                <div class="inputs-group mx-3 mb-2">
                                    <div class="label">Order Created</div>
                                    <div class="input-value d-flex algin-items-center"><span class="icon me-2 text-primary"><i class="fa-solid fa-calendar-days fa-fw"></i></span><span class="text">@Model.dtCraeteDisplay</span></div>
                                </div>
                                <div class="inputs-group mx-3 mb-2">
                                    <div class="label">&nbsp;</div>
                                    <div class="input-value d-flex algin-items-center"><span class="icon me-2 text-primary"><i class="fa-regular fa-clock fa-fw"></i></span><span class="text">@Model.AtTime</span></div>
                                </div>
                                <div class="inputs-group mx-3 mb-2">
                                    <div class="label">Run time</div>
                                    <div class="input-value d-flex algin-items-center">
                                        <span class="icon me-2 text-primary"><i class="fa-solid fa-hourglass fa-fw"></i></span><span class="text">
                                            @{
                                                var timeMasterAgo = "";
                                                if (@Model.DaysDifference > 0)
                                                {
                                                    if (@Model.DaysDifference == 1)
                                                    {
                                                        timeMasterAgo = $"{@Model.DaysDifference} Day ";
                                                    }
                                                    else
                                                    {
                                                        timeMasterAgo = $"{@Model.DaysDifference} Days ";
                                                    }
                                                }
                                                timeMasterAgo += $"{@Model.RemainingHours} hours ";
                                            }
                                            @timeMasterAgo
                                        </span>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="information-Table-body p-0">
                            <div class="container-fluid">
                                <div class="row">
                                    <div class="col-lg-7 col-md-12 col-sm-12">
                                        <span class="badge-item my-2 d-inline-block rounded-pill p-2 px-4 text-primary">Order number: @Model.Order_cd</span>
                                        <h3 class="fw-bold my-2">@Model.LocationName</h3>
                                        <div class="row my-3 users-image">
                                            <div class="col-lg-3 col-md-4 col-sm-6 text-center mb-3">
                                                <h5 class="label">Created by</h5>
                                                <div class="created d-flex align-items-center justify-content-center">
                                                    <div class="icon me-2"><img src="@Model.CreatePic" alt=""></div>
                                                    <div class="text text-primary">@Model.CreateName</div>
                                                </div>
                                            </div>
                                            <div class="col-lg-3 col-md-4 col-sm-6 text-center mb-3">
                                                <h5 class="label">Department</h5>
                                                <div class="created d-flex align-items-center justify-content-center">
                                                    <div class="text text-primary">@Model.DepName</div>
                                                    <input type="hidden" id="hfDepartmentId" value="@Model.DepartmentID" />
                                                </div>
                                            </div>
                                            <div class="col-lg-3 col-md-4 col-sm-6 text-center mb-3">
                                                <h5 class="label">Assignee</h5>
                                                <div class="created d-flex align-items-center justify-content-center">
                                                    <div class="icon me-2"><img src="@Model.DepartmentAssignPic" alt=""></div>
                                                    <div class="text text-primary">@Model.DepartmentAssignName</div>
                                                </div>
                                            </div>
                                            <div class="col-lg-3 col-md-4 col-sm-6 text-center mb-3">
                                                <h5 class="label">Assigned to</h5>
                                                <div class="created d-flex align-items-center justify-content-center">
                                                    <div class="icon me-2"><img src="@Model.AssignPic" alt=""></div>
                                                    <div class="text text-primary">@Model.AssignName</div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="d-flex justify-content-between">
                                            <div class="label">Order completion</div>
                                            <div class="count">@Model.CountCurrent/@Model.CountItems</div>
                                        </div>
                                        <div class="progress" role="progressbar" aria-label="Warning example" aria-valuenow="35" aria-valuemin="0" aria-valuemax="100">
                                            <div class="progress-bar bg-warning" style="width: @Model.Percent%"></div>
                                        </div>
                                        <div class="table-Assignees">
                                            <table class="table table-responsive-scroll " id="tableitemdet">
                                                <thead>
                                                    <tr>
                                                        <th scope="col">Products</th>
                                                        <th scope="col">Notes</th>
                                                        <th scope="col">Attachment</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    @if (Model.OrderDetItem != null)
                                                    {
                                                        @foreach (var item in Model.OrderDetItem)
                                                        {
                                                            <tr>
                                                                <td class="" data-itemid="@item.ItemID" data-label="Order no.">
                                                                    @*<div class="form-check">
                                                            @if (item.isClosed == 1)
                                                            {
                                                            <input class="form-check-input js-check" id="flexCheckDefault1" type="checkbox" value="@item.ItemID" checked readonly>
                                                            <label class="form-check-label" for="flexCheckDefault1">@item.ItemName_E</label>
                                                            }
                                                            else
                                                            {
                                                            <input class="form-check-input js-check" id="flexCheckDefault2" type="checkbox" value="@item.ItemID">
                                                            <label class="form-check-label" for="flexCheckDefault2">@item.ItemName_E</label>
                                                            }
                                                            </div>*@
                                                                    @item.ItemName_E
                                                                </td>
                                                                <td data-label="Date">
                                                                    <span class="text-title">@item.sItemNotes</span>
                                                                </td>
                                                                <td><a class="js-imgattch" id="showpicattc" href="#" data-imgname="mistik.png" data-comp="hjcont" onclick="showpic(this);"> <i class="fa-regular fa-image"></i></a></td>
                                                                @* <td><a href="#" data-picfull="" data-bs-toggle="modal" data-bs-target="#ViewImageModal" onclick="showpic(this)"> <i class="fa-regular fa-image"></i></a></td> *@
                                                            </tr>
                                                        }

                                                    }

                                                </tbody>
                                            </table>
                                        </div>
                                        <div class="d-flex justify-content-center flex-wrap">
                                            @{
                                                //@(Model.StatusId == 1 ? "" : "disabled")
                                                //if (Model.SupervisorUserAssign == 0)
                                                var x = 0;
                                                if (x == 0)
                                                {
                                                    if (Model.StatusId == 1)
                                                    {
                                                        <button class="text-center rounded-pill p-2 px-4 btn-outline-master mx-1 mb-3" id="btnTakeOrder" onclick="takeOrder()">
                                                            Take
                                                        </button>
                                                        <button class="text-center rounded-pill p-2 px-4 btn-outline-master mx-1 mb-3" id="btnReopenOrder" onclick="reOpenOrder()">
                                                            Reopen
                                                        </button>
                                                    }
                                                    if ( Model.StatusId == 9)
                                                    {
                                                        <button class="text-center rounded-pill p-2 px-4 btn-outline-master mx-1 mb-3" id="btnReopenOrder" onclick="reOpenOrder()">
                                                            Reopen
                                                        </button>
                                                    }
                                                    if (Model.StatusId == 3 )
                                                    {
                                                        <button class="text-center rounded-pill p-2 px-4 btn-outline-master mx-1 mb-3" id="btnHold" onclick="HoldOrder()">
                                                            Hold
                                                        </button>
                                                        <button class="text-center rounded-pill p-2 px-4 btn-outline-master mx-1 mb-3" id="btnDefer" data-bs-toggle="modal" data-bs-target="#ChangeDeferred" onclick="deferSetDefault()">
                                                            Defer
                                                        </button>
                                                        <button class="text-center rounded-pill p-2 px-4 btn-outline-master mx-1 mb-3" id="btnCompleteOrder" onclick="completeOrder()">
                                                            Complete
                                                        </button>
                                                    }

                                                }
                                                else
                                                {
                                                    // if (Model.StatusId == 1)
                                                    // {
                                                    //     <button class="text-center rounded-pill p-2 px-4 btn-outline-master mx-1 mb-3" id="btnTakeOrder" onclick="takeOrder()">
                                                    //         Take
                                                    //     </button>
                                                    // }
                                                    if (Model.StatusId == 3 || Model.StatusId == 9)
                                                    {
                                                        <button class="text-center rounded-pill p-2 px-4 btn-outline-master mx-1 mb-3" id="btnReopenOrder" onclick="reOpenOrder()">
                                                            Reopen
                                                        </button>
                                                    }
                                                    if (Model.StatusId == 3 || Model.StatusId == 1)
                                                    {
                                                        <button class="text-center rounded-pill p-2 px-4 btn-outline-master mx-1 mb-3" id="btnHold" onclick="HoldOrder()">
                                                            Hold
                                                        </button>
                                                    }
                                                    if (Model.StatusId == 3 || Model.StatusId == 4)
                                                    {
                                                        <button class="text-center rounded-pill p-2 px-4 btn-outline-master mx-1 mb-3" id="btnCompleteOrder" onclick="completeOrder()">
                                                            Complete
                                                        </button>
                                                    }
                                                    if (Model.StatusId == 1)
                                                    {
                                                        <button class="text-center rounded-pill p-2 px-4 btn-outline-master mx-1 mb-3" id="btnAssignee" data-bs-toggle="modal" data-bs-target="#ChangeAssignee">
                                                            Assign to
                                                        </button>
                                                        <button class="text-center rounded-pill p-2 px-4 btn-outline-master mx-1 mb-3" id="btnDepartment" data-bs-toggle="modal" data-bs-target="#ChangeDepartment">
                                                            Department
                                                        </button>
                                                    }
                                                    if (Model.StatusId == 1)
                                                    {
                                                        <button class="text-center rounded-pill p-2 px-4 btn-outline-master mx-1 mb-3" id="btnDefer" data-bs-toggle="modal" data-bs-target="#ChangeDeferred" onclick="deferSetDefault()">
                                                            Defer
                                                        </button>
                                                    }
                                                    if (Model.StatusId == 2)
                                                    {
                                                        <button class="text-center rounded-pill p-2 px-4 btn-outline-master mx-1 mb-3" id="btnClose" onclick="closeOrder()">
                                                            Close
                                                        </button>
                                                    }
                                                }
                                            }

                                        </div>
                                        @{
                                            if (Model.StatusId != 2 || Model.StatusId != 12)
                                            {
                                                <div class="mb-3">
                                                    <label>Add Notes </label>
                                                    <textarea class="form-control" id="txtNoteOrderAll" rows="3" placeholder="Notes"> </textarea>
                                                </div>
                                                <div class="d-flex justify-content-end mb-3"> <a class="btn btn-primary w-25 text-center rounded-pill" href="#" id="btnAddNotes" onclick="addNoteforOrder()">   Add Note</a></div>
                                            }
                                        }

                                    </div>

                                    <div class="col-lg-5 col-md-12 col-sm-12 p-0">
                                        <div class="Recent-part p-3">
                                            <h5 class="title">Recent Activity</h5>
                                            <div class="list-group" id="RecentActivity">
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<!--Modale-->
<div class="modal fade model-filter-home" id="ChangeAssignee" tabindex="-1" aria-labelledby="ChangeAssigneeLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5">Assign to</h1>
                <button class="btn-close" type="button" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="container-fluid">
                    <div class="row">
                        <div class="col-lg-12 mb-3">
                            <div class="form-group">
                                <select class="form-select select-color" id="ddlemployees" aria-label="Default select example">
                                </select>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer justify-content-start">
                <button class="btn btn-primary btn-apply rounded-pill col-12" type="button" onclick="changeEmployee()">Change </button>
            </div>
        </div>
    </div>
</div>
<div class="modal fade model-filter-home" id="ChangeDepartment" tabindex="-1" aria-labelledby="ChangeDepartmentLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5">Department</h1>
                <button class="btn-close" type="button" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="container-fluid">
                    <select class="form-select select-color" id="ddlAssegnDepartment" aria-label="Default select example">
                    </select>
                </div>
            </div>
            <div class="modal-footer justify-content-start">
                <button class="btn btn-primary btn-apply rounded-pill col-12" type="button" onclick="changeDepartment()">Change </button>
            </div>
        </div>
    </div>
</div>
<div class="modal fade model-filter-home" id="ChangeDeferred" tabindex="-1" aria-labelledby="ChangeDeferredLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5"> Defer</h1>
                <button class="btn-close" type="button" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="container-fluid">
                    <div class="row">
                        <div class="col-lg-12 mb-3">
                            <div class="form-group">
                                <input class="form-control" type="date" id="inputDate" name="">
                            </div>
                        </div>
                        <div class="col-lg-12 mb-3">
                            <div class="form-group">
                                <input class="form-control" type="time" id="inputTime" name="">
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer justify-content-start">
                <button class="btn btn-primary btn-apply rounded-pill col-12" type="button" onclick="deferOrder()">Change </button>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="ViewImageModal" tabindex="-1" aria-labelledby="ViewImageModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-xl">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5">Attch</h1>
                <button class="btn-close" type="button" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body text-center p-0" style="height: 500px">
                <img id="attchimage" class="w-100 h-100" src="" alt="" style="object-fit: contain;" />
                @* <img id="attchimage" class="w-100 h-100" src="../assets/images/NewProject.png" alt="" style="object-fit: contain;" /> *@
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {

            var ddlDepartmentFilter = $("#ddlAssegnDepartment");
            FillDepartment(ddlDepartmentFilter);

            var ddlEmpDepartment = $("#ddlemployees");
            GetEmpDepartment(ddlEmpDepartment);

            DrawActivity();
        });

        function FillDepartment(ddlobject) {
            $.ajax({
                url: '@Url.Action("GetDepartment", "Items")',
                type: "GET",
                dataType: "json",
                cache: false,
                success: function (result) {
                    if (result.success) {
                        ddlobject.empty();
                        ddlobject.append($("<option></option>")
                            .attr("value", "0")
                            .text("Select Department"));
                        result.returnData.forEach(function (item) {
                            ddlobject.append($("<option></option>")
                                .attr("value", item.value)
                                .text(item.text));
                        });
                    } else {
                        alert(result.message);
                    }
                },
                error: function (err) {
                    return false;
                }
            });
        }
        function GetEmpDepartment(ddlobject) {
            var hfDepartmentId = $("#hfDepartmentId").val();
            if (hfDepartmentId == null) {
                hfDepartmentId = "0";
            }
            $.ajax({
                url: '@Url.Action("GetEmpDepartment", "ServiceOrders")',
                type: "GET",
                dataType: "json",
                data: { "dep": hfDepartmentId },
                cache: false,
                success: function (result) {
                    if (result.success) {
                        ddlobject.empty();
                        ddlobject.append($("<option></option>")
                            .attr("value", "0")
                            .text("Select Employee"));
                        result.returnData.forEach(function (item) {
                            ddlobject.append($("<option></option>")
                                .attr("value", item.value)
                                .text(item.text));
                        });
                    } else {
                        alert(result.message);
                    }
                },
                error: function (err) {
                    return false;
                }
            });
        }
        function takeOrder() {


            var orderId = $("#txtOrderId").val();

            Swal.fire({
                title: "Are you sure Take Order?",
                text: "",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#3085d6",
                cancelButtonColor: "#d33",
                confirmButtonText: "Yes"
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: '@Url.Action("TakeOrder", "Dashboard")',
                        type: "POST",
                        data: { "OrderId": orderId },
                        dataType: "json",
                        cache: false,
                        success: function (result) {
                            if (result.success) {
                                //alert(result.returnData);
                                //window.location.href = "/Dashboard/Index";
                                // Swal.fire({
                                //     title: "Saved",
                                //     text: result.returnData,
                                //     icon: "success"
                                // });
                                location.reload();

                            } else {
                                //alert(result.returnData);
                                Swal.fire({
                                    title: "Oops",
                                    text: result.returnData,
                                    icon: "warning"
                                });
                            }
                        },
                        error: function (err) {
                            return false;
                        }
                    });

                }
            });


        }
        function closeOrder() {

            var orderId = $("#txtOrderId").val();

            Swal.fire({
                title: "Are you sure Close Order?",
                text: "",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#3085d6",
                cancelButtonColor: "#d33",
                confirmButtonText: "Yes"
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: '@Url.Action("CloseOrder", "Dashboard")',
                        type: "POST",
                        data: { "OrderId": orderId },
                        dataType: "json",
                        cache: false,
                        success: function (result) {
                            if (result.success) {
                                //alert(result.returnData);
                                window.location.href = "/Dashboard/Index";
                                Swal.fire({
                                    title: "Saved",
                                    text: result.returnData,
                                    icon: "success"
                                });
                            } else {
                                //alert(result.returnData);
                                Swal.fire({
                                    title: "Oops",
                                    text: result.returnData,
                                    icon: "warning"
                                });
                            }
                        },
                        error: function (err) {
                            return false;
                        }
                    });

                }
            });


        }
        function completeOrder() {


            var orderId = $("#txtOrderId").val();

            Swal.fire({
                title: "Are you sure Completed Order?",
                text: "",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#3085d6",
                cancelButtonColor: "#d33",
                confirmButtonText: "Yes"
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: '@Url.Action("CompleteOrder", "Dashboard")',
                        type: "POST",
                        data: { "OrderId": orderId },
                        dataType: "json",
                        cache: false,
                        success: function (result) {
                            if (result.success) {
                                //alert(result.returnData);
                                window.location.href = "/Dashboard/Index";
                                Swal.fire({
                                    title: "Saved",
                                    text: result.returnData,
                                    icon: "success"
                                });
                            } else {
                                //alert(result.returnData);
                                Swal.fire({
                                    title: "Oops",
                                    text: result.returnData,
                                    icon: "warning"
                                });
                            }
                        },
                        error: function (err) {
                            return false;
                        }
                    });

                }
            });


        }
        function HoldOrder() {


            var orderId = $("#txtOrderId").val();

            Swal.fire({
                title: "Are you sure Hold Order?",
                text: "",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#3085d6",
                cancelButtonColor: "#d33",
                confirmButtonText: "Yes"
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: '@Url.Action("HoldOrder", "Dashboard")',
                        type: "POST",
                        data: { "OrderId": orderId },
                        dataType: "json",
                        cache: false,
                        success: function (result) {
                            if (result.success) {
                                //alert(result.returnData);
                                window.location.href = "/Dashboard/Index";
                                Swal.fire({
                                    title: "Saved",
                                    text: result.returnData,
                                    icon: "success"
                                });
                            } else {
                                //alert(result.returnData);
                                Swal.fire({
                                    title: "Oops",
                                    text: result.returnData,
                                    icon: "warning"
                                });
                            }
                        },
                        error: function (err) {
                            return false;
                        }
                    });

                }
            });


        }
        function reOpenOrder() {


            var orderId = $("#txtOrderId").val();

            Swal.fire({
                title: "Are you sure reopen Order?",
                text: "",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#3085d6",
                cancelButtonColor: "#d33",
                confirmButtonText: "Yes"
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: '@Url.Action("ReopenOrder", "Dashboard")',
                        type: "POST",
                        data: { "OrderId": orderId },
                        dataType: "json",
                        cache: false,
                        success: function (result) {
                            if (result.success) {
                                //alert(result.returnData);
                                window.location.href = "/Dashboard/Index";
                                Swal.fire({
                                    title: "Saved",
                                    text: result.returnData,
                                    icon: "success"
                                });
                            } else {
                                //alert(result.returnData);
                                Swal.fire({
                                    title: "Oops",
                                    text: result.returnData,
                                    icon: "warning"
                                });
                            }
                        },
                        error: function (err) {
                            return false;
                        }
                    });

                }
            });
        }
        function changeEmployee() {

            var ChangeAssignee = $("#ChangeAssignee");

            var orderId = $("#txtOrderId").val();
            //alert("orderId: " + orderId);
            var ddlemployee = $("#ddlemployees").val();
            //alert("ddlemployee: " + ddlemployee);
            if (ddlemployee === "0") {
                alert('Please select employee');
                $("#ChangeAssignee").modal('show');
                return false;
            }
            var empId = ddlemployee;

            $.ajax({
                url: '@Url.Action("ChangeEmployee", "ServiceOrders")',
                type: "POST",
                data: { "OrderId": orderId, "EmpId": empId },
                dataType: "json",
                cache: false,
                success: function (result) {
                    if (result.success) {
                        //alert(result.returnData);
                        ChangeAssignee.modal('hide');
                        ShowMsgSuccess(result.returnData);
                    } else {
                        //alert(result.returnData);
                        ShowMsgError(result.returnData);
                        ChangeAssignee.modal('show');
                    }
                },
                error: function (err) {
                    return false;
                }
            });
        }
        function changeDepartment() {

            var ChangeDepartment = $("#ChangeDepartment");
            var orderId = $("#txtOrderId").val();
            var ddlDepartment = $("#ddlAssegnDepartment").val();

            if (ddlDepartment === "0") {
                alert('Please select department');
                return false;
            }

            var depId = ddlDepartment;

            $.ajax({
                url: '@Url.Action("ChangeDepartment", "ServiceOrders")',
                type: "POST",
                dataType: "json",
                data: { "OrderId": orderId, "DepartmentID": depId },
                cache: false,
                success: function (result) {
                    if (result.success) {
                        //alert(result.returnData);

                        ChangeDepartment.modal('hide');
                        ShowMsgSuccess(result.returnData);
                    } else {
                        //alert(result.returnData);
                        ShowMsgError(result.returnData);
                        ChangeDepartment.modal('show');
                    }

                },
                error: function (err) {
                    return false;
                }
            });
        }
        function deferSetDefault() {

            // Get the current date and time
            var currentDate = new Date();

            // Get the hour and minute components
            var currentHour = currentDate.getHours();
            var currentMinute = currentDate.getMinutes();

            // Format the hour and minute to ensure they have leading zeros if needed
            var formattedHour = ('0' + currentHour).slice(-2); // Ensure 2 digits, adding leading zero if necessary
            var formattedMinute = ('0' + currentMinute).slice(-2); // Ensure 2 digits, adding leading zero if necessary


            // var formattedDay = currentDate.getDate();
            // var formattedMonth = currentDate.getMonth() + 1;
            // var formattedYear = currentDate.getFullYear();

            // formattedDay = formattedDay.padStart(2, '0');
            // formattedMonth = formattedMonth.padStart(2, '0');

            var formattedDay = ('0' + currentDate.getDate()).slice(-2); // Ensure 2 digits, adding leading zero if necessary
            var formattedMonth = ('0' + (currentDate.getMonth() + 1)).slice(-2); // Ensure 2 digits, adding leading zero if necessary
            var formattedYear = currentDate.getFullYear();

            // Display the current time in HH:MM format
            var currentTime = formattedHour + ':' + formattedMinute;
            //alert("Current Time:" + formattedMonth + '-' + formattedDay + '-' + formattedYear);// // currentTime);
            //console.log("Current Time:", currentTime);
            //alert(Date.now.toString());
            $("#inputDate").val(formattedYear + '-' + formattedMonth + '-' + formattedDay);
            $("#inputTime").val(currentTime);
        }
        function deferOrder() {

            var ChangeDeferred = $("#ChangeDeferred");
            var orderId = $("#txtOrderId").val();
            var inputDate = $("#inputDate").val();
            var inputTime = $("#inputTime").val();


            if (inputDate == null || inputTime == null) {
                ShowMsgWarning('Please enter defer date and time');
                return false;
            }

            $.ajax({
                url: '@Url.Action("ChangeDefer", "Dashboard")',
                type: "POST",
                dataType: "json",
                data: { "OrderId": orderId, "inputdate": inputDate, "inputtime": inputTime },
                cache: false,
                success: function (result) {
                    if (result.success) {
                        //alert(result.returnData);
                        ChangeDeferred.modal('hide');
                        ShowMsgSuccess(result.returnData);
                    } else {
                        //alert(result.returnData);
                        ShowMsgError(result.returnData);
                        ChangeDeferred.modal('show');
                    }
                },
                error: function (err) {
                    return false;
                }
            });
        }
        function showpic(elementobj) {

            var picname = $(elementobj).data("imgname");
            var compfolder = $(elementobj).data("comp");
            //alert("picname: " + picname + " compfolder: " + compfolder);

            var pathdata = "../../Companies/" + compfolder + "/images/orders/";
            if (picname != null || picname != "" || picname != undefined) {
                //$("#attchimage").attr("", pathdata + picname);
                $("#attchimage").attr("src", pathdata + picname);
                $("#ViewImageModal").modal("show");
            }
        }
        function addNoteforOrder() {

            var orderId = $("#txtOrderId").val();
            var txtNoteOrderAll = $("#txtNoteOrderAll").val();

            if (txtNoteOrderAll == null || txtNoteOrderAll == "" || txtNoteOrderAll == undefined) {

                return false
            }


            $.ajax({
                url: '@Url.Action("addNoteforOrder", "ServiceOrders")',
                type: "POST",
                data: { "OrderId": orderId, "NoteOrder": txtNoteOrderAll },
                dataType: "json",
                cache: false,
                success: function (result) {
                    if (result.success) {
                        $("#RecentActivity").html(result.listActivity);
                        $("#txtNoteOrderAll").val("");
                    } else {
                        ShowMsgError(result.message);
                        //alert(result.message);
                        //ChangeAssignee.modal('show');
                    }
                },
                error: function (err) {
                    return false;
                }
            });
        }
        function DrawActivity() {

            var orderId = $("#txtOrderId").val();

            if (orderId == null || orderId == "" || orderId == undefined) {

                return false
            }


            $.ajax({
                url: '@Url.Action("DrawActivity", "ServiceOrders")',
                type: "GET",
                data: { "OrderId": orderId },
                dataType: "json",
                cache: false,
                success: function (result) {
                    if (result.success) {
                        $("#RecentActivity").html(result.listActivity);

                    } else {
                        alert(result.message);
                        //ChangeAssignee.modal('show');
                    }
                },
                error: function (err) {
                    return false;
                }
            });
        }
    </script>

}