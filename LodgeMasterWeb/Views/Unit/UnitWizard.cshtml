@using Newtonsoft.Json;
@inject IHttpContextAccessor HttpContextAccessor
@{
    Layout = "_Layout_main";

}

@{
    var permissions = new List<KeyValuePair<string, string>>();

    // استرجاع الصلاحيات من الجلسة إذا كانت موجودة
    var permissionsJson = HttpContextAccessor.HttpContext.Session.GetString("UserPermissions");

    if (!string.IsNullOrEmpty(permissionsJson))
    {
        permissions = JsonConvert.DeserializeObject<List<KeyValuePair<string, string>>>(permissionsJson);
    }

    // التحقق من وجود صلاحيات معينة
    bool canRole = permissions.Any(c => c.Key == "Permission" && c.Value == "Permissions.Role.View");
    bool canEdit = permissions.Any(c => c.Key == "Permission" && c.Value == "Permissions.StaffManagement.Edit");
    bool canDelete = permissions.Any(c => c.Key == "Permission" && c.Value == "Permissions.StaffManagement.Delete");
}
<style>
    .color-box {
        width: 30px;
        height: 30px;
        display: inline-block;
        margin: 2px;
        border-color: black;
        border: 5px;
    }
</style>
<div class="container-fluid">
    <div class="row">
        <div class="col-lg-12 pt-3">
            <header class="header-filter">
                <div class="group-filter d-flex">
                    @* <div class="input-group me-3">
                    <input class="form-control" type="search" placeholder="Search" aria-label="Recipient's username" aria-describedby="button-addon2">
                    <button class="btn btn-outline-master" id="button-addon2" type="button"> <i class="fa-solid fa-magnifying-glass"></i></button>
                    </div>
                    <button class="btn btn-outline-master d-flex align-items-center" type="button" data-bs-toggle="modal" data-bs-target="#exampleModal"> <i class="fa-solid fa-arrow-down-wide-short me-2"></i>Filter</button>
                    *@
                </div>
                <div class="date">
                    @ViewBag.DisplayCurrntDate
                </div>
@*                 <a class="btn btn-master d-flex align-items-center rounded-pill btn-Create-Order" asp-controller="CreateOrders" asp-action="Index">
                    <i class="fa-solid fa-plus me-2"></i>Create Order
                </a> *@
                <div class="dropdown">
                    <button class="btn btn-primary dropdown-toggle rounded-pill btn-master" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                        <i class="fa-solid fa-plus me-2"></i> Create
                    </button>
                    <ul class="dropdown-menu bg-primary text-white">
                        @if (permissions != null && permissions.Any(c => c.Key == "Permission" && c.Value == "Permissions.CreateOrders.Create"))
                        {
                            <li><a class="dropdown-item text-white" asp-controller="CreateOrders" asp-action="Index"><i class="fa-solid fa-plus me-2"></i> Order</a></li>
                        }
                        @if (permissions != null && permissions.Any(c => c.Key == "Permission" && c.Value == "Permissions.InspectionOrder.Create"))
                        {
                            <li><a class="dropdown-item text-white" asp-controller="InspectionOrder" asp-action="InspectionOrder"><i class="fa-solid fa-plus me-2"></i> Room inspiction</a></li>
                        }
                    </ul>
                </div>
            </header>
        </div>
    </div>
</div>
<div id="pageMasterLoad">
    <div class="HomeDashboard">
        <div class="container-fluid">

            <div class="row">

                <div class="col-lg-12 mb-4">
                    <div class="row">
                        <div class="overview-Orders">
                            <h1 class="text-center mb-3">Generating rooms</h1>
                            <div class="container-fluid">
                                <div class="row justify-content-center">
                                    <div class="col-lg-6    ">
                                        <div class="form-group mb-3">
                                            <label for="">Number of Floors</label>
                                            <input class="form-control" type="number" id="txtFloorsNo" />
                                            @* <Select class="form-control" id="DDLFloor">
                                            </Select> *@
                                        </div>
                                        <div class="form-group">
                                            <label>Number of rooms per floor</label>
                                            <input class="form-control" type="number" id="txtRoomsNo" />
                                        </div>
                                    </div>
                                    <div class="col-lg-6 col-md-6 col-sm-12 mb-3">
                                        <div class="form-group mb-3">
                                            <label >Category Room</label>
                                            <div class="input-group ">
                                                <input class="form-control" type="text" id="txtCatName" />

                                                @* <select class="form-select" id="ddlCategoryRoom" aria-label="Default select example">
                                                </select> *@
                                                @* <button class="input-group-text btn-outline-master" id="basic-addCatroom" data-bs-toggle="modal" data-bs-target="#AddCategoryRoom"> <i class="fa-solid fa-plus"></i></button> *@
                                                <button class="input-group-text btn-outline-master" id="basic-addCatroom" onclick="addcategoryroom()"> <i class="fa-solid fa-plus"></i></button>
                                            </div>
                                        </div>
                                        <div class="add-item-order">
                                            <ul class="list-unstyled" id="ListCatRoom">

                                                @* <li class="d-flex justify-content-between align-items-center border-bottom pb-2 mb-3">
                                                    <div class="d-flex  align-items-center">
                                                        <div class="icon me-2 data-catid="" rounded" style="width: 30px; height: 30px; background-color: #005daa"></div>
                                                        text
                                                    </div>
                                                    <div class="d-flex  align-items-center">
                                                        <label class="me-2">Change Color : </label>
                                                        <input type="color" name="name" value="" />
                                                        </div>
                                                </li>
                                                <li class="d-flex justify-content-between align-items-center border-bottom pb-2 mb-3">
                                                    <div class="d-flex  align-items-center">
                                                        <div class="icon me-2 rounded " style="width: 30px; height: 30px; background-color: #005daa"></div>
                                                        text
                                                    </div>
                                                    <div class="d-flex  align-items-center">
                                                        <label class="me-2">Change Color : </label>
                                                        <input type="color" name="name" value="" />
                                                    </div>
                                                </li> *@
                                            </ul>
                                        </div>
                                    </div>

                                </div>
                            </div>
                            <div class="card-footer d-flex justify-content-center">
                                <button class="btn btn-primary me-2 px-5 rounded-pill" onclick="generatRooms()">Generate</button>
                            </div>
                        </div>
                    </div>

                </div>

            </div>
        </div>
    </div>
</div>

<!-- Modal -->
<div class="modal fade" id="colorGridModal" tabindex="-1" aria-labelledby="colorGridModalLabel" aria-hidden="true">
    <div class="modal-dialog modal">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="colorGridModalLabel">Colors</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="d-flex flex-wrap justify-content-center">
                    <div class="color-box" style="background-color: #FF5733;"></div>
                    <div class="color-box" style="background-color: #33FF57;"></div>
                    <div class="color-box" style="background-color: #3357FF;"></div>
                    <div class="color-box" style="background-color: #F1C40F;"></div>
                    <div class="color-box" style="background-color: #E74C3C;"></div>
                    <div class="color-box" style="background-color: #9B59B6;"></div>
                    <div class="color-box" style="background-color: #1ABC9C;"></div>
                    <div class="color-box" style="background-color: #2ECC71;"></div>
                    <div class="color-box" style="background-color: #3498DB;"></div>
                </div>
            </div>
            <div class="modal-footer">
                <div class="color-box"></div>
                <button type="button" class="btn btn-secondary">chose</button>
            </div>
        </div>
    </div>
</div>
@* Model Add category Room *@
@* <div class="modal fade model-filter-home" id="AddCategoryRoom" tabindex="-1" aria-labelledby="AddCategoryRoomLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="exampleModalLabel">Add Category Room</h1>
                <button class="btn-close" type="button" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="AddCatRoombody">
                <div class="container-fluid">
                    <div class="row">
                        <div class="col-lg-12 mb-2">
                            <div class="form-group">
                                <label>Category Name</label>
                                <input class="form-control" type="text" id="txtCatRoom_en">
                            </div>
                        </div>

                        <div class="col-lg-12 mb-2">
                            <div class="form-check form-switch d-flex p-0">
                                <label class="form-check-label" for="flexSwitchCheckDefault">Active</label>
                                <input class="mx-2 form-check-input" id="chkActive_CatRoom" type="checkbox" role="switch">
                            </div>
                        </div>
                        <div class="col-lg-12 mb-2">
                            <div class="form-check">
                                <label class="form-check-label" for="flexSwitchCheckDefault">Color</label>
                                <input class="mx-2" id="Color_CatRoom" type="color">
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer justify-content-start">
                <button class="btn btn-primary btn-apply rounded-pill col-12" type="button" onclick="createCatRoom()">ADD </button>
            </div>
        </div>
    </div>
</div> *@
@section Scripts {
    <partial name="_validationscriptspartial" />
    <script>
        $(document).ready(function () {
            //GetAllFloors($("#DDLFloor"));
            GetAllCategories();
            $(document).on('change', 'input[type="color"]', function () {
                // Get the selected color value
                var selectedColor = $(this).val();

                // Update the background color of the corresponding icon
                $(this).closest('li').find('.icon').css('background-color', selectedColor);
                var catid = $(this).closest('li').find('.icon').data("catid");
                var colorname = selectedColor;
                updatecategorycolor(catid, colorname);
                // Optionally, you can log the color change or perform additional actions
               // console.log('Color changed to: ' + selectedColor);
            });
        });
        function GetAllFloors(objFloor) {
            $.ajax({
                type: "GET",
                url: '@Url.Action("GetAllFloors", "Unit")',
                //contentType: "application/json; charset=utf-8",
                dataType: "json",
                cache: false,
                success: function (result) {
                    if (result.success) {
                        var ddlobject = objFloor;// $("#DDLFloor");
                        ddlobject.empty();

                        // ddlobject.append($("<option></option>")
                        //     .attr("value", "0")
                        //     .text("Select Department"));
                        result.returnData.forEach(function (item) {
                            ddlobject.append($("<option></option>")
                                .attr("value", item.value)
                                .text(item.text));
                        });
                    } else {
                        ShowMsgError(result.message);
                    }
                    // if (data.success == true) {
                    //     //alert(data.returnData);
                    //     var objData = data.returnData;
                    //     //alert(objData.length);
                    //     for (var i = 0; i < objData.length; i++) {
                    //         $("#DDLFloor").append("<option value='" + objData[i].Value + "'>" + objData[i].Text + "</option>");
                    //     }
                    // }
                    // else {
                    //     alert(data.returnData);
                    // }
                },
                error: function (error) {
                    alert(error);
                }
            });
        } 
        function GetAllCategories() {
            
            $.ajax({
                type: "GET",
                url: '@Url.Action("GetAllCategoryRoom", "Unit")',
                //contentType: "application/json; charset=utf-8",
               // dataType: "json",
                cache: false,
                success: function (result) {
                    if (result.success) {
                        $("#ListCatRoom").html(result.returnData);
                    } else {
                        ShowMsgError(result.message);
                    }
                },
                error: function (error) {
                    alert(error);
                }
            });
        }
        function addcategoryroom() {
            var objData = {};
            //var isActive = 0;

            var txtCatRoom_en = $('#txtCatName').val();
            //var chkActive = $('#chkActive_CatRoom').val();
            var colorCatRoom = "#00ff22";//$('#Color_CatRoom').val();


            if (!txtCatRoom_en) {// } == null)  || txtitem_en == "" || txtitem_en == undefined) {
                ShowMsgError('Please enter Category name');
                return false;
            }

            // if (chkActive.is(':checked') == true) {
            //     isActive = 1;
            // }

            objData = {
                
                UnitCatName: txtCatRoom_en,
                UnitCatColor: colorCatRoom
            }

            var jsonData = JSON.stringify(objData);


            $.ajax({
                type: "POST",
                url: '@Url.Action("CreateCategoryRoom", "Unit")',
                //contentType: "application/json; charset=utf-8",
                dataType: "json",
                cache: false,
                data: { "dataObj": jsonData },
                success: function (result) {
                    if (result.success) {
                        //var ddlobject = $("#ddlCategoryRoom");
                        //ddlobject.empty();

                        // ddlobject.append($("<option></option>")
                        //     .attr("value", "0")
                        //     .text("Select Department"));
                        //result.returnData.forEach(function (item) {
                        // ddlobject.append($("<option></option>")
                        //     .attr("value", item.value)
                        //     .text(item.text));
                        //});
                        ShowMsgSuccess("Ok Add");
                        GetAllCategories();
                    } else {
                        ShowMsgError(result.returnData);
                    }
                },
                error: function (error) {
                    alert(error);
                }
            });
        }
        function updatecategorycolor(catid,colorname) {


            if (!colorname) {// } == null)  || txtitem_en == "" || txtitem_en == undefined) {
                ShowMsgError('error Category color');
                return false;
            }

            $.ajax({
                type: "POST",
                url: '@Url.Action("UpdateCategoryColor", "Unit")',
                //contentType: "application/json; charset=utf-8",
                //dataType: "json",
                cache: false,
                data: { "catid": catid, "colorname": colorname },
                success: function (result) {
                    if (result.success) {
                        //var ddlobject = $("#ddlCategoryRoom");
                        //ddlobject.empty();

                        // ddlobject.append($("<option></option>")
                        //     .attr("value", "0")
                        //     .text("Select Department"));
                        //result.returnData.forEach(function (item) {
                        // ddlobject.append($("<option></option>")
                        //     .attr("value", item.value)
                        //     .text(item.text));
                        //});
                        ShowMsgSuccess("Ok Add");
                        //GetAllCategories();
                    } else {
                        ShowMsgError(result.returnData);
                    }
                },
                error: function (error) {
                    alert(error);
                }
            });
        }
       
        function generatRooms() {

            var floors = $("#txtFloorsNo").val(); //$("#DDLFloor").val();
            var roomsNo = $("#txtRoomsNo").val();
            //var startRoomNo = $("#txtStartRoomNo").val();

            if (roomsNo == null || roomsNo == undefined || roomsNo == "") {
                ShowMsgError("Please entr count room No.");
                return false;
            }

            // if (startRoomNo == null || startRoomNo == undefined || startRoomNo == "") {
            //     ShowMsgError("Please entr start room No. from");
            //     return false;
            // }

            objdata = {
                Floors: floors,
                RoomsNo: roomsNo,
            }
            
            var jsonData = JSON.stringify(objdata);
            $.ajax({
                url: '@Url.Action("GeneraterRooms", "Unit")',
                type: 'POST',
                dataType: 'json',
                data: { "dataObj": jsonData },
                success: function (data) {
                    if (data != null) {
                        
                        if (data.success == true) {
                            
                            // console.log(data.returnData);
                            //ShowMsgSuccess("Done");
                            window.location.href = '@Url.Action("DisplayRooms", "Unit")';
                        }
                        else {
                            ShowMsgError(data.returnData);
                        }
                    }
                }

            });

        }
        // function createCatRoom() {
        //     var objData = {};
        //     var isActive = 0;

        //     var txtCatRoom_en = $('#txtCatRoom_en').val();
        //     var chkActive = $('#chkActive_CatRoom').val();
        //     var colorCatRoom = $('#Color_CatRoom').val();


        //     if (!txtCatRoom_en) {// } == null)  || txtitem_en == "" || txtitem_en == undefined) {
        //         ShowMsgError('Please enter Category name');
        //         return false;
        //     }

        //     if (chkActive.is(':checked') == true) {
        //         isActive = 1;
        //     }

        //     objData = {
        //         bActive: isActive,
        //         CatRoom: txtCatRoom_en,
        //         CatColor: colorCatRoom
        //     }

        //     var jsonData = JSON.stringify(objData);


        //     $.ajax({
        //         type: "POST",
        //         url: '@Url.Action("CreateCategoryRoom", "Unit")',
        //         //contentType: "application/json; charset=utf-8",
        //         dataType: "json",
        //         cache: false,
        //         //data: jsonData
        //         success: function (result) {
        //             if (result.success) {
        //                 var ddlobject = $("#ddlCategoryRoom");
        //                 //ddlobject.empty();

        //                 // ddlobject.append($("<option></option>")
        //                 //     .attr("value", "0")
        //                 //     .text("Select Department"));
        //                 //result.returnData.forEach(function (item) {
        //                 ddlobject.append($("<option></option>")
        //                     .attr("value", item.value)
        //                     .text(item.text));
        //                 //});
        //             } else {
        //                 ShowMsgError(result.message);
        //             }
        //         },
        //         error: function (error) {
        //             alert(error);
        //         }
        //     });
        // }

        // function generatRooms() {

        //     var floors = $("#DDLFloor").val();
        //     var roomsNo = $("#txtRoomsNo").val();
        //     var startRoomNo = $("#txtStartRoomNo").val();

        //     if (roomsNo == null || roomsNo == undefined || roomsNo == "") {
        //         ShowMsgError("Please entr count room No.");
        //         return false;
        //     }

        //     // if (startRoomNo == null || startRoomNo == undefined || startRoomNo == "") {
        //     //     ShowMsgError("Please entr start room No. from");
        //     //     return false;
        //     // }

        //     objdata = {
        //         Floors: floors,
        //         RoomsNo: roomsNo,
                
        //     }
        //     var jsonData = JSON.stringify(objdata);
        //     $.ajax({
        //         url: '@Url.Action("GeneraterRooms", "Unit")',
        //         type: 'POST',
        //         dataType: 'json',
        //         data: { "dataObj": jsonData },
        //         success: function (data) {
        //             if (data != null) {
        //                 if (data.success == true) {
        //                     // console.log(data.returnData);
        //                     //ShowMsgSuccess("Done");
        //                     window.location.href = '@Url.Action("DisplayRooms", "Unit")';
        //                 }
        //                 else {
        //                     ShowMsgError(data.returnData);
        //                 }
        //             }
        //         }

        //     });

        // }
    </script>
}