@using Newtonsoft.Json;
@inject IHttpContextAccessor HttpContextAccessor
@{
    Layout = "_Layout_main";
}
@{
    var permissions = new List<KeyValuePair<string, string>>();

    // استرجاع الصلاحيات من الجلسة إذا كانت موجودة
    var permissionsJson = HttpContextAccessor.HttpContext.Session.GetString("UserPermissions");

    if (!string.IsNullOrEmpty(permissionsJson))
    {
        permissions = JsonConvert.DeserializeObject<List<KeyValuePair<string, string>>>(permissionsJson);
    }

    // التحقق من وجود صلاحيات معينة
    bool canRole = permissions.Any(c => c.Key == "Permission" && c.Value == "Permissions.Role.View");
    bool canEdit = permissions.Any(c => c.Key == "Permission" && c.Value == "Permissions.StaffManagement.Edit");
    bool canDelete = permissions.Any(c => c.Key == "Permission" && c.Value == "Permissions.StaffManagement.Delete");
}
<div class="container-fluid">
    <div class="row">
        <div class="col-lg-12 pt-3">
            <header class="header-filter">
                <div class="group-filter d-flex">
                    <div class="input-group me-3">
                        <input class="form-control" type="search" placeholder="Search" aria-label="Recipient's username" aria-describedby="button-addon2">
                        <button class="btn btn-outline-master" id="button-addon2" type="button"> <i class="fa-solid fa-magnifying-glass"></i></button>
                    </div>
                    <button class="btn btn-outline-master d-flex align-items-center" type="button" data-bs-toggle="modal" data-bs-target="#exampleModal"> <i class="fa-solid fa-arrow-down-wide-short me-2"></i>Filter</button>
                </div>
                <div class="date">
                    @ViewBag.DisplayCurrntDate
                </div>
                <div class="dropdown">
                    <button class="btn btn-primary dropdown-toggle rounded-pill btn-master" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                        <i class="fa-solid fa-plus me-2"></i> Create
                    </button>
                    <ul class="dropdown-menu bg-primary text-white">
                        @if (permissions != null && permissions.Any(c => c.Key == "Permission" && c.Value == "Permissions.CreateOrders.Create"))
                        {
                            <li><a class="dropdown-item text-white" asp-controller="CreateOrders" asp-action="Index"><i class="fa-solid fa-plus me-2"></i> Order</a></li>
                        }
                        @if (permissions != null && permissions.Any(c => c.Key == "Permission" && c.Value == "Permissions.InspectionOrder.Create"))
                        {
                            <li><a class="dropdown-item text-white" asp-controller="InspectionOrder" asp-action="InspectionOrder"><i class="fa-solid fa-plus me-2"></i> Room inspiction</a></li>
                        }
                    </ul>
                </div>
            </header>
        </div>
    </div>
</div>
<div id="pageMasterLoad">
    <div class="HomeDashboard">
        <div class="container-fluid">
            <div class="row">
                <div class="col-lg-12 mb-5">
                    <div class="overview-Orders mb-5">
@*                         <div class="d-flex justify-content-between mb-4">
                            <h4>Shifts</h4>
                            <button class="rounded-pill px-4 btn btn-outline-master" data-bs-toggle="modal" data-bs-target="#AddShiftwork"> <i class="fa-solid fa-plus me-2"></i>Add Shift work</button>
                        </div> *@

                            <div class="d-flex justify-content-between mb-4">
                            <a class="position-absolute" onclick="returnPage()"><i class="fa-solid fa-arrow-left-long"></i></a>
                            <h4 class="mb-4">Shifts</h4>
                            <button class="rounded-pill px-4 btn btn-outline-master" data-bs-toggle="modal" data-bs-target="#AddShiftwork"> <i class="fa-solid fa-plus me-2"></i>Add Shift work</button>
                        </div>
                
                        <table class="table table-responsive data-Tables" id="dataTablesShift">
                            <thead>
                                <tr>
                                    @* <th scope="col"></th> *@
                                    <th scope="col">Shift english name</th>
                                    <th scope="col">Shift arabic name</th>
                                    <th scope="col">Start Time</th>
                                    <th scope="col">End Time</th>
                                    <th scope="col">Active</th>
                                    <th scope="col">&nbsp;</th>
                                </tr>
                            </thead>
                            <tbody>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade model-filter-home" id="AddShiftwork" tabindex="-1" aria-labelledby="AddShiftLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="exampleModalLabel">Add Shift work</h1>
                <button class="btn-close" type="button" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="Addshiftbody">
                <div class="container-fluid">
                    <div class="row">
                        <div class="col-lg-12 mb-2">
                            <div class="form-group">
                                <label>English Name</label>
                                <input class="form-control" type="text" id="txtShift_en">
                            </div>
                        </div>
                        <div class="col-lg-12 mb-2">
                            <div class="form-group">
                                <label>Arabic Name</label>
                                <input class="form-control" type="text" id="txtShift_ar">
                            </div>
                        </div>
                        <div class="col-lg-12 mb-2">
                            <label for="">Start Time </label>
                            <input class="form-control" type="time" name="" id="dtTimeStart">
                        </div>
                        <div class="col-lg-12 mb-2">
                            <label for="">End Time </label>
                            <input class="form-control" type="time" name="" id="dtTimeEnd">
                        </div>
                        <div class="col-lg-12 mb-2">
                            <div class="form-check form-switch d-flex p-0">
                                <input class="mx-2 form-check-input" id="chkActive" type="checkbox" role="switch" checked>
                                <label class="form-check-label" for="flexCheckDefault">Active</label>
                            </div>
                        </div>

                    </div>
                </div>
            </div>
            <div class="modal-footer justify-content-start">
                <button class="btn btn-primary btn-apply rounded-pill col-12" type="button" onclick="createShift()" >ADD </button>
            </div>
        </div>
    </div>
</div>
<div class="modal fade model-filter-home" id="EditShiftwork" tabindex="-1" aria-labelledby="EditShiftLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="exampleModalLabel_ed">Edit Shift Work</h1>
                <button class="btn-close" type="button" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="EditShiftbody">
                <div class="container-fluid">
                    <div class="row">
                        <input type="hidden" id="hdShiftid" />
                        <div class="col-lg-12 mb-2">
                            <div class="form-group">
                                <label>English Name</label>
                                <input class="form-control" type="text" id="txtShift_en_ed">
                            </div>
                        </div>
                        <div class="col-lg-12 mb-2">
                            <div class="form-group">
                                <label>Arabic Name</label>
                                <input class="form-control" type="text" id="txtShift_ar_ed">
                            </div>
                        </div>
                        <div class="col-lg-12 mb-2">
                            <label for="">Start Time </label>
                            <input class="form-control" type="time" name="" id="dtTimeStart_ed">
                        </div>
                        <div class="col-lg-12 mb-2">
                            <label for="">End Time </label>
                            <input class="form-control" type="time" name="" id="dtTimeEnd_ed">
                        </div>
                        <div class="col-lg-12 mb-2">
                            <div class="form-check form-switch d-flex p-0">
                                <input class="mx-2 form-check-input" id="chkActive_ed" type="checkbox" role="switch">
                                <label class="form-check-label" for="flexCheckDefault">Active</label>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer justify-content-start">
                <button class="btn btn-primary btn-apply rounded-pill col-12" type="button" onclick="saveEditShift()">Save </button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            drawtable();
        });//0530350047
        function returnPage(){
            window.location.href="/TimeManagement/TimeManagement";
        }
        function drawtable() {
            try {
                // Destroy the existing DataTable, if it exists
                if ($.fn.DataTable.isDataTable("#dataTablesShift")) {
                    $("#dataTablesShift").DataTable().destroy();
                }

                $("#dataTablesShift").DataTable({
                    serverSide: true,
                    stateSave: false,
                    processing: true,
                    info: false,
                    searching: false,
                    lengthChange: false,
                    language: {
                        processing: '<i class="fa fa-spinner fa-spin fa-3x fa-fw"></i><span class="sr-only">Loading...</span> '
                    },
                    ajax: {
                        url: '@Url.Action("GetShiftWork", "TimeManagement")', //'/timemanagement/GetShiftWork',
                        type: 'POST',
                        cache: false,
                    },
                    order: [[1, 'asc'], [2, 'asc']],

                    columns: [

                       // { "data": "shiftID", "name": "ShiftID", "className": "d-none", "visible": false, "searchable": false },
                        { "data": "shiftName_E", "name": "ShiftName_E" },
                        { "data": "shiftName_A", "name": "ShiftName_A" },
                        { "data": "startTime", "name": "StartTime" },
                        { "data": "endTime", "name": "EndTime" },

                        {
                            "name": "bActive ", "render": function (data, type, row) {
                                var rowDiv = '';

                                if (row.bActive == 0) {

                                    rowDiv = `<div class="Availability"> <i class="fa-solid fa-circle-exclamation text-warning me-2"></i></div>`;
                                }
                                else {
                                    rowDiv = `<div class="Availability" ><i class="fa-solid fa-circle-check text-success me-2"> </i></div >`;
                                }

                                return rowDiv;
                            }
                        },
                        {
                            "name": "ShiftID", "render": function (data, type, row) {
                                var rowDiv = '';
                                rowDiv = `<a class="js-itemsrowedit" data-shiftid="${row.shiftID}" href="javascript:" onclick="editShift(this)"><i class="fa-regular fa-pen-to-square"></i></a>`;
                                if (row.isDefault == 0) {
                                    rowDiv += `<a class="text-danger js-itemsrowdelete" data-shiftid="${row.shiftID}" href="javascript:" onclick="deleteShift(this)"><i class="fa-solid fa-trash-can"></i></a>`;
                                }
                                //rowDiv += `</div>`;
                                return rowDiv;
                            }
                        }
                    ],
                    createdRow: function (row, data, dataIndex) {
                        $(row).find('td').each(function (index) {
                            $(this).attr('data-label', $('#dataTablesShift th').eq(index).text());
                        });
                    }
                });
            }
            catch (err) {
                //console.error("An error occurred:", err.message);
                ShowMsgError(err.message);

            }
        }
        function createShift() {
            var objData = {};
            var isActive = 0;

            var txtShift_en = $('#txtShift_en').val();
            var txtShift_ar = $("#txtShift_ar").val();
            var dtTimeStart = $("#dtTimeStart").val();
            var dtTimeEnd = $("#dtTimeEnd").val();
            var chkActive = $("#chkActive");


            if (!txtShift_en) {// } == null)  || txtitem_en == "" || txtitem_en == undefined) {
                ShowMsgError('Please enter English name');
                return false;
            }
            if (!txtShift_ar) {// == null || txtitem_ar == "" || txtitem_ar == undefined) {
                //ShowMsgError('Please enter Arabic name');
                // return false;
                txtShift_ar = '';
            }
            if (!dtTimeStart) {// } == null)  || txtitem_en == "" || txtitem_en == undefined) {
                ShowMsgError('Please enter Start Time');
                return false;
            }
            if (!dtTimeEnd) {// } == null)  || txtitem_en == "" || txtitem_en == undefined) {
                ShowMsgError('Please enter End Time');
                return false;
            }
            if (chkActive.is(':checked') == true) {
                isActive = 1;
            }
            
            objData = {
                ShiftName_E: txtShift_en,
                ShiftName_A: txtShift_ar,
                StartTime: dtTimeStart,
                EndTime: dtTimeEnd,
                bActive: isActive
            }

            var jsonData = JSON.stringify(objData);

            $.ajax({
                url: '@Url.Action("CreateShiftWork", "TimeManagement")',
                type: 'POST',
                dataType: 'json',
                data: { "dataObj": jsonData },
                success: function (data) {
                    if (data != null) {
                        if (data.success == true) {
                            ShowMsgSuccess(data.returnData);
                            $("#AddShiftwork").modal('hide');
                            clearModalShift();
                            drawtable();
                        }
                        else {
                            ShowMsgError(data.returnData);
                            $("#AddShiftwork").modal('show');
                        }
                    }
                },
                error: function (error) {
                    ShowMsgError(error);
                }
            });
        }
        function saveEditShift() {
            var objData = {};
            var isActive = 0;

            var hdShiftid = $('#hdShiftid').val();
            var txtShift_en = $('#txtShift_en_ed').val();
            var txtShift_ar = $("#txtShift_ar_ed").val();
            var dtTimeStart = $("#dtTimeStart_ed").val();
            var dtTimeEnd = $("#dtTimeEnd_ed").val();
            var chkActive = $("#chkActive_ed");


            if (!hdShiftid) {// } == null)  || txtitem_en == "" || txtitem_en == undefined) {
                ShowMsgError('Please select shift work');
                return false;
            }
            if (!txtShift_en) {// } == null)  || txtitem_en == "" || txtitem_en == undefined) {
                ShowMsgError('Please enter shift english name');
                return false;
            }
            if (!txtShift_ar) {// == null || txtitem_ar == "" || txtitem_ar == undefined) {
                //alert('Please enter department arabic name');
                //return false;
                txtShift_ar = '';
            }
            if (!dtTimeStart) {// } == null)  || txtitem_en == "" || txtitem_en == undefined) {
                ShowMsgError('Please enter Start Time');
                return false;
            }
            if (!dtTimeEnd) {// } == null)  || txtitem_en == "" || txtitem_en == undefined) {
                ShowMsgError('Please enter End Time');
                return false;
            }
            if (chkActive.is(':checked') == true) {
                isActive = 1;
            }

            objData = {
                ShiftID: hdShiftid,
                ShiftName_E: txtShift_en,
                ShiftName_A: txtShift_ar,
                StartTime: dtTimeStart,
                EndTime: dtTimeEnd,
                bActive: isActive
            }

            var jsonData = JSON.stringify(objData);

            $.ajax({
                url: '@Url.Action("SaveEditShiftWork", "Timemanagement")',
                type: 'POST',
                dataType: 'json',
                data: { "dataObj": jsonData },
                success: function (data) {

                    if (data != null) {
                        if (data.success == true) {
                            $("#EditShiftwork").modal('hide');
                            ShowMsgSuccess(data.returnData);

                            clearModalShift();
                            drawtable();
                        }
                        else {
                            //alert(data.returnData);
                            ShowMsgError(data.returnData);
                            $("#EditShiftwork").modal('show');
                        }
                    }
                },
                error: function (error) {
                    ShowMsgError(error);
                }
            });
        }
        function editShift(clickedElement) {

            var btnEdit = $(clickedElement);
            var shiftid = btnEdit.data("shiftid");

            $.ajax({
                url: '@Url.Action("EditShiftWork", "Timemanagement")',
                type: 'POST',
                data: { shiftid: shiftid },
                success: function (data) {

                    if (data != null) {
                        if (data.success == true) {
                            clearModalShift();
                            $("#hdShiftid").val(data.returnData.shiftID);
                            $("#txtShift_en_ed").val(data.returnData.shiftName_E);
                            $("#txtShift_ar_ed").val(data.returnData.shiftName_A);
                            $("#dtTimeStart_ed").val(data.returnData.startTime);
                            $("#dtTimeEnd_ed").val(data.returnData.endTime);

                            if (data.returnData.bActive == 0) {
                                $("#chkActive_ed").attr("checked", false);
                            }
                            else 
                            {
                                $("#chkActive_ed").attr("checked", true);
                            }
                            $("#EditShiftwork").modal("show");
                        }
                        else {
                            //alert(data.returnData);
                            $("#EditShiftwork").modal('hide')
                        }
                    }
                },
                error: function (error) {
                    ShowMsgError(error);
                }
            });

        }
        function deleteShift(clickedElement) {

            var btnEdit = $(clickedElement);
            var shiftid = btnEdit.data("shiftid");

            Swal.fire({
                title: 'Are you sure delete Shift Work?',
                text: "",
                //icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, delete it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: '@Url.Action("DeleteShiftWork", "Timemanagement")',
                        type: 'POST',
                        data: { shiftid: shiftid },
                        success: function (data) {
                            if (data != null) {
                                if (data.success == true) {
                                    ShowMsgSuccess(data.returnData);
                                    drawtable();
                                }
                                else {
                                    ShowMsgError(data.returnData);
                                }
                            }
                        },
                        error: function (error) {

                            ShowMsgError(error);
                        }
                    });
                }
            })
        }
        function clearModalShift() {

            $('#txtShift_en').val();
            $("#txtShift_ar").val();
            $("#chkActive").attr("checked", true);
            $("#dtTimeStart").val();
            $("#dtTimeEnd").val();

            $("#chkActive_ed").attr("checked", false);
            $("#txtShift_en_ed").val();
            $("#txtShift_ar_ed").val();
            $("#dtTimeStart_ed").val();
            $("#dtTimeEnd_ed").val();
            $("#hdShiftid").val();

        }

    </script>
}