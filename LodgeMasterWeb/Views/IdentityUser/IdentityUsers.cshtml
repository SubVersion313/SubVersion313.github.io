@using Newtonsoft.Json;
@inject IHttpContextAccessor HttpContextAccessor
@{
    Layout = "_Layout_main";
}
@{
    var permissions = new List<KeyValuePair<string, string>>();

    // استرجاع الصلاحيات من الجلسة إذا كانت موجودة
    var permissionsJson = HttpContextAccessor.HttpContext.Session.GetString("UserPermissions");

    if (!string.IsNullOrEmpty(permissionsJson))
    {
        permissions = JsonConvert.DeserializeObject<List<KeyValuePair<string, string>>>(permissionsJson);
    }

    // التحقق من وجود صلاحيات معينة
    bool canRole = permissions.Any(c => c.Key == "Permission" && c.Value == "Permissions.Role.View");
    bool canEdit = permissions.Any(c => c.Key == "Permission" && c.Value == "Permissions.StaffManagement.Edit");
    bool canDelete = permissions.Any(c => c.Key == "Permission" && c.Value == "Permissions.StaffManagement.Delete");


}
<div class="container-fluid">
    <div class="row">
        <div class="col-lg-12 pt-3">
            <header class="header-filter">
                <div class="group-filter d-flex">
                    @*<div class="input-group me-3">
                    <input class="form-control" type="search" placeholder="Search" aria-label="Recipient's username" aria-describedby="button-addon2">
                    <button class="btn btn-outline-master" id="button-addon2" type="button"> <i class="fa-solid fa-magnifying-glass"></i></button>
                    </div>
                    <button class="btn btn-outline-master d-flex align-items-center" type="button" data-bs-toggle="modal" data-bs-target="#exampleModal"> <i class="fa-solid fa-arrow-down-wide-short me-2"></i>Filter</button>
                    *@
                </div>
                <div class="date">
                    @ViewBag.DisplayCurrntDate 
                </div>
@*                 <a class="btn btn-master d-flex align-items-center rounded-pill btn-Create-Order" asp-controller="CreateOrders" asp-action="Index">
                    <i class="fa-solid fa-plus me-2"></i>Create Order
                </a> *@
                <div class="dropdown">
                    <button class="btn btn-primary dropdown-toggle rounded-pill btn-master" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                        <i class="fa-solid fa-plus me-2"></i> Create
                    </button>
                    <ul class="dropdown-menu bg-primary text-white">
                        @if ( permissions !=null && permissions.Any(c => c.Key == "Permission" && c.Value == "Permissions.CreateOrders.Create")){
                        <li><a class="dropdown-item text-white" asp-controller="CreateOrders" asp-action="Index"><i class="fa-solid fa-plus me-2"></i> Order</a></li>
                        }
                        @if ( permissions !=null && permissions.Any(c => c.Key == "Permission" && c.Value == "Permissions.InspectionOrder.Create")){
                            <li><a class="dropdown-item text-white" asp-controller="InspectionOrder" asp-action="InspectionOrder"><i class="fa-solid fa-plus me-2"></i> Room inspiction</a></li>
                        }
                    </ul>
                </div>
            </header>
        </div>
    </div>
</div>
<div id="pageMasterLoad">
    <div class="HomeDashboard">
        <div class="container-fluid">
            <div class="row">
                <div class="col-lg-12 mb-4">
                    <div class="overview-Orders">
                        <div class="filter-table mb-4">
                            <div class="container-fluid">
                                <div class="row align-items-center">
                                    <div class="col-lg-3 col-md-6 col-sm-12 mb-3">
                                        <div class="form-group">
                                            <label class="mb-2" for="ddlDepartmentFilter">Departments</label>
                                            <select class="form-select rounded-pill" id="ddlDepartmentFilter" onchange="FilterMain()" >
                                            </select>
                                        </div>
                                    </div>
                                    <div class="col-lg-3 col-md-6 col-sm-12 mb-3">
                                        <div class="from-group mt-4">
                                            @* <label class="mb-2" for="">Option</label> *@
                                            <div class="d-flex">
                                                <div class="form-check me-4" >
                                                    <input class="form-check-input" id="chkSuperviesor" type="checkbox" value="0" onchange="FilterMain()" >
                                                    <label class="form-check-label" for="chkSuperviesor">Supervisor</label>
                                                </div>
                                                <div class="form-check">
                                                    <input class="form-check-input" id="chkActive" type="checkbox" value="0" onchange="FilterMain()" >
                                                    <label class="form-check-label" for="chkActive" >Active</label>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-lg-3 col-md-6 col-sm-12 mb-3">
                                    </div>
                                    <div class="col-lg-3 col-md-6 col-sm-12 mb-3 text-end">
                                        <div class="from-group">
                                            <label class="mb-2" for="">&nbsp;</label>
                                        </div>
                                        @if (permissions != null && permissions.Any(c => c.Key == "Permission" && c.Value == "Permissions.StaffManagement.Create"))
                                        {
                                            <a class="rounded-pill btn btn-outline-master" asp-action="AddUser" asp-controller="IdentityUser"><i class="fa-solid fa-plus fa-fw"></i>Add user</a>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                        <table class="table table-responsive w-100" id="dataTablesUsers">
                            <thead>
                                <tr>
                                    <th scope="col" style="display:none">Id</th>
                                    <th scope="col" style="display:none">Id</th>
                                    <th scope="col">Full Name</th>
                                    <th scope="col" style="display:none">Login name</th>
                                    <th scope="col">Department</th>
                                    <th scope="col">Mobile</th>
                                    <th scope="col" style="width:130px">Role</th>
                                    <th scope="col" style="display:none">e-mail</th>
                                    <th scope="col">supervisor</th>
                                    <th scope="col">Active</th>
                                    <th scope="col">&nbsp;</th>
                                </tr>
                            </thead>
                            <tbody>
                            </tbody>
                        </table>

                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade model-filter-home" id="EditUser" tabindex="-1" aria-labelledby="EditUser" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="exampleModalLabel_ed">Edit User</h1>
                <button class="btn-close" type="button" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="EditUserbody">
                <div class="container-fluid">
                    <div class="row">
                        <input id="hdEmpId" type="hidden" />
                        <div class="col-lg-12 mb-2">
                            <div class="form-group">
                                <label>First name</label>
                                <input class="form-control" id="txtFirstName" type="text">
                            </div>
                        </div>
                        <div class="col-lg-12 mb-2">
                            <div class="form-group">
                                <label>Last name</label>
                                <input class="form-control" id="txtLastName" type="text">
                            </div>
                        </div>
@*                         <div class="col-lg-12 mb-2">
                            <div class="form-group">
                                <label>e-mail</label>
                                <input class="form-control" id="txtEmail" type="text">
                            </div>
                        </div> *@
                        <div class="col-lg-12 mb-2">
                            <div class="form-group">
                                <label for="">Mobile</label>
                                <input type="text" class="form-control" id="txtMobile">
                            </div>
                        </div>
                        <div class="col-lg-12 mb-3">
                            <div class="form-group">
                                <label class="mb-2" for="ddlItemDepartment">Department</label>
                                <select class="form-select" id="ddlItemDepartment_ed">
                                </select>
                            </div>
                        </div>
@*                         <div class="col-lg-12 mb-3">
                            <div class="form-group">
                                <label class="mb-2">User Group</label>
                                <select class="form-select" id="ddlRole_ed">
                                </select>
                            </div>
                        </div> *@
                        <div class="col-lg-12 mb-3">

                            <div class="form-group">
                                <input type="file" class="form-control form-control-sm" id="customFile">
                                @* <small>Only @FileSettings.AllowedExtensions.Replace(",",string.Empty) files are allwoed with max size (@FileSettings.MaxFileSizeInMB) MB</small> *@
                            </div>

                        </div>
                        <div class="col-lg-12 mb-2">
                            <div class="form-check">
                                <div class="form-check form-switch d-flex p-0">
                                    <input class="mx-2 form-check-input" id="chkActive_ed" type="checkbox" role="switch" checked>
                                    <label class="form-check-label" for="chkActive_ed">Active</label>
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-12 mb-2">
                            <div class="form-check">
                                <div class="form-check form-switch d-flex p-0">
                                    <input class="mx-2 form-check-input" id="chkSuperviesor_ed" type="checkbox" role="switch">
                                    <label class="form-check-label" for="chkSuperviesor_ed">Superviesor</label>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer justify-content-start">
                <button class="btn btn-primary btn-apply rounded-pill col-12" type="button" onclick="saveEditUser()">Save </button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {

            var department = '0';
            // var stock = 0;
            //var staff = 0;

            var ddlDepartmentFilter = $("#ddlDepartmentFilter");
            FillDepartment(ddlDepartmentFilter);

            FillDepartment($("#ddlItemDepartment_ed"));
            // var valDepartment = ddlDepartmentFilter.val();
            // alert(valDepartment);
            // if (valDepartment != null || valDepartment!="0"){
            //     department = valDepartment;
            //     alert("update val");
            // }
            //drawtable(department, 0, 0);


        });
        function totalitems() {
            //321 items has been enlisted
            $.ajax({
                url: '@Url.Action("GetCountItems", "IdentityUser")',
                type: "GET",
                dataType: "json",
                cache: false,
                success: function (result) {
                    if (result.success) {

                        var divtotalitems = $('.js-totalitems');
                        divtotalitems.html(`${result.returnData} items has been enlisted`)
                    } else {
                        alert(result.message);
                    }
                },
                error: function (err) {
                    return false;
                }
            });
        }
        function drawtable(department, isSuperviesor, isActive, canRole, canEdit, canDelete) {
            try {
                // Destroy the existing DataTable, if it exists
                if ($.fn.DataTable.isDataTable("#dataTablesUsers")) {
                    $("#dataTablesUsers").DataTable().destroy();
                }

                $("#dataTablesUsers").DataTable({
                    serverSide: true,
                    stateSave: false,
                    processing: true,
                    info: false,
                    searching: false,
                    lengthChange: false,
                    //colReorder: true,
                    language: {
                        processing: '<i class="fa fa-spinner fa-spin fa-3x fa-fw"></i><span class="sr-only">Loading...</span> '
                    },
                    ajax: {
                        url: '/IdentityUser/GetUsers',
                        type: 'POST',
                        cache: false,
                        data: { department, visor: isSuperviesor, bActive: isActive },
                    },
                    order: [[2, 'asc']],
                    // columnDefs: [
                    //     // {
                    //     // targets: [0, 1],
                    //     // visible: false,
                    //     // searchable: false
                    //     // },
                    //     {
                    //         targets: 9, // This targets the last column
                    //         orderable: false // Disable sorting for the last column
                    //     }
                    // ],
                    columns: [
                        { "data": "id", "name": "Id", "className": "d-none", "visible": false, "searchable": false},
                        { "data": "departmentID", "name": "DepartmentID", "className": "d-none", "visible": false, "searchable": false },
                        
                        // {
                        //     "name": "FirstName", "render": function (data, type, row) {
                        //         var rowDepartment = `
                        //                                                         <div class="user-card d-flex align-items-center">
                        //                                                                                         <div class="image me-1"><img src="../Companies/${row.photopath}/images/employee/${row.bPhoto}" alt="" width="25"></div>
                        //                                                         <div class="text"> ${row.firstName}</div>
                        //                                                         </div>`;

                        //         return rowDepartment;
                        //     }
                        // },
                        {
                            "name": "FullName", "render": function (data, type, row) {
                                var rowDepartment = `
                                                <div class="user-card d-flex align-items-center">
                                                                                                                        
                                                <div class="text"> ${row.firstName} ${row.lastName}</div>
                                                </div>`;

                                return rowDepartment;
                            }
                        },
                        { "data": "userName", "name": "UserName" ,"className": "d-none", "visible": false, "searchable": false },
                        { "data": "departmentName", "name": "DepartmentName" },
                        { "data": "phoneNumber", "name": "PhoneNumber" },
                        { "data": "roleList", "name": "RoleList"},
                        { "data": "email", "name": "Email", "className": "d-none", "visible": false, "searchable": false },
                        {
                            "name": "supervisor ", "render": function (data, type, row) {
                                var rowDiv = '';

                                if (row.supervisor == 0) {

                                    rowDiv = `<div class="Availability"><i class="fa-solid fa-circle-exclamation text-warning me-2"></i></div>`;
                                }
                                else {
                                    rowDiv = `<div class="Availability"><i class="fa-solid fa-circle-check text-success me-2" ></i></div>`;
                                }

                                return rowDiv;
                            }
                        },
                        {
                            "name": "bActive ", "render": function (data, type, row) {
                                var rowDiv = '';

                                if (row.bActive == 0) {

                                    rowDiv = `<div class="Availability"><i class="fa-solid fa-circle-exclamation text-warning me-2"></i></div>`;
                                }
                                else {
                                    rowDiv = `<div class="Availability"><i class="fa-solid fa-circle-check text-success me-2" > </i></div>`;
                                }

                                return rowDiv;
                            }
                        },
                        {
                            "name": "Id", "render": function (data, type, row) {

                                // return `<div class="d-flex"><a class="js-itemsrowRole me-2" data-empid="${row.id}" href="javascript:" onclick="roleUser(this)">
                                //         <i class="fa-regular fa-circle-user"></i></a>
                                //         <a class="js-itemsrowedit me-2" data-empid="${row.id}" href="javascript:" onclick="editUser(this)">
                                //         <i class="fa-regular fa-pen-to-square"></i></a>
                                //         <a class="text-danger js-itemsrowdelete" data-empid="${row.id}" href="javascript:" onclick="deleteUser(this)">
                                // <i class="fa-solid fa-trash-can"></i></a> </div>`;
                                let roleIcon = canRole ?
                                    `<a class="js-itemsrowRole me-2" data-empid="${row.id}" href="javascript:" onclick="roleUser(this)">
                                      <i class="fa-regular fa-circle-user"></i></a>` : '';
                                let editIcon = canEdit ?
                                    `<a class="js-itemsrowedit me-2" data-empid="${row.id}" href="javascript:" onclick="editUser(this)">
                                        <i class="fa-regular fa-pen-to-square"></i>
                                     </a>` : '';

                                let deleteIcon = canDelete ?
                                    `<a class="text-danger js-itemsrowdelete" data-empid="${row.id}" href="javascript:" onclick="deleteUser(this)">
                                        <i class="fa-solid fa-trash-can"></i>
                                     </a>` : '';

                                return `<div class="d-flex">
                                            ${roleIcon}
                                            ${editIcon}
                                            ${deleteIcon}
                                         </div>`;
                            }
                        }
                    ],
                    createdRow: function (row, data, dataIndex) {
                        $(row).find('td').each(function (index) {
                            $(this).attr('data-label', $('#dataTablesUsers th').eq(index).text());
                        });
                    }
                });

                //totalitems();
            }

            catch (err) {

                ShowMsgError(err.message);

            }

        }

        function FillRoleGroup(ddlobject) {
            $.ajax({
                url: '@Url.Action("GetRoleGroup", "IdentityUser")',
                type: "GET",
                dataType: "json",
                cache: false,
                success: function (result) {
                    if (result.success) {
                        ddlobject.empty();
                        ddlobject.append($("<option></option>")
                            .attr("value", "0")
                            .text("Select User Group"));
                        result.returnData.forEach(function (item) {
                            ddlobject.append($("<option></option>")
                                .attr("value", item.value)
                                .text(item.text));
                        });
                    } else {
                        ShowMsgError(result.message);
                    }
                },
                error: function (err) {
                    return false;
                }
            });
        }
        function FillDepartment(ddlobject) {
            $.ajax({
                url: '@Url.Action("GetDepartment", "IdentityUser")',
                type: "GET",
                dataType: "json",
                cache: false,
                success: function (result) {
                    if (result.success) {
                        // تنظيف القائمة المنسدلة قبل ملئها
                        ddlobject.empty();
                        ddlobject.append($("<option></option>")
                            .attr("value", "0")
                            .text("Select Department"));

                        // إضافة الأقسام من البيانات المسترجعة
                        result.returnData.forEach(function (item) {
                            ddlobject.append($("<option></option>")
                                .attr("value", item.value)
                                .text(item.text));
                        });
                    } else {
                        // عرض رسالة خطأ في حالة الفشل في استرجاع البيانات
                        ShowMsgError(result.message);
                    }
                },
                error: function (err) {
                    return false;
                }
            });
        }

        function FilterMain() {

            var ddl_Department = $("#ddlDepartmentFilter").val();
            var chk_Superviesor = $("#chkSuperviesor");
            var chk_Active = $("#chkActive");

            var department = '0';
            var Superviesor = 0;
            var isActive = 0;
            
           // alert(ddl_Department);

            if (ddl_Department == null || ddl_Department == "" || ddl_Department == undefined || ddl_Department == "0" || ddl_Department == 0) {
                ShowMsgError('Please select Location');
                return false;
            } else {
                department = ddl_Department;
            }

            if (chk_Superviesor.is(':checked') == true) {
                Superviesor = 1;
            }

            if (chk_Active.is(':checked') == true) {
                isActive = 1;
            }

            drawtable(department, Superviesor, isActive, @canRole.ToString().ToLower(),@canEdit.ToString().ToLower(), @canDelete.ToString().ToLower());

        }

        function saveEditUser() {
            var objData = {};
            var isSupervisor = 0;
            var isActive = 0;

            var hdEmpId = $('#hdEmpId').val();
            var txtFirstName = $('#txtFirstName').val();
            var txtLastName = $("#txtLastName").val();
            //var txtEmail = $("#txtEmail").val();
            var txtMobile = $("#txtMobile").val();

            var chkSuperviesor = $("#chkSuperviesor_ed");
            var chkActive = $("#chkActive_ed");

            var ddlItemDepartment = $("#ddlItemDepartment_ed").val();
            //var ddlRole = $("#ddlRole_ed").val();

            if (!txtFirstName) {// } == null)  || txtitem_en == "" || txtitem_en == undefined) {
                ShowMsgError('Please enter English name');
                return false;
            }
            if (!txtLastName) {// == null || txtitem_ar == "" || txtitem_ar == undefined) {
                ShowMsgError('Please enter Arabic name');
                return false;
            }
            if (ddlItemDepartment === "0") {//(ddlItemDepartment == null || ddlItemDepartment == "0" || ddlItemDepartment == undefined) {
                ShowMsgError('Please select department');
                return false;
            }
            // if (ddlRole === "0") {//(ddlItemDepartment == null || ddlItemDepartment == "0" || ddlItemDepartment == undefined) {
            //     alert('Please select User Group');
            //     return false;
            // }

            if (chkSuperviesor.is(':checked') == true) {
                isSupervisor = 1;
            }
            if (chkActive.is(':checked') == true) {
                isActive = 1;
            }
            
            objData = {
                Id: hdEmpId,
                FirstName: txtFirstName,
                LastName: txtLastName,
                //sEmail: txtEmail,
                PhoneNumber: txtMobile,
                DepartmentID: ddlItemDepartment,
                //UserGroup: ddlRole,
                bActive: isActive,
                supervisor: isSupervisor,
                bPhoto: ''

            }

            var jsonData = JSON.stringify(objData);

            $.ajax({
                url: '@Url.Action("SaveEditUser", "IdentityUser")',
                type: 'POST',
                dataType: 'json',
                data: { "dataObj": jsonData },
                success: function (data) {

                    if (data != null) {
                        if (data.success == true) {
                            $("#EditUser").modal('hide');
                            ShowMsgSuccess(data.returnData);

                            clearModalUser();
                            drawtable("0", 0, 0, @canRole.ToString().ToLower(), @canEdit.ToString().ToLower(), @canDelete.ToString().ToLower());
                        }
                        else {
                            ShowMsgError(data.returnData);
                            $("#EditUser").modal('show');
                        }
                    }
                },
                error: function (error) {
                    ShowMsgError(error);
                }
            });
        }
        function editUser(clickedElement) {

            var btnEdit = $(clickedElement);
            var empid = btnEdit.data("empid");
           // FillDepartment($("#ddlItemDepartment_ed"));
            //FillRoleGroup($("#ddlRole_ed"));
            $.ajax({
                url: '@Url.Action("EditUser", "IdentityUser")',
                type: 'POST',
                data: { empid: empid },
                success: function (data) {

                    if (data != null) {
                        if (data.success == true) {
                            $("#hdEmpId").val(data.returnData.id);
                            $("#txtFirstName").val(data.returnData.firstName);
                            $("#txtLastName").val(data.returnData.lastName);
                            //$("#txtEmail").val(data.returnData.sEmail);
                            $("#txtMobile").val(data.returnData.phoneNumber);

                            if (data.returnData.supervisor == 1) {
                                $("#chkSuperviesor_ed").attr("checked", true);
                            }
                            else {
                                $("#chkSuperviesor_ed").attr("checked", false);
                            }
                            if (data.returnData.bActive == 1) {
                                $("#chkActive_ed").attr("checked", true);
                            }
                            else {
                                $("#chkActive_ed").attr("checked", false);
                            }
                            $("#ddlItemDepartment_ed").val(data.returnData.departmentID);
                            //$("#ddlRole_ed").val(data.returnData.userGroup);

                            $("#EditUser").modal("show");
                        }
                        else {
                            ShowMsgError(data.returnData);
                            $("#EditUser").modal('hide')
                        }

                    }

                },
                error: function (error) {

                    ShowMsgError(error);
                }
            });

        }
        
        function roleUser(clickedElement) {

            var btnRole = $(clickedElement);
            var empid = btnRole.data("empid");

            window.location.href = '@Url.Action("ManageRoles", "IdentityUser")' + '?userId=' + empid;
          
        }

        function deleteUser(clickedElement) {

            var btnEdit = $(clickedElement);
            var empid = btnEdit.data("empid");

            Swal.fire({
                title: 'Are you sure delete User?',
                text: "",
                //icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, delete it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: '@Url.Action("DeleteUser", "IdentityUser")',
                        type: 'POST',
                        data: { empid: empmid },
                        success: function (data) {
                            if (data != null) {
                                if (data.success == true) {
                                    //alert("Deleted");
                                    drawtable("0", 0, 0, @canRole.ToString().ToLower(), @canEdit.ToString().ToLower(), @canDelete.ToString().ToLower());
                                }
                                else {
                                    // alert(data.returnData);

                                }

                            }
                        },
                        error: function (error) {

                            alert(error);
                        }
                    });
                }
            })


        }
        function clearModalUser() {

            // $('#txtitem_en').val();
            // $("#txtitem_ar").val();
            // $("#chkService").attr("checked", false);
            // $("#optinstock").attr("checked", true);
            // $("#optoutstock").attr("checked", false);
            // $("#txtQty").val(0);
            // $("#txtQty_Minima").val(0);
            // $("#ddlItemDepartment").val(0);

            // $("#txtitemId_ed").val();
            // $("#txtitem_en_ed").val();
            // $("#txtitem_ar_ed").val();
            // $("#chkService_ed").attr("checked", false);
            // $("#optinstock_ed").attr("checked", false);
            // $("#optoutstock_ed").attr("checked", false);
            // $("#txtQty_ed").val(0);
            // $("#txtQty_Minima_ed").val(0);
            // $("#ddlItemDepartment_ed").val(0);
        }

    </script>
}