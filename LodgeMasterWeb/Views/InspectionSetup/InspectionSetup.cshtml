@using Newtonsoft.Json;
@inject IHttpContextAccessor HttpContextAccessor
@{
    Layout = "_Layout_main";
}

@{
    var permissions = new List<KeyValuePair<string, string>>();

    // استرجاع الصلاحيات من الجلسة إذا كانت موجودة
    var permissionsJson = HttpContextAccessor.HttpContext.Session.GetString("UserPermissions");

    if (!string.IsNullOrEmpty(permissionsJson))
    {
        permissions = JsonConvert.DeserializeObject<List<KeyValuePair<string, string>>>(permissionsJson);
    }

    // التحقق من وجود صلاحيات معينة
    bool canRole = permissions.Any(c => c.Key == "Permission" && c.Value == "Permissions.Role.View");
    bool canEdit = permissions.Any(c => c.Key == "Permission" && c.Value == "Permissions.StaffManagement.Edit");
    bool canDelete = permissions.Any(c => c.Key == "Permission" && c.Value == "Permissions.StaffManagement.Delete");
}
<div class="container-fluid">
    <div class="row">
        <div class="col-lg-12 pt-3">
            <header class="header-filter">
                <div class="group-filter d-flex">
                    <div class="input-group me-3">
                        <input class="form-control" type="search" placeholder="Search" aria-label="Recipient's username" aria-describedby="button-addon2">
                        <button class="btn btn-outline-master" id="button-addon2" type="button"> <i class="fa-solid fa-magnifying-glass"></i></button>
                    </div>
                    <button class="btn btn-outline-master d-flex align-items-center" type="button" data-bs-toggle="modal" data-bs-target="#exampleModal"> <i class="fa-solid fa-arrow-down-wide-short me-2"></i>Filter</button>
                </div>
                <div class="date">
                    @ViewBag.DisplayCurrntDate
                </div>
@*                 <a class="btn btn-master d-flex align-items-center rounded-pill btn-Create-Order" asp-controller="CreateOrders" asp-action="Index">
                    <i class="fa-solid fa-plus me-2"></i>Create Order
                </a> *@
                <div class="dropdown">
                    <button class="btn btn-primary dropdown-toggle rounded-pill btn-master" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                        <i class="fa-solid fa-plus me-2"></i> Create
                    </button>
                    <ul class="dropdown-menu bg-primary text-white">
                        @if (permissions != null && permissions.Any(c => c.Key == "Permission" && c.Value == "Permissions.CreateOrders.Create"))
                        {
                            <li><a class="dropdown-item text-white" asp-controller="CreateOrders" asp-action="Index"><i class="fa-solid fa-plus me-2"></i> Order</a></li>
                        }
                        @if (permissions != null && permissions.Any(c => c.Key == "Permission" && c.Value == "Permissions.InspectionOrder.Create"))
                        {
                            <li><a class="dropdown-item text-white" asp-controller="InspectionOrder" asp-action="InspectionOrder"><i class="fa-solid fa-plus me-2"></i> Room inspiction</a></li>
                        }
                    </ul>
                </div>
            </header>
        </div>
    </div>
</div>
<div id="pageMasterLoad">
    <div class="HomeDashboard">
        <div class="container-fluid">
            <div class="row">
                <div class="col-lg-12 mb-5">
                    <div class="overview-Orders mb-5">
                        <div class="d-flex justify-content-between mb-1">
                            <h4>Inspection</h4>
                            <div>
                                <button class="rounded-pill px-4 btn btn-outline-master" data-bs-toggle="modal" data-bs-target="#AddInspection" onclick="getDepartment()"> <i class="fa-solid fa-plus me-2"></i>Add Inspection</button>
                            </div>
                        </div>
                        <div class="mt-4">
                            <table class="table table-responsive data-Tables" id="dataTablesInspection">
                                <thead>
                                    <tr>
                                        <th scope="col"></th>
                                        <th scope="col">Inspection name</th>
                                        <th scope="col">Inspection description</th>
                                        <th scope="col">Inspection Create Order</th>

                                        <th scope="col">Active</th>
                                        <th scope="col">&nbsp;</th>
                                    </tr>
                                </thead>
                                <tbody>
                                </tbody>
                            </table>
                            <div class="d-flex justify-content-end">
                                <a class="btn btn-secondary btn-apply rounded-pill me-2" type="button" asp-controller="InspectionSetup" asp-action="Index"> Back </a>
                                <a class="btn btn-primary btn-apply rounded-pill " type="button" asp-controller="InspectionSetup" asp-action="InspectionDepartment"> Next </a>

                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="modal fade model-filter-home" id="AddInspection" tabindex="-1" aria-labelledby="AddInspectionLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="exampleModalLabel">Add Inspection</h1>
                <button class="btn-close" type="button" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="AddInspectionbody">
                <div class="container-fluid">
                    <div class="row">
                        <div class="col-lg-12 mb-2">
                            <div class="form-group">
                                <label>Inspection Name</label>
                                <input class="form-control" type="text" id="txtInspection_en">
                            </div>
                        </div>
                        <div class="col-lg-12 mb-2">
                            <div class="form-group">
                                <label>Inspection Description</label>
                                <input class="form-control" type="text" id="txtInspection_Desc">
                            </div>
                        </div>
                        <div class="col-lg-12 mb-2">
                            <div class="form-group">
                                <label class="mb-2" for="ddlDepartment">Departments</label>
                                <select class="form-select rounded-pill" id="ddlDepartment">
                                </select>
                            </div>
                        </div>
                        <div class="col-lg-12 mb-2">
                            <div class="form-check form-switch d-flex p-0">
                                <label class="form-check-label" for="flexSwitchCheckDefault">Create to Order</label>
                                <input class="mx-2 form-check-input" id="chk_inspToCreateOrder" type="checkbox" role="switch">
                            </div>
                        </div>
                        <div class="col-lg-12 mb-2">
                            <div class="form-check form-switch d-flex p-0">
                                <label class="form-check-label" for="flexSwitchCheckDefault">Active</label>
                                <input class="mx-2 form-check-input" id="chkActive" type="checkbox" role="switch">
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer justify-content-start">
                <button class="btn btn-primary btn-apply rounded-pill col-12" type="button" onclick="createInspinfo()">ADD </button>
            </div>
        </div>
    </div>
</div>
<div class="modal fade model-filter-home" id="EditInspection" tabindex="-1" aria-labelledby="EditInspectionLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="exampleModalLabel_ed">Edit Inspection</h1>
                <button class="btn-close" type="button" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="EditInspectionbody">
                <div class="container-fluid">
                    <div class="row">
                        <input type="hidden" id="hdInspectionid" />
                        <div class="col-lg-12 mb-2">
                            <div class="form-group">
                                <label>Inspection Name</label>
                                <input class="form-control" type="text" id="txtInspection_en_ed">
                            </div>
                        </div>
                        <div class="col-lg-12 mb-2">
                            <div class="form-group">
                                <label>Inspection Description</label>
                                <input class="form-control" type="text" id="txtInspection_Desc_ed">
                            </div>
                        </div>
                        <div class="col-lg-12 mb-2">
                            <div class="form-group">
                                <label class="mb-2" for="ddlDepartment">Departments</label>
                                <select class="form-select rounded-pill" id="ddlDepartment_ed">
                                </select>
                            </div>
                        </div>
                        <div class="col-lg-12 mb-2">
                            <div class="form-check form-switch d-flex p-0">
                                <label class="form-check-label" for="flexSwitchCheckDefault">Create to Order</label>
                                <input class="mx-2 form-check-input" id="chk_inspToCreateOrder_ed" type="checkbox" role="switch">
                            </div>
                        </div>
                        <div class="col-lg-12 mb-2">
                            <div class="form-check form-switch d-flex p-0">
                                <label class="form-check-label" for="flexSwitchCheckDefault">Active</label>
                                <input class="mx-2 form-check-input" id="chkActive_ed" type="checkbox" role="switch">
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer justify-content-start">
                <button class="btn btn-primary btn-apply rounded-pill col-12" type="button" onclick="saveEditInspinfo()">Save </button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {

            drawtable();

           
        });
        function getDepartment(){
            FillDepartment($("#ddlDepartment"));
        }
        function FillDepartment(ddlobject) {
            $.ajax({
                url: '@Url.Action("GetDepartment", "Items")',
                type: "GET",
                dataType: "json",
                cache: false,
                success: function (result) {
                    if (result.success) {
                        ddlobject.empty();
                        result.returnData.forEach(function (item) {
                            ddlobject.append($("<option></option>")
                                .attr("value", item.value)
                                .text(item.text));
                        });
                    } else {
                        alert(result.message);
                    }
                },
                error: function (err) {
                    return false;
                }
            });
        }
        function drawtable() {
            try {
                // Destroy the existing DataTable, if it exists
                if ($.fn.DataTable.isDataTable("#dataTablesInspection")) {
                    $("#dataTablesInspection").DataTable().destroy();
                }

                $("#dataTablesInspection").DataTable({
                    serverSide: true,
                    stateSave: false,
                    processing: true,
                    info: false,
                    searching: false,
                    lengthChange: false,
                    language: {
                        processing: '<i class="fa fa-spinner fa-spin fa-3x fa-fw"></i><span class="sr-only">Loading...</span> '
                    },
                    ajax: {
                        url: '/InspectionSetup/GetInspection',
                        type: 'POST',
                        cache: false,
                        //data: { bActive: isActive },
                    },
                    order: [[1, 'asc']],
                    // columnDefs: [
                    //     // {
                    //     // targets: [0, 1],
                    //     // visible: false,
                    //     // searchable: false
                    //     // },
                    //     {
                    //         targets: 9, // This targets the last column
                    //         orderable: false // Disable sorting for the last column
                    //     }
                    // ],
                    columns: [

                        { "data": "inspInfoId", "name": "InspInfoId", "className": "d-none", "visible": false, "searchable": false },

                        { "data": "inspName", "name": "InspName" },
                        { "data": "inspDesc", "name": "InspDesc" },
                        {
                            "name": "inspToCreateOrder ", "render": function (data, type, row) {
                                var rowDiv = '';

                                if (row.inspToCreateOrder == 0) {

                                    rowDiv = `<div class="Availability"> <i class="fa-solid fa-circle-exclamation text-warning me-2"></i></div>`;
                                }
                                else {
                                    rowDiv = `<div class="Availability"><i class="fa-solid fa-circle-check text-success me-2"> </i></div >`;
                                }

                                return rowDiv;
                            }
                        },
                        {
                            "name": "bActive ", "render": function (data, type, row) {
                                var rowDiv = '';

                                if (row.bActive == 0) {

                                    rowDiv = `<div class="Availability"> <i class="fa-solid fa-circle-exclamation text-warning me-2"></i></div>`;
                                }
                                else {
                                    rowDiv = `<div class="Availability"><i class="fa-solid fa-circle-check text-success me-2"> </i></div >`;
                                }

                                return rowDiv;
                            }
                        },
                        {
                            "name": "InspInfoId", "render": function (data, type, row) {

                                return `<a class="js-itemsrowedit" data-inspinfoid="${row.inspInfoId}" href="javascript:" onclick="editInspinfo(this)"> <i class="fa-regular fa-pen-to-square"></i></a>
                                                        <a class="text-danger js-itemsrowdelete" data-inspinfoid="${row.inspInfoId}" href="javascript:" onclick="deleteInspinfo(this)"> <i class="fa-solid fa-trash-can"></i></a>`;

                            }
                        }
                    ],
                    createdRow: function (row, data, dataIndex) {
                        $(row).find('td').each(function (index) {
                            $(this).attr('data-label', $('#dataTablesInspection th').eq(index).text());
                        });
                    }
                });

            }
            //<a class="js-itemsrowdetail" data-inspinfoid="${row.inspInfoId}" href="javascript:" onclick="detailInspinfo(this)"> <i class="fa-solid fa-eye"></i></a>
            catch (err) {
                console.error("An error occurred:", err.message);
                alert(err.message);


            }

        }


        function createInspinfo() {
            var objData = {};
            var isActive = 0;
            var isinspToCreateOrder = 0;

            var txtInspection_en = $('#txtInspection_en').val();
            var txtInspection_Desc = $("#txtInspection_Desc").val();
            var chk_inspToCreateOrder = $("#chk_inspToCreateOrder");
            var chkActive = $("#chkActive");

            var ddlDepartment = $("#ddlDepartment").val();

            if (!txtInspection_en) {// } == null)  || txtitem_en == "" || txtitem_en == undefined) {
                alert('Please enter Inspection name');
                return false;
            }
            if (!ddlDepartment) {// } == null)  || txtitem_en == "" || txtitem_en == undefined) {
                alert('Please select Department');
                return false;
            }
            if (chk_inspToCreateOrder.is(':checked') == true) {
                isinspToCreateOrder = 1;
            }
            if (chkActive.is(':checked') == true) {
                isActive = 1;
            }

            objData = {
                bActive: isActive,
                InspName: txtInspection_en,
                InspDesc: txtInspection_Desc,
                InspToCreateOrder: isinspToCreateOrder,
                DepartmentID: ddlDepartment_ed

            }

            var jsonData = JSON.stringify(objData);

            $.ajax({
                url: '@Url.Action("CreateInspinfo", "InspectionSetup")',
                type: 'POST',
                dataType: 'json',
                data: { "dataObj": jsonData },
                success: function (data) {

                    if (data != null) {
                        if (data.success == true) {
                            //alert(data.returnData);
                            ShowMsgSuccess(data.returnData);
                            $("#AddInspection").modal('hide');
                            window.location.href = "/InspectionSetup/InspectionDepartment";
                            //clearModalInspinfo();
                            //drawtable();
                        }
                        else {
                            //alert(data.returnData);
                            ShowMsgError(data.returnData);
                            $("#AddInspection").modal('show');
                        }

                    }

                },
                error: function (error) {

                    alert(error);
                }
            });


        }
        function saveEditInspinfo() {
            var objData = {};
            var isActive = 0;
            var isinspToCreateOrder = 0;

            var hdInspectionid = $('#hdInspectionid').val();
            var txtInspection_en_ed = $('#txtInspection_en_ed').val();
            var txtInspection_Desc_ed = $("#txtInspection_Desc_ed").val();
            var chk_inspToCreateOrder_ed = $("#chk_inspToCreateOrder_ed");
            var chkActive_ed = $("#chkActive_ed");

            var ddlDepartment_ed = $("#ddlDepartment_ed").val();

            if (!hdInspectionid) {// } == null)  || txtitem_en == "" || txtitem_en == undefined) {
                alert('Please select Inspection');
                return false;
            }
            if (!txtInspection_en_ed) {// } == null)  || txtitem_en == "" || txtitem_en == undefined) {
                alert('Please enter Inspection name');
                return false;
            }
            if (!ddlDepartment_ed) {// } == null)  || txtitem_en == "" || txtitem_en == undefined) {
                alert('Please select Department');
                return false;
            }
            if (chk_inspToCreateOrder_ed.is(':checked') == true) {
                isinspToCreateOrder = 1;
            }
            if (chkActive_ed.is(':checked') == true) {
                isActive = 1;
            }

            objData = {
                InspInfoId: hdInspectionid,
                bActive: isActive,
                InspName: txtInspection_en_ed,
                InspDesc: txtInspection_Desc_ed,
                InspToCreateOrder: isinspToCreateOrder,
                DepartmentID: ddlDepartment_ed
            }


            var jsonData = JSON.stringify(objData);

            $.ajax({
                url: '@Url.Action("SaveEditInspinfo", "InspectionSetup")',
                type: 'POST',
                dataType: 'json',
                data: { "dataObj": jsonData },
                success: function (data) {

                    if (data != null) {
                        if (data.success == true) {
                            $("#EditInspection").modal('hide')
                            //alert(data.returnData);

                            clearModalInspinfo();
                            drawtable()
                        }
                        else {
                            //alert(data.returnData);
                            $("#EditInspection").modal('show')
                        }

                    }

                },
                error: function (error) {

                    alert(error);
                }
            });
        }
        function editInspinfo(clickedElement) {

            var btnEdit = $(clickedElement);
            var inspinfoid = btnEdit.data("inspinfoid");
            
            FillDepartment($("#ddlDepartment_ed"));

            $.ajax({
                url: '@Url.Action("EditInspinfo", "InspectionSetup")',
                type: 'POST',
                data: { Inspinfoid: inspinfoid },
                success: function (data) {

                    if (data != null) {

                        if (data.success == true) {

                            clearModalInspinfo();

                            $("#hdInspectionid").val(data.returnData.inspInfoId);
                            $("#txtInspection_en_ed").val(data.returnData.inspName);
                            $("#txtInspection_Desc_ed").val(data.returnData.inspDesc);

                            if (data.returnData.inspToCreateOrder == 0) {
                                $("#chk_inspToCreateOrder_ed").attr("checked", false);
                            }
                            else {
                                $("#chk_inspToCreateOrder_ed").attr("checked", true);
                            }

                            if (data.returnData.bActive == 0) {
                                $("#chkActive_ed").attr("checked", false);
                            }
                            else {
                                $("#chkActive_ed").attr("checked", true);
                            }

                            if (data.returnData.DepartmentID != null) {
                                $("#ddlDepartmnet_ed").val(data.returnData.DepartmentID);
                            }
                            $("#EditInspection").modal("show");
                        }
                        else {
                            //alert(data.returnData);
                            $("#EditInspection").modal('hide')
                        }

                    }

                },
                error: function (error) {

                    alert(error);
                }
            });

        }
        function deleteInspinfo(clickedElement) {

            var btnEdit = $(clickedElement);
            var inspinfoid = btnEdit.data("inspinfoid");

            Swal.fire({
                title: 'Are you sure delete inspection Info ?',
                text: "",
                //icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, delete it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: '@Url.Action("DeleteInspinfo", "InspectionSetup")',
                        type: 'POST',
                        data: { Inspinfoid: inspinfoid },
                        success: function (data) {
                            if (data != null) {
                                if (data.success == true) {
                                    drawtable();
                                }
                                else {
                                    // alert(data.returnData);

                                }
                            }
                        },
                        error: function (error) {

                            alert(error);
                        }
                    });
                }
            })


        }
        function clearModalInspinfo() {

            $('#txtInspection_en').val();
            $("#txtInspection_Desc").val();
            $("#chk_inspToCreateOrder").attr("checked", false);
            $("#chkActive").attr("checked", true);

            $("#chkActive_ed").attr("checked", false);
            $("#txtInspection_en_ed").val();
            $("txtInspection_Desc_ed").val();
            $("#chk_inspToCreateOrder_ed").attr("checked", false);

            $("#hdInspectionid").val();

        }

        function detailInspinfo(clickedElement) {

            var btnEdit = $(clickedElement);
            var depid = btnEdit.data("roleid");
            alert("Coming soon");
            return false;
            $.ajax({
                url: '@Url.Action("DetaileRole", "Role")',
                type: 'POST',
                data: { depid: depid },
                success: function (data) {

                    if (data != null) {

                        if (data.success == true) {
                            alert("Good");
                            // $("#EditRole").modal("show");
                        }
                        else {
                            //alert(data.returnData);
                            //$("#EditRole").modal('hide')
                        }

                    }

                },
                error: function (error) {

                    alert(error);
                }
            });

        }

    </script>
}