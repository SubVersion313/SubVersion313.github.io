@using Newtonsoft.Json;
@inject IHttpContextAccessor HttpContextAccessor
@{
    Layout = "_Layout_main";
}

@{
    var permissions = new List<KeyValuePair<string, string>>();

    // استرجاع الصلاحيات من الجلسة إذا كانت موجودة
    var permissionsJson = HttpContextAccessor.HttpContext.Session.GetString("UserPermissions");

    if (!string.IsNullOrEmpty(permissionsJson))
    {
        permissions = JsonConvert.DeserializeObject<List<KeyValuePair<string, string>>>(permissionsJson);
    }

    // التحقق من وجود صلاحيات معينة
    bool canRole = permissions.Any(c => c.Key == "Permission" && c.Value == "Permissions.Role.View");
    bool canEdit = permissions.Any(c => c.Key == "Permission" && c.Value == "Permissions.StaffManagement.Edit");
    bool canDelete = permissions.Any(c => c.Key == "Permission" && c.Value == "Permissions.StaffManagement.Delete");
}
<div class="container-fluid">
    <div class="row">
        <div class="col-lg-12 pt-3">
            <header class="header-filter">
                <div class="group-filter d-flex">
                    <div class="input-group me-3">
                        <input class="form-control" type="search" placeholder="Search" aria-label="Recipient's username" aria-describedby="button-addon2">
                        <button class="btn btn-outline-master" id="button-addon2" type="button"> <i class="fa-solid fa-magnifying-glass"></i></button>
                    </div>
                    <button class="btn btn-outline-master d-flex align-items-center" type="button" data-bs-toggle="modal" data-bs-target="#exampleModal"> <i class="fa-solid fa-arrow-down-wide-short me-2"></i>Filter</button>
                </div>
                <div class="date">
                    @ViewBag.DisplayCurrntDate
                </div>
@*                 <a class="btn btn-master d-flex align-items-center rounded-pill btn-Create-Order" asp-controller="CreateOrders" asp-action="Index">
                    <i class="fa-solid fa-plus me-2"></i>Create Order
                </a> *@
                <div class="dropdown">
                    <button class="btn btn-primary dropdown-toggle rounded-pill btn-master" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                        <i class="fa-solid fa-plus me-2"></i> Create
                    </button>
                    <ul class="dropdown-menu bg-primary text-white">
                        @if (permissions != null && permissions.Any(c => c.Key == "Permission" && c.Value == "Permissions.CreateOrders.Create"))
                        {
                            <li><a class="dropdown-item text-white" asp-controller="CreateOrders" asp-action="Index"><i class="fa-solid fa-plus me-2"></i> Order</a></li>
                        }
                        @if (permissions != null && permissions.Any(c => c.Key == "Permission" && c.Value == "Permissions.InspectionOrder.Create"))
                        {
                            <li><a class="dropdown-item text-white" asp-controller="InspectionOrder" asp-action="InspectionOrder"><i class="fa-solid fa-plus me-2"></i> Room inspiction</a></li>
                        }
                    </ul>
                </div>
            </header>
        </div>
    </div>
</div>
<div id="pageMasterLoad">
    <div class="HomeDashboard">
        <div class="container-fluid">
            <div class="row">
                <div class="col-lg-12 mb-5">
                    <div class="overview-Orders mb-5">

                        <div class="d-flex justify-content-between mb-1">
                            <h4>Inspection Question</h4>
                            <div>
                                <button class="rounded-pill px-4 btn btn-outline-master" data-bs-toggle="modal" data-bs-target="#AddInspQuestion"> <i class="fa-solid fa-plus me-2"></i>Add Inspection Question</button>
                            </div>


                        </div>
                        <table class="table table-responsive data-Tables" id="dataTablesInspQuestion">
                            <thead>
                                <tr>
                                    <th scope="col"></th>
                                    <th scope="col">Question</th>
                                    <th scope="col">Active</th>
                                    <th scope="col">&nbsp;</th>
                                </tr>
                            </thead>
                            <tbody>
                            </tbody>
                        </table>
                        <div class="d-flex justify-content-end">
                            <a class="btn btn-secondary btn-apply rounded-pill me-2" type="button" asp-controller="InspectionSetup" asp-action="InspectionDepartment"> Back </a>
                            <a class="btn btn-primary btn-apply rounded-pill " type="button" asp-controller="InspectionSetup" asp-action="InspectionLinkQuestion"> Next </a>

                        </div>
                    </div>
                </div>
            </div>
           
        </div>
    </div>
</div>
<div class="modal fade model-filter-home" id="AddInspQuestion" tabindex="-1" aria-labelledby="AddInspQuestionLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="exampleModalLabel">Add Inspection Question</h1>
                <button class="btn-close" type="button" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="AddInspQuestionbody">
                <div class="container-fluid">
                    <div class="row">
                        <div class="col-lg-12 mb-2">
                            <div class="form-group">
                                <label>Inspection Question</label>
                                <input class="form-control" type="text" id="txtInspQuestion_en">
                            </div>
                        </div>

                        <div class="col-lg-12 mb-2">
                            <div class="form-check form-switch d-flex p-0">
                                <label class="form-check-label" for="flexSwitchCheckDefault">Active</label>
                                <input class="mx-2 form-check-input" id="chkActive" type="checkbox" role="switch">
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer justify-content-start">
                <button class="btn btn-primary btn-apply rounded-pill col-12" type="button" onclick="createInspQues()">ADD </button>
            </div>
        </div>
    </div>
</div>
<div class="modal fade model-filter-home" id="EditInspQuestion" tabindex="-1" aria-labelledby="EditInspQuestionLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="exampleModalLabel_ed">Edit Inspection Question</h1>
                <button class="btn-close" type="button" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="EditInspQuestionbody">
                <div class="container-fluid">
                    <div class="row">
                        <input type="hidden" id="hdInspQuesid" />
                        <div class="col-lg-12 mb-2">
                            <div class="form-group">
                                <label>Inspection Question</label>
                                <input class="form-control" type="text" id="txtInspQuestion_en_ed">
                            </div>
                        </div>
                        <div class="col-lg-12 mb-2">
                            <div class="form-check form-switch d-flex p-0">
                                <label class="form-check-label" for="flexSwitchCheckDefault">Active</label>
                                <input class="mx-2 form-check-input" id="chkActive_ed" type="checkbox" role="switch">
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer justify-content-start">
                <button class="btn btn-primary btn-apply rounded-pill col-12" type="button" onclick="saveEditInspQues()">Save </button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            //var department = '0';

            //var ddlInspDepartment = $("#ddlInspDepartment");
            //FillInspDepartment(ddlInspDepartment);

            drawtable();

        });

        function drawtable() {
            try {
                // Destroy the existing DataTable, if it exists
                if ($.fn.DataTable.isDataTable("#dataTablesInspQuestion")) {
                    $("#dataTablesInspQuestion").DataTable().destroy();
                }

                $("#dataTablesInspQuestion").DataTable({
                    serverSide: true,
                    stateSave: false,
                    processing: true,
                    info: false,
                    searching: false,
                    lengthChange: false,
                    language: {
                        processing: '<i class="fa fa-spinner fa-spin fa-3x fa-fw"></i><span class="sr-only">Loading...</span> '
                    },
                    ajax: {
                        url: '/InspectionSetup/GetInspQuestion',
                        type: 'POST',
                        cache: false,
                        //data: { Department: department },
                    },
                    order: [[1, 'asc']],
                    // columnDefs: [
                    //     // {
                    //     // targets: [0, 1],
                    //     // visible: false,
                    //     // searchable: false
                    //     // },
                    //     {
                    //         targets: 9, // This targets the last column
                    //         orderable: false // Disable sorting for the last column
                    //     }
                    // ],
                    columns: [

                        { "data": "questionID", "name": "QuestionID", "className": "d-none", "visible": false, "searchable": false },

                        { "data": "questionDisplay", "name": "QuestionDisplay" },

                        {
                            "name": "bActive ", "render": function (data, type, row) {
                                var rowDiv = '';

                                if (row.bActive == 0) {

                                    rowDiv = `<div class="Availability"> <i class="fa-solid fa-circle-exclamation text-warning me-2"></i></div>`;
                                }
                                else {
                                    rowDiv = `<div class="Availability"><i class="fa-solid fa-circle-check text-success me-2"> </i></div >`;
                                }

                                return rowDiv;
                            }
                        },
                        {
                            "name": "questionID", "render": function (data, type, row) {

                                return `<a class="js-itemsrowedit" data-questionId="${row.questionID}" href="javascript:" onclick="editInspques(this)"> <i class="fa-regular fa-pen-to-square"></i></a>
                                        <a class="text-danger js-itemsrowdelete" data-questionId="${row.questionID}" href="javascript:" onclick="deleteInspQues(this)"> <i class="fa-solid fa-trash-can"></i></a>`;

                            }
                        }
                    ],
                    createdRow: function (row, data, dataIndex) {
                        $(row).find('td').each(function (index) {
                            $(this).attr('data-label', $('#dataTablesInspQuestion th').eq(index).text());
                        });
                    }

                });

            }

            catch (err) {
                console.error("An error occurred:", err.message);
                
                ShowMsgError(err.message);
            }

        }

        function createInspQues() {
            var objData = {};
            var isActive = 0;


            var txtInspQuestion_en = $('#txtInspQuestion_en').val();
            var chkActive = $("#chkActive");

            if (!txtInspQuestion_en) {// } == null)  || txtitem_en == "" || txtitem_en == undefined) {
               
                ShowMsgError('Please enter Question');
                return false;
            }

            if (chkActive.is(':checked') == true) {
                isActive = 1;
            }

            objData = {
                bActive: isActive,
                QuestionDisplay: txtInspQuestion_en

            }

            var jsonData = JSON.stringify(objData);

            $.ajax({
                url: '@Url.Action("CreateInspQuestion", "InspectionSetup")',
                type: 'POST',
                dataType: 'json',
                data: { "dataObj": jsonData },
                success: function (data) {

                    if (data != null) {
                        if (data.success == true) {

                            $("#AddInspQuestion").modal('hide');
                            clearModalInspQues();
                            drawtable();
                        }
                        else {

                            ShowMsgError(data.returnData);
                            $("#AddInspQuestion").modal('show');
                        }

                    }

                },
                error: function (error) {

                    
                    ShowMsgError(error);
                    $("#AddInspQuestion").modal('show');
                }
            });


        }
        function saveEditInspQues() {
            var objData = {};
            var isActive = 0;

            var hdInspQuesid = $('#hdInspQuesid').val();
            var txtInspQuestion_en_ed = $('#txtInspQuestion_en_ed').val();
            var chkActive_ed = $("#chkActive_ed");


            if (!hdInspQuesid) {// } == null)  || txtitem_en == "" || txtitem_en == undefined) {
                
                ShowMsgError('Please select Question');
                return false;
            }

            if (!txtInspQuestion_en_ed) {// } == null)  || txtitem_en == "" || txtitem_en == undefined) {
                
                ShowMsgError('Please enter Question');
                return false;
            }

            if (chkActive_ed.is(':checked') == true) {
                isActive = 1;
            }

            objData = {
                QuestionID: hdInspQuesid,
                bActive: isActive,
                QuestionDisplay: txtInspQuestion_en_ed
            }
            var jsonData = JSON.stringify(objData);

            $.ajax({
                url: '@Url.Action("SaveEditInspQuestion", "InspectionSetup")',
                type: 'POST',
                dataType: 'json',
                data: { "dataObj": jsonData },
                success: function (data) {

                    if (data != null) {
                        if (data.success == true) {
                            $("#EditInspQuestion").modal('hide');
                            clearModalInspQues();
                            drawtable();
                        }
                        else {

                            $("#EditInspQuestion").modal('show');
                        }

                    }

                },
                error: function (error) {


                    ShowMsgError(error);
                    $("#EditInspQuestion").modal('show');
                }
            });
        }
        function editInspques(clickedElement) {

            var btnEdit = $(clickedElement);
            var questionId = btnEdit.data("questionid");

            $.ajax({
                url: '@Url.Action("EditInspQuestion", "InspectionSetup")',
                type: 'POST',
                data: { InspQuestionId: questionId },
                success: function (data) {

                    if (data != null) {

                        if (data.success == true) {

                            clearModalInspQues();

                            $("#hdInspQuesid").val(data.returnData.questionID);
                            $("#txtInspQuestion_en_ed").val(data.returnData.questionDisplay);

                            if (data.returnData.bActive == 0) {
                                $("#chkActive_ed").attr("checked", false);
                            }
                            else {
                                $("#chkActive_ed").attr("checked", true);
                            }

                            $("#EditInspQuestion").modal("show");
                        }
                        else {
                            
                            ShowMsgError(data.returnData);
                            $("#EditInspQuestion").modal('hide');
                        }

                    }

                },
                error: function (error) {

                    
                    ShowMsgError(error);
                    $("#EditInspQuestion").modal('hide');
                }
            });

        }
        function deleteInspQues(clickedElement) {

            var btnEdit = $(clickedElement);
            var questionID = btnEdit.data("questionid");

           
            Swal.fire({
                title: 'Are you sure delete inspection Question ?',
                text: "",
                //icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, delete it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: '@Url.Action("DeleteInspQuestion", "InspectionSetup")',
                        type: 'POST',
                        data: { InspQuestionId: questionID },
                        success: function (data) {
                            if (data != null) {
                                if (data.success == true) {
                                    drawtable();
                                }
                                else {

                                }
                            }
                        },
                        error: function (error) {

                            
                            ShowMsgError(error);
                        }
                    });
                }
            })


        }
        function clearModalInspQues() {

            $('#txtInspQuestion_en').val();
            $("#chkActive").attr("checked", true);

            $("#chkActive_ed").attr("checked", false);
            $("#txtInspQuestion_en_ed").val();
            $("#hdInspQuesid").val();

        }


    </script>
}