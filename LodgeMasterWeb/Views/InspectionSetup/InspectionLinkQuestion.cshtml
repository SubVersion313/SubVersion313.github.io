@using Newtonsoft.Json;
@inject IHttpContextAccessor HttpContextAccessor
@{
    Layout = "_Layout_main";
}

@{
    var permissions = new List<KeyValuePair<string, string>>();

    // استرجاع الصلاحيات من الجلسة إذا كانت موجودة
    var permissionsJson = HttpContextAccessor.HttpContext.Session.GetString("UserPermissions");

    if (!string.IsNullOrEmpty(permissionsJson))
    {
        permissions = JsonConvert.DeserializeObject<List<KeyValuePair<string, string>>>(permissionsJson);
    }

    // التحقق من وجود صلاحيات معينة
    bool canRole = permissions.Any(c => c.Key == "Permission" && c.Value == "Permissions.Role.View");
    bool canEdit = permissions.Any(c => c.Key == "Permission" && c.Value == "Permissions.StaffManagement.Edit");
    bool canDelete = permissions.Any(c => c.Key == "Permission" && c.Value == "Permissions.StaffManagement.Delete");
}
<div class="container-fluid">
    <div class="row">
        <div class="col-lg-12 pt-3">
            <header class="header-filter">
                <div class="group-filter d-flex">
                    <div class="input-group me-3">
                        <input class="form-control" type="search" placeholder="Search" aria-label="Recipient's username" aria-describedby="button-addon2">
                        <button class="btn btn-outline-master" id="button-addon2" type="button"> <i class="fa-solid fa-magnifying-glass"></i></button>
                    </div>
                    <button class="btn btn-outline-master d-flex align-items-center" type="button" data-bs-toggle="modal" data-bs-target="#exampleModal"> <i class="fa-solid fa-arrow-down-wide-short me-2"></i>Filter</button>
                </div>
                <div class="date">
                    @ViewBag.DisplayCurrntDate
                </div>
@*                 <a class="btn btn-master d-flex align-items-center rounded-pill btn-Create-Order" asp-controller="CreateOrders" asp-action="Index">
                    <i class="fa-solid fa-plus me-2"></i>Create Order
                </a> *@
                <div class="dropdown">
                    <button class="btn btn-primary dropdown-toggle rounded-pill btn-master" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                        <i class="fa-solid fa-plus me-2"></i> Create
                    </button>
                    <ul class="dropdown-menu bg-primary text-white">
                        @if (permissions != null && permissions.Any(c => c.Key == "Permission" && c.Value == "Permissions.CreateOrders.Create"))
                        {
                            <li><a class="dropdown-item text-white" asp-controller="CreateOrders" asp-action="Index"><i class="fa-solid fa-plus me-2"></i> Order</a></li>
                        }
                        @if (permissions != null && permissions.Any(c => c.Key == "Permission" && c.Value == "Permissions.InspectionOrder.Create"))
                        {
                            <li><a class="dropdown-item text-white" asp-controller="InspectionOrder" asp-action="InspectionOrder"><i class="fa-solid fa-plus me-2"></i> Room inspiction</a></li>
                        }
                    </ul>
                </div>
            </header>
        </div>
    </div>
</div>
<div id="pageMasterLoad">
    <div class="Create-Order">
        <div class="container-fluid">
            <div class="row">
                <div class="col-lg-12">
                    <div class="Create-Order">
                        <div class="container-fluid">
                            <div class="row">
                                <div class="col-lg-12">
                                    <div class="button-room card-master setup-Room-page">
                                        <div class="container-fluid">
                                            <div class="row">
                                                <div class="d-flex justify-content-between mb-1">
                                                    <div>
                                                    </div>
                                                </div>
                                                <div class="col-lg-12 col-md-12 col-sm-12">
                                                    <div class="room-information mb-5 row">
                                                        <div class="col-lg-4">

                                                            <div class="form-group mb-4 ">
                                                                <label class="mb-2">Inspection Name</label>
                                                                <div class="input-group mb-3">
                                                                    <select class="form-select" id="ddlInspectionName" aria-label="Default select example" onchange="inspectionNameChange()">
                                                                    </select>
                                                                    <button class="input-group-text btn-outline-master" id="basic-addon1" data-bs-toggle="modal" data-bs-target="#AddInspection"> <i class="fa-solid fa-plus"></i></button>
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <div class="col-lg-4">
                                                            <div class="form-group mb-4 ">
                                                                <label class="mb-2">Inspection Type</label>
                                                                <div class="input-group mb-3">
                                                                    <select class="form-select" id="ddlInspectionType" aria-label="Default select example" onchange="inspectionTypeChange()" >
                                                                    </select>
                                                                    <button class="input-group-text btn-outline-master" id="basic-addon2" data-bs-toggle="modal" data-bs-target="#AddInspDepartment"> <i class="fa-solid fa-plus"></i></button>
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <div class="col-lg-4">
                                                            <div class="form-group mb-4">
                                                                <label class="mb-2" for="">Questions</label>
                                                                <div class="input-group mb-3">
                                                                    <select class="form-select" id="ddlInspectionQuestion" aria-label="Default select example">
                                                                    </select><span class="input-group-text btn-outline-master" id="basic-addon3" data-bs-toggle="modal" data-bs-target="#AddInspQuestion"> <i class="fa-solid fa-plus"></i></span>
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <div class="col-lg-12 d-flex justify-content-end">
                                                            <a class="btn btn-master rounded-pill text-center px-5 me-2" onclick="AddLinkQuestion()" href="#"> Add </a>
                                                            @*  <a class="btn btn-master rounded-pill text-center px-5 " onclick="PublishLinkQuestion()" href="#"> Publish</a> *@
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="row mt-4">
                                                <table class="table table-responsive data-Tables" id="dataTablesInspQues">
                                                    <thead>
                                                        <tr>
                                                            <th scope="col" style="display:none;"></th>
                                                            <th scope="col" style="display:none;"></th>
                                                            <th scope="col">Question</th>
                                                            <th scope="col">Inspection Type</th>
                                                            <th scope="col">Inspection Name</th>
                                                            <th scope="col">&nbsp;</th>
                                                        </tr>
                                                    </thead>
                                                    <tbody>
                                                    </tbody>
                                                </table>
                                                <div class="d-flex justify-content-end">
                                                    <a class="btn btn-secondary btn-apply rounded-pill me-2" type="button" asp-controller="InspectionSetup" asp-action="InspectionQuestion"> Back </a>
                                                    @* <a class="btn btn-primary btn-apply rounded-pill " type="button" asp-controller="InspectionSetup" asp-action="InspectionDepartment"> Next </a> *@

                                                </div>
                                            </div>

                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="modal fade model-filter-home" id="AddInspection" tabindex="-1" aria-labelledby="AddInspectionLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="exampleModalLabel">Add Inspection</h1>
                <button class="btn-close" type="button" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="AddInspectionbody">
                <div class="container-fluid">
                    <div class="row">
                        <div class="col-lg-12 mb-2">
                            <div class="form-group">
                                <label>Inspection Name</label>
                                <input class="form-control" type="text" id="txtInspection_en">
                            </div>
                        </div>
                        <div class="col-lg-12 mb-2">
                            <div class="form-group">
                                <label>Inspection Description</label>
                                <input class="form-control" type="text" id="txtInspection_Desc">
                            </div>
                        </div>

                        <div class="col-lg-12 mb-2">
                            <div class="form-check form-switch d-flex p-0">
                                <input class="mx-2 form-check-input" id="chkActive_InspName" type="checkbox" role="switch">
                                <label class="form-check-label" for="flexSwitchCheckDefault">Active</label>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer justify-content-start">
                <button class="btn btn-primary btn-apply rounded-pill col-12" type="button" onclick="createInspinfo()" >ADD </button>
            </div>
        </div>
    </div>
</div>
<div class="modal fade model-filter-home" id="AddInspDepartment" tabindex="-1" aria-labelledby="AddInspDepartmentLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="exampleModalLabel">Add Inspection Type</h1>
                <button class="btn-close" type="button" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="AddInspDepartmentbody">
                <div class="container-fluid">
                    <div class="row">
                        <div class="col-lg-12 mb-2">
                            <div class="form-group">
                                <label>Inspection Type Name</label>
                                <input class="form-control" type="text" id="txtInspDep_en">
                            </div>
                        </div>

                        <div class="col-lg-12 mb-2">
                            <div class="form-check form-switch d-flex p-0">
                                <input class="mx-2 form-check-input" id="chkActive_InspDep" type="checkbox" role="switch">
                                <label class="form-check-label" for="flexSwitchCheckDefault">Active</label>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer justify-content-start">
                <button class="btn btn-primary btn-apply rounded-pill col-12" type="button" onclick="createInspDep()" >ADD </button>
            </div>
        </div>
    </div>
</div>
<div class="modal fade model-filter-home" id="AddInspQuestion" tabindex="-1" aria-labelledby="AddInspQuestionLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="exampleModalLabel">Add Inspection Question</h1>
                <button class="btn-close" type="button" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="AddInspQuestionbody">
                <div class="container-fluid">
                    <div class="row">
                        <div class="col-lg-12 mb-2">
                            <div class="form-group">
                                <label>Inspection Question</label>
                                <input class="form-control" type="text" id="txtInspQuestion_en">
                            </div>
                        </div>

                        <div class="col-lg-12 mb-2">
                            <div class="form-check form-switch d-flex p-0">
                                <input class="mx-2 form-check-input" id="chkActive_InspQuestion" type="checkbox" role="switch">
                                <label class="form-check-label" for="flexSwitchCheckDefault">Active</label>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer justify-content-start">
                <button class="btn btn-primary btn-apply rounded-pill col-12" type="button" onclick="createInspQues()" >ADD </button>
            </div>
        </div>
    </div>
</div>



@section Scripts {
    <script>
        $(document).ready(function () {

            //drawtable();

            FillInspName();
            FillQuestion();

        });

        function drawtable(inspinfoid, insptype) {
            try {
                // Destroy the existing DataTable, if it exists
                if ($.fn.DataTable.isDataTable("#dataTablesInspQues")) {
                    $("#dataTablesInspQues").DataTable().destroy();
                }

                $("#dataTablesInspQues").DataTable({
                    serverSide: true,
                    stateSave: false,
                    processing: true,
                    info: false,
                    searching: false,
                    lengthChange: false,
                    language: {
                        processing: '<i class="fa fa-spinner fa-spin fa-3x fa-fw"></i><span class="sr-only">Loading...</span> '
                    },
                    ajax: {
                        url: '/InspectionSetup/GetInspLkQues',
                        type: 'POST',
                        cache: false,
                        data: { inspinfoid: inspinfoid, insptype: insptype },
                    },
                    order: [[3, 'asc']],
                    // columnDefs: [
                    //     // {
                    //     // targets: [0, 1],
                    //     // visible: false,
                    //     // searchable: false
                    //     // },
                    //     {
                    //         targets: 9, // This targets the last column
                    //         orderable: false // Disable sorting for the last column
                    //     }
                    // ],
                    columns: [

                        { "data": "linkPQID", "name": "LinkPQID", "className": "d-none", "visible": false, "searchable": false },
                        { "data": "questionID", "name": "QuestionID", "className": "d-none", "visible": false, "searchable": false },

                        { "data": "questionDisplay", "name": "QuestionDisplay" },
                        { "data": "inspDepName", "name": "InspDepName" },
                        { "data": "inspName", "name": "InspName" },
                        // {
                        //     "name": "bActive ", "render": function (data, type, row) {
                        //         var rowDiv = '';

                        //         if (row.bActive == 0) {

                        //             rowDiv = `<div class="Availability"> <i class="fa-solid fa-circle-exclamation text-warning me-2"></i></div>`;
                        //         }
                        //         else {
                        //             rowDiv = `<div class="Availability"><i class="fa-solid fa-circle-check text-success me-2"> </i></div >`;
                        //         }

                        //         return rowDiv;
                        //     }
                        // },
                        {

                            "name": "linkPQID", "render": function (data, type, row) {
                                return `<a class="text-danger js-itemsrowdelete" data-linkPQID="${row.linkPQID}"
                                                        data-questionID="${row.questionID}" data-partID="${row.partID}" data-inspectionId="${row.inspectionId}"
                                                                        href="javascript:" onclick="deleteLinkQuestion(this)"> <i class="fa-solid fa-trash-can"></i></a>`;

                            }
                            //<a class="js-itemsrowedit" data-linkPQID="${row.linkPQID}"
                            //             data- questionID="${row.questionID}" data - partID="${row.partID}" data - inspectionId="${row.inspectionId}"
                            //                     href = "javascript:" onclick = "editlinkPQID(this)" > <i class="fa-regular fa-pen-to-square" > </i></a >
                        }
                    ],
                    createdRow: function (row, data, dataIndex) {
                        $(row).find('td').each(function (index) {
                            $(this).attr('data-label', $('#dataTablesInspQues th').eq(index).text());
                        });
                    }
                });

            }
            //<a class="js-itemsrowdetail" data-inspinfoid="${row.inspInfoId}" href="javascript:" onclick="detailInspinfo(this)"> <i class="fa-solid fa-eye"></i></a>
            catch (err) {
                //console.error("An error occurred:", err.message);
                ShowMsgError(err.message);


            }

        }


        function createInspinfo() {
            var objData = {};
            var isActive = 0;


            var txtInspection_en = $('#txtInspection_en').val();
            var txtInspection_Desc = $("#txtInspection_Desc").val();
            var chkActive = $("#chkActive_InspName");

            if (!txtInspection_en) {// } == null)  || txtitem_en == "" || txtitem_en == undefined) {
                ShowMsgError('Please enter Inspection name');
                return false;
            }

            if (chkActive.is(':checked') == true) {
                isActive = 1;
            }

            objData = {
                bActive: isActive,
                InspName: txtInspection_en,
                InspDesc: txtInspection_Desc
            }

            var jsonData = JSON.stringify(objData);

            $.ajax({
                url: '@Url.Action("CreateInspinfo", "InspectionSetup")',
                type: 'POST',
                dataType: 'json',
                data: { "dataObj": jsonData },
                success: function (data) {

                    if (data != null) {
                        if (data.success == true) {
                            // alert(data.returnData);
                            $("#AddInspection").modal('hide');
                            clearModalLinkQuestion();
                            //Aziz
                            FillInspName();
                        }
                        else {
                            ShowMsgError(data.returnData);
                            $("#AddInspection").modal('show');
                        }

                    }

                },
                error: function (error) {

                    ShowMsgError(error);
                }
            });


        }
        function createInspDep() {
            var objData = {};
            var isActive = 0;


            var txtInspDep_en = $('#txtInspDep_en').val();
            var chkActive = $("#chkActive_InspName");
            var inspInfoId = $("#ddlInspectionName").val();

            if (!inspInfoId || inspInfoId == "0" || inspInfoId == undefined) {
                ShowMsgError('Please select Inspection name');
                return false;
            }
            if (!txtInspDep_en) {// } == null)  || txtitem_en == "" || txtitem_en == undefined) {
                ShowMsgError('Please enter Inspection Type name');
                return false;
            }

            if (chkActive.is(':checked') == true) {
                isActive = 1;
            }

            objData = {
                bActive: isActive,
                inspDepName: txtInspDep_en,
                InspInfoId: inspInfoId
            }

            var jsonData = JSON.stringify(objData);

            $.ajax({
                url: '@Url.Action("CreateInspDepartment", "InspectionSetup")',
                type: 'POST',
                dataType: 'json',
                data: { "dataObj": jsonData },
                success: function (data) {

                    if (data != null) {
                        if (data.success == true) {
                            // alert(data.returnData);
                            $("#AddInspDepartment").modal('hide');
                            clearModalLinkQuestion();
                            //Aziz
                            FillInspDepartment(inspInfoId);
                        }
                        else {
                            ShowMsgError(data.returnData);
                            $("#AddInspDepartment").modal('show');
                        }

                    }

                },
                error: function (error) {

                    ShowMsgError(error);
                }
            });


        }
        function createInspQues() {
            var objData = {};
            var isActive = 0;


            var txtInspQuestion_en = $('#txtInspQuestion_en').val();
            var chkActive = $("#chkActive_InspQuestion");

            if (!txtInspQuestion_en) {// } == null)  || txtitem_en == "" || txtitem_en == undefined) {
                ShowMsgError('Please enter Question');
                return false;
            }

            if (chkActive.is(':checked') == true) {
                isActive = 1;
            }

            objData = {
                bActive: isActive,
                QuestionDisplay: txtInspQuestion_en

            }

            var jsonData = JSON.stringify(objData);

            $.ajax({
                url: '@Url.Action("CreateInspQuestion", "InspectionSetup")',
                type: 'POST',
                dataType: 'json',
                data: { "dataObj": jsonData },
                success: function (data) {

                    if (data != null) {
                        if (data.success == true) {
                            // alert(data.returnData);
                            $("#AddInspQuestion").modal('hide');
                            clearModalLinkQuestion();
                            //Aziz
                            FillQuestion();
                        }
                        else {
                            ShowMsgError(data.returnData);
                            $("#AddInspQuestion").modal('show');
                        }

                    }

                },
                error: function (error) {

                    ShowMsgError(error);
                }
            });


        }

        function clearModalLinkQuestion() {

            $('#txtInspection_en').val();
            $("#txtInspection_Desc").val();
            $("#chkActive_InspName").attr("checked", true);

            $('#txtInspDep_en').val();
            $("#chkActive_InspDep").attr("checked", true);

            $('#txtInspQuestion_en').val();
            $("#chkActive_InspQuestion").attr("checked", true);

        }

        function FillInspName() {
            //alert("ok");
            var ddlobject = $("#ddlInspectionName");

            $.ajax({
                url: '@Url.Action("GetInspectionInfo", "InspectionSetup")',
                type: "GET",
                dataType: "json",
                cache: false,
                success: function (result) {
                    if (result.success) {
                        ddlobject.empty();
                        // ddlobject.append($("<option></option>")
                        //     .attr("value", "0")
                        //     .text("Select Inspection Name"));
                        result.returnData.forEach(function (item) {
                            ddlobject.append($("<option></option>")
                                .attr("value", item.value)
                                .text(item.text));
                        });
                        var InspInfoId = $("#ddlInspectionName").val();
                        FillInspDepartment(InspInfoId);
                    } else {
                        ShowMsgError(result.message);
                    }
                },
                error: function (err) {
                    return false;
                }
            });
        }
        function FillInspDepartment(inspInfoId) {
            var ddlobject = $("#ddlInspectionType");

            $.ajax({
                url: '@Url.Action("GetInspectionDepById", "InspectionSetup")',
                type: "GET",
                dataType: "json",
                cache: false,
                data: { InspInfoId: inspInfoId },
                success: function (result) {
                    if (result.success) {
                        ddlobject.empty();
                        ddlobject.append($("<option></option>")
                            .attr("value", "0")
                            .text("Select Inspection Type"));
                        result.returnData.forEach(function (item) {
                            ddlobject.append($("<option></option>")
                                .attr("value", item.value)
                                .text(item.text));
                        });
                    } else {
                        ShowMsgError(result.message);
                    }
                },
                error: function (err) {
                    return false;
                }
            });
        }
        function FillQuestion() {
            var ddlobject = $("#ddlInspectionQuestion");

            $.ajax({
                url: '@Url.Action("GetInspectionQuestion", "InspectionSetup")',
                type: "GET",
                dataType: "json",
                cache: false,
                //data: { Department: inspInfoId },
                success: function (result) {
                    if (result.success) {
                        ddlobject.empty();
                        ddlobject.append($("<option></option>")
                            .attr("value", "0")
                            .text("Select Question"));
                        result.returnData.forEach(function (item) {
                            ddlobject.append($("<option></option>")
                                .attr("value", item.value)
                                .text(item.text));
                        });
                    } else {
                        ShowMsgError(result.message);
                    }
                },
                error: function (err) {
                    return false;
                }
            });
        }
        function inspectionNameChange() {

            var InspInfoId = $("#ddlInspectionName").val();
            FillInspDepartment(InspInfoId);
        }

        function inspectionTypeChange() {
            var inspinfoid = $("#ddlInspectionName").val();
            var insptype = $("#ddlInspectionType").val();

            drawtable(inspinfoid, insptype);
        }

        function AddLinkQuestion() {

            var objData = {};

            var inspinfoid = $("#ddlInspectionName").val();
            var insptypeid = $("#ddlInspectionType").val();
            var inspQuesid = $("#ddlInspectionQuestion").val();

            if (inspinfoid == null || inspinfoid == "" || inspinfoid == undefined) {
                ShowMsgError('Please select Inspection name');
                return false;
            }
            if (insptypeid == null || insptypeid == "" || insptypeid == undefined) {
                ShowMsgError('Please select Inspection Type');
                return false;
            }
            if (inspQuesid == null || inspQuesid == "" || inspQuesid == undefined) {
                ShowMsgError('Please select Inspection Question');
                return false;
            }

            objData = {
                PartID: insptypeid,
                QuestionID: inspQuesid,
                InspectionId: inspinfoid,
                isPublish: 0
            }

            var jsonData = JSON.stringify(objData);

            $.ajax({
                url: '@Url.Action("InsertInspLinkPartQuestion", "InspectionSetup")',
                type: 'POST',
                dataType: 'json',
                data: { "dataObj": jsonData },
                success: function (data) {

                    if (data != null) {
                        if (data.success == true) {
                            var inspinfoid = $("#ddlInspectionName").val();
                            var insptype = $("#ddlInspectionType").val();

                            drawtable(inspinfoid, insptype);
                        }
                        else {
                            ShowMsgError(data.returnData);

                        }

                    }

                },
                error: function (error) {

                    ShowMsgError(error);
                }
            });
        }

        function deleteLinkQuestion(clickedElement) {
            var btnEdit = $(clickedElement);
            var linkpqid = btnEdit.data("linkpqid");


            Swal.fire({
                title: 'Are you sure delete Question from inspection ?',
                text: "",
                //icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, delete it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: '@Url.Action("DeleteInspLinkPartQuestion", "InspectionSetup")',
                        type: 'POST',
                        data: { linkPQID: linkpqid },
                        success: function (data) {
                            if (data != null) {
                                if (data.success == true) {
                                    drawtable();
                                }
                                else {
                                    // alert(data.returnData);

                                }
                            }
                        },
                        error: function (error) {

                            ShowMsgError(error);
                        }
                    });
                }
            })
        }

        function PublishLinkQuestion() {

            // var table = $('#dataTablesInspQues');//.DataTable();

            // // Array to store row IDs
            // var rowIds = [];
            // debugger;
            // // Loop through each row in the DataTable
            // table.rows().every(function () {
            //     var data = this.data(); // Get data of the current row
            //     var rowlinkpq = data[0];    // Assuming the first column contains the ID

            //     // Add row ID to the array
            //     rowIds.push(rowlinkpq);
            // });
            // console.log(rowIds);
            // $.ajax({
            //     url: '@Url.Action("PublishInspLinkPartQuestion", "InspectionSetup")',
            //     type: 'POST',
            //     dataType: 'json',
            //     data: { "dataObj": jsonData },
            //     success: function (data) {

            //         if (data != null) {
            //             if (data.success == true) {
            //                 // alert(data.returnData);

            //                 clearModalLinkQuestion();

            //             }
            //             else {
            //                 alert(data.returnData);

            //             }

            //         }

            //     },
            //     error: function (error) {

            //         alert(error);
            //     }
            // });
        }
    </script>
}